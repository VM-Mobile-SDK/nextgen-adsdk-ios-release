{"metadata":{"categoryPathComponent":"Meet-AdSDK","category":"Meet AdSDK","role":"project","title":"User tagging and conversion tracking"},"kind":"project","hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"],["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements"}]},"sections":[{"kind":"hero","title":"User tagging and conversion tracking","estimatedTimeInMinutes":30,"chapter":"Working with the built-in capabilities of the SDK","content":[{"inlineContent":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"type":"paragraph"},{"inlineContent":[{"text":"We will continue to build the app, so be sure to follow all the previous tutorials. You can download ","type":"text"},{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking","isActive":true,"type":"reference"},{"type":"text","text":" which has already implemented all steps from this tutorial."}],"type":"paragraph"}]},{"tasks":[{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Before considering user tagging and conversion tracking, we need to prepare the application to have appropriate places to perform tagging and tracking. In this section, we will add an option to purchase the product shown in the inline ad.","type":"text"}]}]}],"stepsSection":[{"code":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s create a new ","type":"text"},{"type":"codeVoice","code":"Basket.swift"},{"type":"text","text":" file in "},{"type":"codeVoice","code":"Screens"},{"type":"text","text":"."}]}],"runtimePreview":null,"type":"step","media":"01-user-tagging-conversion-tracking-screenshot.png"},{"caption":[],"code":"01-user-tagging-conversion-tracking.swift","type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In it, we create a screen where the user will buy the product, displaying the id, price, quantity, and total cost."}]}],"runtimePreview":"02-user-tagging-conversion-tracking-screenshot.png"},{"caption":[],"media":null,"code":"02-user-tagging-conversion-tracking.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Now we return to the ","type":"text"},{"type":"codeVoice","code":"AdCell.swift"},{"type":"text","text":" file. First, let’s focus on the "},{"type":"codeVoice","code":"AdCellViewModel"},{"text":".","type":"text"}]}],"type":"step"},{"type":"step","caption":[],"runtimePreview":null,"code":"03-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s add a random price for the product and keep the reference to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" in the property."}]}],"media":null},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"All that remains is to change the "},{"type":"codeVoice","code":"AdCell"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"code":"04-user-tagging-conversion-tracking.swift","caption":[]},{"code":"05-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We add a price and a button that will take us to the basket. Now our app is ready to create purchases!"}]}],"runtimePreview":"03-user-tagging-conversion-tracking-screenshot.png","caption":[],"type":"step","media":null}],"anchor":"Preparing-the-app","title":"Preparing the app"},{"anchor":"User-tagging","title":"User tagging","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"The SDK provides functionality to put a user identifier, e.g. cookie id, into a retargeting segment (to tag a user). This allows advertisers to create a segment of users with certain interests or affinities, and to re-advertise to this segment (retargeting). In this section, we will look at how we can perform a tag request using the AdSDK."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"runtimePreview":null,"media":null,"code":"06-user-tagging-conversion-tracking.swift","type":"step","content":[{"inlineContent":[{"text":"Let’s continue with the ","type":"text"},{"type":"codeVoice","code":"AdCell.swift"},{"text":" file. Let’s imagine a situation where we need to tag a user when he adds an item to the basket.","type":"text"}],"type":"paragraph"}],"caption":[]},{"media":null,"type":"step","content":[{"inlineContent":[{"text":"To do this, first of all, we add the ","type":"text"},{"code":"onBasket","type":"codeVoice"},{"text":" method to the ","type":"text"},{"type":"codeVoice","code":"AdCellViewModel"},{"type":"text","text":", and call it when the "},{"code":"NavigationLink","type":"codeVoice"},{"type":"text","text":" opens the "},{"type":"codeVoice","code":"Basket"},{"type":"text","text":" screen."}],"type":"paragraph"}],"caption":[],"code":"07-user-tagging-conversion-tracking.swift","runtimePreview":null},{"code":"08-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Now we’re ready to tag the user. You use ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"type":"text","text":" to describe the tagging request. It consists of tags with a "},{"type":"codeVoice","code":"key"},{"type":"text","text":", a "},{"type":"codeVoice","code":"subkey"},{"text":", and a ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":". In our case, we’ll use "},{"type":"codeVoice","code":"key"},{"type":"text","text":" as the name of our store, "},{"type":"codeVoice","code":"subkey"},{"type":"text","text":" as the product category, and "},{"code":"value","type":"codeVoice"},{"text":" as our product id.","type":"text"}]}],"caption":[{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"In real projects, the advertiser should provide you with information on the tag parameters.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"media":null,"type":"step","runtimePreview":null},{"caption":[],"type":"step","media":null,"code":"09-user-tagging-conversion-tracking.swift","content":[{"inlineContent":[{"type":"text","text":"You can perform a user tagging request with "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/tagUser(request:)","isActive":true,"type":"reference"},{"type":"text","text":" method. Congratulations, now our app can tag the user who added the item to the basket!"}],"type":"paragraph"}],"runtimePreview":null}]},{"contentSection":[{"content":[{"inlineContent":[{"text":"The SDK allows you to track conversions. This is useful for advertisers, as conversion details would be available in posttracking reports via the adserver. In this section, we will look at how we can perform a tracking request using the AdSDK.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"Conversion-tracking","title":"Conversion tracking","stepsSection":[{"code":"10-user-tagging-conversion-tracking.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s open the "},{"type":"codeVoice","code":"Basket.swift"},{"text":" file and focus on the ","type":"text"},{"code":"BasketViewModel","type":"codeVoice"},{"text":". The conversion, in our case, is the purchase of an item in the basket.","type":"text"}]}],"type":"step","caption":[],"media":null},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"A conversion tracking request is described using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". In it, we pass all the parameters related to the purchase."}],"type":"paragraph"}],"type":"step","code":"11-user-tagging-conversion-tracking.swift","media":null,"caption":[{"content":[{"inlineContent":[{"type":"text","text":"In real projects, the advertiser should provide you with information on the "},{"type":"codeVoice","code":"landingpageId"},{"type":"text","text":" and "},{"type":"codeVoice","code":"trackingspotId"},{"text":" parameters.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"}]},{"media":null,"code":"12-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we can perform the tracking request. We use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/trackingRequest(_:)"},{"type":"text","text":" for this purpose, and in case of an error, we display it on the screen. Congratulations, our app can now track purchase!"}]}],"type":"step","caption":[],"runtimePreview":null}]}],"kind":"tasks"},{"title":"Global parameters for all request types","featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"We already know how to create and perform "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference","isActive":true},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"kind":"callToAction","action":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","overridingTitle":"Get started"}}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking"]}],"references":{"09-user-tagging-conversion-tracking.swift":{"fileName":"AdCell.swift","identifier":"09-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59}],"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","        let request = TagRequest(","            [.init(key: \"MyTutorialStore\", subkey: \"Movies\", value: \"\\(id)\")],","            timeout: nil \/\/ Can be skipped","        )","","        do {","            try await service.tagUser(request: request)","        } catch {","            print(\"Error during user tagging: \\(error.localizedDescription)\")","        }","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK#AdService-creation":{"abstract":[{"text":"This tutorial will guide you the first steps for working with the ","type":"text"},{"type":"codeVoice","code":"AdSDK"},{"type":"text","text":" - creating an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":"."}],"type":"section","title":"AdService creation","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk#AdService-creation","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation"},"02-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"02-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"AdCell.swift","highlights":[],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    let id: Int","    var state: CellState = .loading","","    private var advertisement: Advertisement?","","    init(id: Int, _ service: AdService, _ request: AdRequest) async {","        self.id = id","","        do {","            let advertisement = try await getAdvertisement(service, request)","            self.advertisement = advertisement","","            let ratio = advertisement.metadata?.aspectRatio ?? 2","","            state = .loaded(advertisement, aspectRatio: ratio)","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ service: AdService,","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/*...*\/}","}","\/\/ ..."]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Tracking-ad-visibility":{"abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section","title":"Tracking ad visibility","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Tracking-ad-visibility","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility"},"03-user-tagging-conversion-tracking-screenshot.png":{"identifier":"03-user-tagging-conversion-tracking-screenshot.png","type":"image","alt":"A phone screen with several advertising banners showing different characters from films and TV series. At the bottom of each one is the price in euros and a button that says ‘Add to basket’.","variants":[{"url":"\/images\/com.adsdk.core\/03-user-tagging-conversion-tracking-screenshot.png","traits":["1x","light"]}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","kind":"symbol","url":"\/documentation\/adsdkcore\/adservice","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"type":"topic","title":"AdService","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AdService","kind":"identifier"}],"navigatorTitle":[{"text":"AdService","kind":"identifier"}]},"01-user-tagging-conversion-tracking-screenshot.png":{"identifier":"01-user-tagging-conversion-tracking-screenshot.png","alt":"Xcode window showing the correct project structure with Screens\/Basket.swift.","type":"image","variants":[{"url":"\/images\/com.adsdk.core\/01-user-tagging-conversion-tracking-screenshot.png","traits":["1x","light"]}]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","abstract":[{"type":"text","text":"A key object interface describing the advertisement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"url":"\/documentation\/adsdkcore\/advertisement","title":"Advertisement","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Advertisement"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"abstract":[{"type":"text","text":"Describes a request to load an advertisement."}],"url":"\/documentation\/adsdkcore\/adrequest","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AdRequest","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AdRequest"}],"type":"topic","title":"AdRequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"role":"pseudoSymbol","title":"Creating a presentation layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"type":"topic","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","title":"Create and display inline ads","role":"project","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","estimatedTime":"45min","kind":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest"},{"text":", and ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","isActive":true,"type":"reference"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"estimatedTime":"20min","title":"Global parameters for all request types","type":"topic","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types","kind":"project","role":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Modifying-global-parameters":{"abstract":[{"type":"text","text":"We already know how to create and perform "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference","isActive":true},{"type":"text","text":", and "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","isActive":true},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"type":"section","title":"Modifying global parameters","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Modifying-global-parameters","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"type":"section","title":"Registering a renderer in the SDK","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"url":"\/tutorials\/meet-adsdk","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI.","type":"text"}],"kind":"overview","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","title":"Meet nextgen AdSDK","role":"overview"},"doc://com.adsdk.core/documentation/AdSDKCore/TrackingRequest":{"type":"topic","abstract":[{"type":"text","text":"Trigger a request for conversion tracking."}],"url":"\/documentation\/adsdkcore\/trackingrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","role":"symbol","title":"TrackingRequest","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TrackingRequest","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TrackingRequest"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Preparing-the-app":{"abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"type":"section","title":"Preparing the app","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Preparing-the-app","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},"https://github.com/VM-Mobile-SDK/nextgen-adsdk-ios-tutorial/tree/built-in-capabilities/user-and-conversion-tracking":{"title":"this project","identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking","type":"link","titleInlineContent":[{"text":"this project","type":"text"}],"url":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking":{"type":"topic","estimatedTime":"30min","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","role":"project","title":"User tagging and conversion tracking","kind":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements":{"role":"pseudoSymbol","title":"Creating and displaying a list of advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-and-displaying-a-list-of-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad":{"kind":"project","estimatedTime":"25min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","title":"Create and display interstitial ad","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"type":"topic","role":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events":{"role":"pseudoSymbol","title":"Monitor and process advertising tracking events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tracking-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" and how we can interact with them."}],"type":"section","kind":"section"},"02-user-tagging-conversion-tracking-screenshot.png":{"identifier":"02-user-tagging-conversion-tracking-screenshot.png","alt":"A phone screen with a form that displays a shopping cart with id, price, quantity, total cost, and a purchase button.","type":"image","variants":[{"url":"\/images\/com.adsdk.core\/02-user-tagging-conversion-tracking-screenshot.png","traits":["1x","light"]}]},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Limiting-the-cache-size":{"type":"section","abstract":[{"text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache.","type":"text"}],"title":"Limiting the cache size","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Limiting-the-cache-size","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements":{"abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"type":"section","title":"Creating interstitial advertisements","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Creating-interstitial-advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#User-tagging":{"role":"pseudoSymbol","title":"User tagging","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#User-tagging","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"title":"Creating customised advertising","estimatedTime":"1hr 30min","kind":"project","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","type":"topic","role":"project","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}]},"11-user-tagging-conversion-tracking.swift":{"fileName":"Basket.swift","identifier":"11-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31}],"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","        let request = TrackingRequest(","            landingpageId: .zero,","            trackingspotId: .zero,","            orderId: \"My purchase id\",","            price: Float(price), \/\/ Can be skipped","            total: Float(total), \/\/ Can be skipped","            quantity: UInt32(quantity), \/\/ Can be skipped","            itemNumber: \"\\(id)\", \/\/ Can be skipped","            description: nil, \/\/ Can be skipped","            timeout: nil \/\/ Can be skipped","        )","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Preparing-the-app":{"role":"pseudoSymbol","title":"Preparing the app","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Preparing-the-app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest"},{"text":", and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"reference"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"abstract":[],"type":"topic","title":"Working with the built-in capabilities of the SDK","role":"article","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","kind":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad":{"type":"section","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"type":"text","text":" and how we can interact with them."}],"title":"Request to unload or hide ad","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Request-to-unload-or-hide-ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","kind":"section"},"05-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"05-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"AdCell.swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","\/\/ ..."]},"10-user-tagging-conversion-tracking.swift":{"fileName":"Basket.swift","identifier":"10-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[],"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler":{"abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"type":"section","title":"Creating a target URL handler","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Creating-a-target-URL-handler","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Advanced-management-of-advertising-resources":{"role":"pseudoSymbol","title":"Advanced management of advertising resources","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Advanced-management-of-advertising-resources","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events":{"role":"pseudoSymbol","title":"Monitoring of ad-related events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitoring-of-ad-related-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs":{"type":"topic","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls","title":"Custom handling of target tap URLs","role":"project","abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","estimatedTime":"20min","kind":"project"},"01-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"01-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"Basket.swift","highlights":[],"content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Basket: View {","    @State var viewModel: BasketViewModel","","    var body: some View {","        Form {","            Section {","                LabeledContent(\"Item id\", value: \"\\(viewModel.id)\")","                LabeledContent(\"Price\", value: \"€\\(viewModel.price)\")","                LabeledContent(\"Quantity\", value: \"\\(viewModel.quantity)\")","                Button(\"+\", action: viewModel.onIncreaseQuantity)","                Button(\"-\", action: viewModel.onDecreaseQuantity)","                LabeledContent(\"Total\", value: \"€\\(viewModel.total)\")","            }","","            Section {","                Button(\"Purchase\") {","                    Task { await viewModel.onPurchase() }","                }","            }","","            if let error = viewModel.error {","                Text(error)","                    .listRowInsets(EdgeInsets())","                    .foregroundStyle(.red)","                    .frame(","                        maxWidth: .infinity,","                        maxHeight: .infinity,","                        alignment: .center","                    )","                    .background(Color(UIColor.systemGroupedBackground))","            }","        }","        .navigationTitle(\"Basket\")","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {","        self.id = id","        self.price = price","        self.service = service","    }","}","","extension BasketViewModel {","    func onIncreaseQuantity() { quantity += 1 }","    func onDecreaseQuantity() {","        guard quantity > 1 else { return }","","        quantity -= 1","    }","","    func onPurchase() async {","","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad":{"role":"pseudoSymbol","title":"Defining the size of the inline ad","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Defining-the-size-of-the-inline-ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Conversion-tracking":{"abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"type":"section","title":"Conversion tracking","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Conversion-tracking","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events":{"type":"section","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" and how we can interact with them."}],"title":"Monitor and process custom advertising events","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-custom-advertising-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","kind":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/TagRequest":{"abstract":[{"type":"text","text":"Describes a request to “tag” a user."}],"url":"\/documentation\/adsdkcore\/tagrequest","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TagRequest","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TagRequest"}],"type":"topic","title":"TagRequest"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"type":"topic","abstract":[],"title":"Extending the SDK with your custom advertisements","role":"article","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","kind":"article"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/trackingRequest(_:)":{"type":"topic","abstract":[{"type":"text","text":"Trigger a request for conversion tracking."}],"url":"\/documentation\/adsdkcore\/adservice\/trackingrequest(_:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/trackingRequest(_:)","role":"symbol","title":"trackingRequest(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trackingRequest","kind":"identifier"},{"kind":"text","text":"("},{"text":"TrackingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore15TrackingRequestV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A5ErrorO","text":"AdError"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK":{"type":"topic","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk","title":"First steps for working with AdSDK","role":"project","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"type":"codeVoice","code":"AdSDK"},{"type":"text","text":" - creating an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","estimatedTime":"15min","kind":"project"},"08-user-tagging-conversion-tracking.swift":{"fileName":"AdCell.swift","identifier":"08-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":50},{"line":51},{"line":52},{"line":53}],"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","        let request = TagRequest(","            [.init(key: \"MyTutorialStore\", subkey: \"Movies\", value: \"\\(id)\")],","            timeout: nil \/\/ Can be skipped","        )","    }","}"]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/tagUser(request:)":{"abstract":[{"type":"text","text":"Trigger a request to “tag” a user."}],"url":"\/documentation\/adsdkcore\/adservice\/taguser(request:)","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/tagUser(request:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tagUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9AdSDKCore10TagRequestV","kind":"typeIdentifier","text":"TagRequest"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A5ErrorO","text":"AdError","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","title":"tagUser(request:)"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad":{"abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"type":"section","title":"Hiding interstitial ad","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Hiding-interstitial-ad","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events":{"type":"topic","title":"Monitor and process ad-related events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","kind":"project","role":"project","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"estimatedTime":"1hr 0min"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Event-management":{"type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Event management","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Event-management","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-inline-advertisements":{"abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section","title":"Creating inline advertisements","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-inline-advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"role":"pseudoSymbol","title":"Creating a business layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section","kind":"section"},"04-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"04-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"AdCell.swift","highlights":[],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","\/\/ ..."]},"03-user-tagging-conversion-tracking.swift":{"fileName":"AdCell.swift","identifier":"03-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[{"line":24},{"line":25},{"line":32},{"line":35}],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    let id: Int","    let price: Int = .random(in: 10...200)","    let service: AdService","    var state: CellState = .loading","","    private var advertisement: Advertisement?","","    init(id: Int, _ service: AdService, _ request: AdRequest) async {","        self.id = id","        self.service = service","","        do {","            let advertisement = try await getAdvertisement(request)","            self.advertisement = advertisement","","            let ratio = advertisement.metadata?.aspectRatio ?? 2","","            state = .loaded(advertisement, aspectRatio: ratio)","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/*...*\/}","}","\/\/ ..."]},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app":{"abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"type":"section","title":"Preparing the app","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Preparing-the-app","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management":{"estimatedTime":"10min","role":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management","type":"topic","url":"\/tutorials\/adsdkcore\/adsdk-cache-management","title":"AdSDK Cache Management","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"kind":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad":{"type":"section","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"title":"Presenting interstitial ad","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial-ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","kind":"section"},"12-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"12-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"Basket.swift","highlights":[{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37}],"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","        let request = TrackingRequest(","            landingpageId: .zero,","            trackingspotId: .zero,","            orderId: \"My purchase id\",","            price: Float(price), \/\/ Can be skipped","            total: Float(total), \/\/ Can be skipped","            quantity: UInt32(quantity), \/\/ Can be skipped","            itemNumber: \"\\(id)\", \/\/ Can be skipped","            description: nil, \/\/ Can be skipped","            timeout: nil \/\/ Can be skipped","        )","","        do {","            try await service.trackingRequest(request)","        } catch {","            self.error = error.localizedDescription","        }","    }","}"]},"06-user-tagging-conversion-tracking.swift":{"fileName":"AdCell.swift","identifier":"06-user-tagging-conversion-tracking.swift","fileType":"swift","type":"file","syntax":"swift","highlights":[],"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Flushing-the-cache":{"type":"section","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"title":"Flushing the cache","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Flushing-the-cache","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","kind":"section"},"07-user-tagging-conversion-tracking.swift":{"type":"file","identifier":"07-user-tagging-conversion-tracking.swift","syntax":"swift","fileType":"swift","fileName":"AdCell.swift","highlights":[{"line":24},{"line":48},{"line":49},{"line":50},{"line":51}],"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events":{"abstract":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"type":"section","title":"Monitor and process advertising tap events","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tap-events","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"}]}]}