{"metadata":{"modules":[{"name":"AdSDKCore"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"silentTap","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":")","kind":"text"}],"symbolKind":"case","title":"TapEvent.silentTap(_:)","externalID":"s:9AdSDKCore8TapEventO06silentC0yAC10Foundation3URLVcACmF","roleHeading":"Case"},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL whose redirect should be processed."}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This processing approach is the most different from all the others, as it only processes the redirect of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the passed URL, and ignores the target URL. This approach can only be useful if you know the target"},{"type":"text","text":" "},{"type":"text","text":"URL and want to hide the redirect that the ad server uses for tracking from the user."}]},{"inlineContent":[{"type":"text","text":"For example, you know that you have the following URL that should be processed when an advert is"},{"type":"text","text":" "},{"type":"text","text":"tapped:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/adition.com\/redi?lid=0&userid=0&sr=0&gk=0&clickurl=target.com"}]},{"inlineContent":[{"text":"With the query item ","type":"text"},{"code":"clickurl","type":"codeVoice"},{"text":", you know that your target URL to be shown to the user is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"https:\/\/target.com."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"In this case, you can pass the URL for the redirect to the SDK for processing as","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)"},{"text":" and the target URL as ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)"},{"type":"text","text":". Using this approach, the user"},{"text":" ","type":"text"},{"type":"text","text":"will not see the redirect, but it will be executed without  their knowledge."}]},{"code":["nonisolated func onTap() async {","    let components = URLComponents(","        url: url,","        resolvingAgainstBaseURL: false","    )","","    let targetURL = components?","        .queryItems?","        .last { $0.name == \"clickurl\" }?","        .value","","    guard let targetURL else {","        \/\/ If we can't get target URL – just process tap with passed URL.","        try? await adControllerDelegate?.performTap(.tapURL(.init(url)))","        return","    }","","    \/\/ If we can – we process redirect and tap as a separate processes.","    await withTaskGroup(","        of: Void.self","    ) { [weak adControllerDelegate] group in","        group.addTask {","            \/\/ Process redirect","            try? await adControllerDelegate?.performTap(","                .silentTap(url)","            )","        }","","        group.addTask {","            \/\/ Process tap","            try? await adControllerDelegate?.performTap(","                .tapURL(.init(url))","            )","        }","","        try await group.waitForAll()","    }","}"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"abstract":[{"text":"Processes the redirect of the passed URL without processing the target URL.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/adsdkcore\/tapevent\/silenttap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent","role":"symbol","abstract":[{"type":"text","text":"An enum with all types of ad tap processing."}],"type":"topic","kind":"symbol","url":"\/documentation\/adsdkcore\/tapevent","title":"TapEvent","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TapEvent","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TapEvent"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TapURL":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TapURL","kind":"identifier"}],"title":"TapURL","url":"\/documentation\/adsdkcore\/tapurl","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","abstract":[{"text":"A structure that describes the URL associated with an advertisement tap event.","type":"text"}],"navigatorTitle":[{"text":"TapURL","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/tapURL(_:)":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","role":"symbol","abstract":[{"type":"text","text":"Processing tap using passed "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","url":"\/documentation\/adsdkcore\/tapevent\/tapurl(_:)","title":"TapEvent.tapURL(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tapURL"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore6TapURLV","text":"TapURL"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/silentTap(_:)":{"type":"topic","url":"\/documentation\/adsdkcore\/tapevent\/silenttap(_:)","abstract":[{"type":"text","text":"Processes the redirect of the passed URL without processing the target URL."}],"title":"TapEvent.silentTap(_:)","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"silentTap"},{"text":"(","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"url":"\/documentation\/adsdkcore","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","role":"collection","type":"topic","title":"AdSDKCore"}}}