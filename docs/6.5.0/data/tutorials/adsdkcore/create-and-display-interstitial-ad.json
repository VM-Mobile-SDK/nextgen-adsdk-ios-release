{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad"},"kind":"project","variants":[{"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"],["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]],"modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache"}]}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","kind":"task"}]}]}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We will continue to build the app, so be sure to follow all the previous tutorials. You can download "},{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","type":"reference","isActive":true},{"text":" which has already implemented all steps from this tutorial.","type":"text"}]}],"title":"Create and display interstitial ad","kind":"hero","chapter":"Working with the built-in capabilities of the SDK","estimatedTimeInMinutes":25},{"tasks":[{"stepsSection":[{"content":[{"inlineContent":[{"text":"Let’s create ","type":"text"},{"code":"Interstitial.swift","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"Screens","type":"codeVoice"},{"text":" folder. This will be the screen where we will display the ad.","type":"text"}],"type":"paragraph"}],"caption":[],"code":null,"runtimePreview":null,"media":"01-create-display-interstitial-ads-screenshot.png","type":"step"},{"content":[{"inlineContent":[{"text":"Create an ","type":"text"},{"code":"Interstitial","type":"codeVoice"},{"text":" and an ","type":"text"},{"code":"InterstitialViewModel","type":"codeVoice"},{"text":". We pass the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true,"type":"reference"},{"text":" to the initializer, which will be used to create the ad later.","type":"text"}],"type":"paragraph"}],"caption":[],"code":"01-create-display-interstitial-ad.swift","runtimePreview":null,"media":null,"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Interstitial ad is created in the same way as inline ads, with one difference – the "},{"type":"codeVoice","code":"placementType"},{"type":"text","text":" parameter must be "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"type":"text","text":". Let’s create an ad when the "},{"type":"codeVoice","code":"View"},{"type":"text","text":" is displayed."}]}],"caption":[],"code":"02-create-display-interstitial-ad.swift","runtimePreview":null,"media":null,"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Now go back to ","type":"text"},{"code":"Main.swift","type":"codeVoice"},{"text":".","type":"text"}]}],"caption":[],"code":"03-create-display-interstitial-ad.swift","runtimePreview":null,"media":null,"type":"step"},{"content":[{"inlineContent":[{"type":"text","text":"Add navigation to your new screen and launch the app. If you did everything correctly, you’ll see that the ad has been successfully loaded."}],"type":"paragraph"}],"caption":[],"code":"04-create-display-interstitial-ad.swift","runtimePreview":"02-create-display-interstitial-ads-screenshot.png","media":null,"type":"step"}],"contentSection":[{"content":[{"inlineContent":[{"text":"We have already created an inline ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"text":" on a previous chapter. In this section, we will create an interstitial ad for the future presentation.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"Creating-interstitial-advertisements","title":"Creating interstitial advertisements"},{"stepsSection":[{"type":"step","code":"05-create-display-interstitial-ad.swift","content":[{"inlineContent":[{"text":"Let’s continue the development in our ","type":"text"},{"type":"codeVoice","code":"Interstitial"},{"text":" file.","type":"text"}],"type":"paragraph"}],"media":null,"caption":[],"runtimePreview":null},{"type":"step","code":"06-create-display-interstitial-ad.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now let’s add a button that will show our ad if it is loaded."}]}],"media":null,"caption":[],"runtimePreview":null},{"type":"step","code":"07-create-display-interstitial-ad.swift","content":[{"inlineContent":[{"text":"The AdSDK provides the enum ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState","isActive":true},{"text":" to control the state of the interstitial ad presentation. Add it to the ","type":"text"},{"code":"InterstitialViewModel","type":"codeVoice"},{"text":". We will change it when the button is tapped.","type":"text"}],"type":"paragraph"}],"media":null,"caption":[{"style":"note","content":[{"inlineContent":[{"type":"text","text":"If you don’t use the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement\/reload()","isActive":true},{"type":"text","text":" method, your "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" object will always be loaded, which means that the ad will be presented to the user immediately when state changed to the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)","isActive":true},{"type":"text","text":". Otherwise, the ad will be presented immediately after loading."}],"type":"paragraph"}],"type":"aside","name":"Note"}],"runtimePreview":null},{"type":"step","code":"08-create-display-interstitial-ad.swift","content":[{"type":"paragraph","inlineContent":[{"text":"The last thing we need is a presentation layer. To display interstitial ads, ","type":"text"},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"text":" has an ","type":"text"},{"code":".interstitial(_: AdInterstitialState)","type":"codeVoice"},{"text":" modifier. Add it to your ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" and pass the state value from the ","type":"text"},{"code":"InterstitialViewModel","type":"codeVoice"},{"text":".","type":"text"}]}],"media":null,"caption":[],"runtimePreview":null},{"type":"step","code":"08-create-display-interstitial-ad.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Now, if you launch the app, you should see an advert when you tap on the button. Congratulations! But wait, we can’t hide it. We’ll look at how to do this in the next section.","type":"text"}]}],"media":null,"caption":[],"runtimePreview":"03-create-display-interstitial-ads-screenshot.png"}],"contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We learnt how to create interstitial advertisement. Now, we are ready to present our interstitial ad. In this section, we will display interstitial ad in our app."}]}],"kind":"contentAndMedia"}],"anchor":"Presenting-interstitial-ad","title":"Presenting interstitial ad"},{"stepsSection":[{"type":"step","content":[{"inlineContent":[{"text":"Let’s continue the development in our ","type":"text"},{"code":"Interstitial","type":"codeVoice"},{"text":" file. We could hide the ad by simply changing the ","type":"text"},{"code":"interstitialState","type":"codeVoice"},{"text":" to ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden","isActive":true,"type":"reference"},{"text":", but we don’t know when to change it.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"media":null,"code":"09-create-display-interstitial-ad.swift","caption":[]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"In order to understand when ad should be hidden, we need to use ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate","isActive":true,"type":"reference"},{"text":" and pass it when creating ads.","type":"text"}]}],"runtimePreview":null,"media":null,"code":"10-create-display-interstitial-ad.swift","caption":[{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate","isActive":true,"type":"reference"},{"text":" is used not only for events related to hiding interstitials. We will look at it in more detail in a ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","overridingTitleInlineContent":[{"type":"text","text":"separate tutorial"}],"isActive":true,"type":"reference","overridingTitle":"separate tutorial"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"The method we are interested in is "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()","isActive":true},{"type":"text","text":". We need to implement it to make sure that the ad is hidden when it is needed. You can launch the app and make sure it works. Congratulations, we can now display interstitials in our app!"}],"type":"paragraph"}],"runtimePreview":null,"media":null,"code":"11-create-display-interstitial-ad.swift","caption":[{"style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You should not change the state from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)"},{"type":"text","text":" to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden"},{"type":"text","text":" without using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()"},{"type":"text","text":" method. The advert itself knows when it needs to be hidden and asks you to hide it using this method."}]}],"name":"Important"}]}],"contentSection":[{"content":[{"inlineContent":[{"text":"We managed to successfully show the ad, but we would like to be able to close interstitial. In this section, we implement this logic.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"anchor":"Hiding-interstitial-ad","title":"Hiding interstitial ad"}],"kind":"tasks"},{"title":"Monitor and process ad-related events","kind":"callToAction","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" and how we can interact with them."}],"action":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","overridingTitle":"Get started","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true},"featuredEyebrow":"Tutorial"}],"metadata":{"categoryPathComponent":"Meet-AdSDK","role":"project","title":"Create and display interstitial ad","category":"Meet AdSDK"},"references":{"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management","title":"AdSDK Cache Management","role":"project","estimatedTime":"10min","type":"topic","kind":"project","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"url":"\/tutorials\/adsdkcore\/adsdk-cache-management"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"navigatorTitle":[{"kind":"identifier","text":"AdService"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdService"}],"abstract":[{"type":"text","text":"A key object for configuring your advertisements."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","url":"\/documentation\/adsdkcore\/adservice","role":"symbol","type":"topic","kind":"symbol","title":"AdService"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Preparing-the-app":{"type":"section","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference"},{"text":", and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"reference"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"role":"pseudoSymbol","title":"Preparing the app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Preparing-the-app","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler":{"kind":"section","type":"section","title":"Creating a target URL handler","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Creating-a-target-URL-handler","abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"estimatedTime":"1hr 30min","type":"topic","role":"project","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"kind":"project","title":"Creating customised advertising"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","title":"Global parameters for all request types","role":"project","type":"topic","kind":"project","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types","abstract":[{"type":"text","text":"We already know how to create and perform "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest"},{"type":"text","text":", and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"estimatedTime":"20min"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements":{"abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"kind":"section","title":"Creating interstitial advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Creating-interstitial-advertisements","type":"section"},"03-create-display-interstitial-ads-screenshot.png":{"type":"image","variants":[{"url":"\/images\/com.adsdk.core\/03-create-display-interstitial-ads-screenshot.png","traits":["1x","light"]}],"identifier":"03-create-display-interstitial-ads-screenshot.png","alt":"An iPhone screen displaying a full-screen advert with characters from the Matrix film."},"09-create-display-interstitial-ad.swift":{"content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: nil \/\/ Can be skipped","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","\/\/ ..."],"fileName":"Interstitial.swift","type":"file","identifier":"09-create-display-interstitial-ad.swift","fileType":"swift","highlights":[],"syntax":"swift"},"01-create-display-interstitial-ad.swift":{"syntax":"swift","fileName":"Interstitial.swift","identifier":"01-create-display-interstitial-ad.swift","fileType":"swift","type":"file","highlights":[],"content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","","    init(_ service: AdService) {","        self.service = service","    }","}","","\/\/ MARK: - Models","extension InterstitialViewModel {","    enum ViewState {","        case loading, ready","        case error(String)","    }","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK#AdService-creation":{"title":"AdService creation","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk#AdService-creation","role":"pseudoSymbol","type":"section","kind":"section","abstract":[{"text":"This tutorial will guide you the first steps for working with the ","type":"text"},{"type":"codeVoice","code":"AdSDK"},{"text":" - creating an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app":{"abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Preparing-the-app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","title":"Preparing the app","type":"section","kind":"section","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","type":"topic","kind":"project","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"title":"User tagging and conversion tracking","role":"project","estimatedTime":"30min"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad":{"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","title":"Presenting interstitial ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial-ad","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"role":"pseudoSymbol","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Tracking-ad-visibility":{"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Tracking-ad-visibility","type":"section","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"role":"pseudoSymbol","kind":"section","title":"Tracking ad visibility","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"kind":"symbol","title":"Advertisement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Advertisement","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/advertisement","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"topic","abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"url":"\/documentation\/adsdkcore\/adrequest","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","abstract":[{"type":"text","text":"Describes a request to load an advertisement."}],"title":"AdRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdRequest"}],"navigatorTitle":[{"kind":"identifier","text":"AdRequest"}],"type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad":{"type":"section","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Hiding-interstitial-ad","title":"Hiding interstitial ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","type":"section","kind":"section","title":"Monitor and process custom advertising events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-custom-advertising-events","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" and how we can interact with them."}],"role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","type":"topic","kind":"overview","url":"\/tutorials\/meet-adsdk","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"title":"Meet nextgen AdSDK","role":"overview"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Preparing-the-app":{"url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Preparing-the-app","type":"section","role":"pseudoSymbol","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"kind":"section","title":"Preparing the app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},"04-create-display-interstitial-ad.swift":{"fileName":"Main.swift","fileType":"swift","highlights":[{"line":18},{"line":19},{"line":20},{"line":21}],"type":"file","identifier":"04-create-display-interstitial-ad.swift","syntax":"swift","content":["\/\/ ...","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            NavigationStack {","                switch viewModel.state {","                case .loading:","                    Text(\"Loading\")","                        .task { await viewModel.configure() }","                case .ready(let adService):","                    VStack {","                        NavigationLink(\"Inline Ads List\") {","                            InlineList(viewModel: .init(adService))","                        }","","                        NavigationLink(\"Interstitial Screen\") {","                            Interstitial(viewModel: .init(adService))","                        }","                    }","","                case .error(let description):","                    Text(\"Error: \\(description)\")","                }","            }","        }","    }","}","\/\/ ..."]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement/reload()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reload","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"AdError","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A5ErrorO"},{"text":")","kind":"text"}],"kind":"symbol","title":"reload()","role":"symbol","required":true,"type":"topic","abstract":[{"type":"text","text":"Reloads advertisement."}],"url":"\/documentation\/adsdkcore\/advertisement\/reload()","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement\/reload()"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events":{"title":"Monitor and process advertising tap events","kind":"section","type":"section","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" and how we can interact with them."}],"role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tap-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Event-management":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Event-management","kind":"section","role":"pseudoSymbol","title":"Event management","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState/hidden":{"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden","title":"AdInterstitialState.hidden","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hidden","kind":"identifier"}],"type":"topic","abstract":[{"text":"Advertising should be hidden.","type":"text"}],"url":"\/documentation\/adsdkcore\/adinterstitialstate\/hidden"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad":{"abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"role":"project","title":"Create and display interstitial ad","kind":"project","type":"topic","estimatedTime":"25min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"kind":"section","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","role":"pseudoSymbol","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","title":"Creating a presentation layer"},"07-create-display-interstitial-ad.swift":{"fileName":"Interstitial.swift","fileType":"swift","highlights":[{"line":27},{"line":40},{"line":41},{"line":49}],"type":"file","identifier":"07-create-display-interstitial-ad.swift","syntax":"swift","content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","","        interstitialState = .presentedIfLoaded(advertisement)","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ...",""]},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","role":"article","kind":"article","title":"Working with the built-in capabilities of the SDK","type":"topic","abstract":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad":{"role":"pseudoSymbol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","type":"section","title":"Request to unload or hide ad","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Request-to-unload-or-hide-ad","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad":{"type":"section","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Defining-the-size-of-the-inline-ad","title":"Defining the size of the inline ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad"},"01-create-display-interstitial-ads-screenshot.png":{"alt":"Xcode window showing the correct project structure with Screens\/Interstitial.swift.","variants":[{"url":"\/images\/com.adsdk.core\/01-create-display-interstitial-ads-screenshot.png","traits":["1x","light"]}],"type":"image","identifier":"01-create-display-interstitial-ads-screenshot.png"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements":{"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-and-displaying-a-list-of-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section","title":"Creating and displaying a list of advertisements","role":"pseudoSymbol","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-inline-advertisements":{"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-inline-advertisements","kind":"section","role":"pseudoSymbol","title":"Creating inline advertisements","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState/presentedIfLoaded(_:)":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)","abstract":[{"text":"If the ad is loaded, it should be presented.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"presentedIfLoaded","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore13AdvertisementP","text":"Advertisement","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"AdInterstitialState.presentedIfLoaded(_:)","url":"\/documentation\/adsdkcore\/adinterstitialstate\/presentedifloaded(_:)","kind":"symbol","role":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Advanced-management-of-advertising-resources":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","type":"section","kind":"section","title":"Advanced management of advertising resources","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Advanced-management-of-advertising-resources","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section","title":"Creating a business layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"section","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TagRequest":{"abstract":[{"type":"text","text":"Describes a request to “tag” a user."}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TagRequest","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"TagRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/tagrequest","title":"TagRequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Modifying-global-parameters":{"type":"section","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","isActive":true,"type":"reference"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"role":"pseudoSymbol","title":"Modifying global parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Modifying-global-parameters","kind":"section"},"https://github.com/VM-Mobile-SDK/nextgen-adsdk-ios-tutorial/tree/built-in-capabilities/create-interstitial-ad":{"type":"link","url":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","title":"this project","titleInlineContent":[{"type":"text","text":"this project"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#User-tagging":{"kind":"section","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","title":"User tagging","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#User-tagging"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"title":"Create and display inline ads","kind":"project","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","role":"project","estimatedTime":"45min","type":"topic","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads"},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState","abstract":[{"type":"text","text":"Enum to control the state of the "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","type":"reference","isActive":true},{"type":"text","text":" ad presentation."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdInterstitialState","kind":"identifier"}],"title":"AdInterstitialState","url":"\/documentation\/adsdkcore\/adinterstitialstate","type":"topic","navigatorTitle":[{"text":"AdInterstitialState","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs":{"title":"Custom handling of target tap URLs","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls","abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","role":"project","type":"topic","estimatedTime":"20min","kind":"project"},"doc://com.adsdk.core/documentation/AdSDKCore/TrackingRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TrackingRequest"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"topic","kind":"symbol","url":"\/documentation\/adsdkcore\/trackingrequest","title":"TrackingRequest","abstract":[{"type":"text","text":"Trigger a request for conversion tracking."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TrackingRequest"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdEventDelegate":{"type":"topic","role":"symbol","url":"\/documentation\/adsdkcore\/adeventdelegate","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdEventDelegate","kind":"identifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate","title":"AdEventDelegate","navigatorTitle":[{"text":"AdEventDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"An interface of object for tracking and processing "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" related events."}]},"10-create-display-interstitial-ad.swift":{"fileName":"Interstitial.swift","fileType":"swift","highlights":[{"line":31},{"line":41},{"line":42},{"line":43}],"type":"file","identifier":"10-create-display-interstitial-ad.swift","syntax":"swift","content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: self","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","extension InterstitialViewModel: AdEventDelegate {","}","\/\/ ..."]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events":{"kind":"section","title":"Monitor and process advertising tracking events","role":"pseudoSymbol","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tracking-events","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" and how we can interact with them."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","type":"section","title":"Registering a renderer in the SDK","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","role":"pseudoSymbol","kind":"section"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"type":"topic","title":"Extending the SDK with your custom advertisements","role":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","abstract":[],"url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","kind":"article"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Conversion-tracking":{"abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","type":"section","title":"Conversion tracking","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Conversion-tracking"},"02-create-display-interstitial-ad.swift":{"highlights":[{"line":13},{"line":14},{"line":30},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":75}],"identifier":"02-create-display-interstitial-ad.swift","fileType":"swift","type":"file","syntax":"swift","fileName":"Interstitial.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: nil \/\/ Can be skipped","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","\/\/ MARK: - Models","extension InterstitialViewModel {","    enum ViewState {","        case loading, ready","        case error(String)","    }","}",""]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"kind":"symbol","abstract":[{"type":"text","text":"Ad created to be displayed as a full screen cover."}],"role":"symbol","title":"AdPlacementType.interstitial","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interstitial","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial"},"11-create-display-interstitial-ad.swift":{"content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: self","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","extension InterstitialViewModel: AdEventDelegate {","    func unloadRequest() { interstitialState = .hidden }","}","\/\/ ..."],"fileName":"Interstitial.swift","syntax":"swift","highlights":[{"line":43}],"type":"file","identifier":"11-create-display-interstitial-ad.swift","fileType":"swift"},"05-create-display-interstitial-ad.swift":{"syntax":"swift","fileName":"Interstitial.swift","identifier":"05-create-display-interstitial-ad.swift","fileType":"swift","type":"file","highlights":[],"content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ..."]},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK":{"role":"project","kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"type":"text","text":" - creating an "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference"},{"type":"text","text":"."}],"type":"topic","title":"First steps for working with AdSDK","estimatedTime":"15min","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","role":"project","estimatedTime":"1hr 0min","kind":"project","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" and how we can interact with them."}],"type":"topic","title":"Monitor and process ad-related events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEventDelegate/unloadRequest()":{"defaultImplementations":1,"title":"unloadRequest()","kind":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/adeventdelegate\/unloadrequest()","required":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()","abstract":[{"text":"A method of notifying the app that an ad wants to be closed.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unloadRequest","kind":"identifier"},{"text":"()","kind":"text"}]},"02-create-display-interstitial-ads-screenshot.png":{"alt":"An iPhone screen displaying a text, that ad is loaded.","variants":[{"url":"\/images\/com.adsdk.core\/02-create-display-interstitial-ads-screenshot.png","traits":["1x","light"]}],"type":"image","identifier":"02-create-display-interstitial-ads-screenshot.png"},"06-create-display-interstitial-ad.swift":{"identifier":"06-create-display-interstitial-ad.swift","type":"file","fileType":"swift","content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ..."],"highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":37},{"line":38},{"line":39},{"line":40}],"fileName":"Interstitial.swift","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Flushing-the-cache":{"kind":"section","title":"Flushing the cache","role":"pseudoSymbol","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Flushing-the-cache"},"03-create-display-interstitial-ad.swift":{"identifier":"03-create-display-interstitial-ad.swift","fileType":"swift","content":["\/\/ ...","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            NavigationStack {","                switch viewModel.state {","                case .loading:","                    Text(\"Loading\")","                        .task { await viewModel.configure() }","                case .ready(let adService):","                    VStack {","                        NavigationLink(\"Inline Ads List\") {","                            InlineList(viewModel: .init(adService))","                        }","                    }","","                case .error(let description):","                    Text(\"Error: \\(description)\")","                }","            }","        }","    }","}","\/\/ ..."],"fileName":"Main.swift","highlights":[],"type":"file","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Limiting-the-cache-size":{"abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"role":"pseudoSymbol","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"section","type":"section","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Limiting-the-cache-size","title":"Limiting the cache size"},"08-create-display-interstitial-ad.swift":{"identifier":"08-create-display-interstitial-ad.swift","fileName":"Interstitial.swift","syntax":"swift","type":"file","content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","            .interstitial($viewModel.interstitialState)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","","        interstitialState = .presentedIfLoaded(advertisement)","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ...","",""],"fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events":{"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","role":"pseudoSymbol","title":"Monitoring of ad-related events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitoring-of-ad-related-events","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" and how we can interact with them.","type":"text"}],"kind":"section"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"}]}]}