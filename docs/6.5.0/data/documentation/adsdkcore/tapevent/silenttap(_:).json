{"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The URL whose redirect should be processed.","type":"text"}],"type":"paragraph"}],"name":"url"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This processing approach is the most different from all the others, as it only processes the redirect of"},{"type":"text","text":" "},{"type":"text","text":"the passed URL, and ignores the target URL. This approach can only be useful if you know the target"},{"type":"text","text":" "},{"type":"text","text":"URL and want to hide the redirect that the ad server uses for tracking from the user."}]},{"type":"paragraph","inlineContent":[{"text":"For example, you know that you have the following URL that should be processed when an advert is","type":"text"},{"text":" ","type":"text"},{"text":"tapped:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/adition.com\/redi?lid=0&userid=0&sr=0&gk=0&clickurl=target.com"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With the query item "},{"code":"clickurl","type":"codeVoice"},{"type":"text","text":", you know that your target URL to be shown to the user is"},{"type":"text","text":" "},{"type":"text","text":"https:\/\/target.com."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, you can pass the URL for the redirect to the SDK for processing as"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","type":"reference","isActive":true},{"type":"text","text":" and the target URL as "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","type":"reference","isActive":true},{"type":"text","text":". Using this approach, the user"},{"type":"text","text":" "},{"type":"text","text":"will not see the redirect, but it will be executed without  their knowledge."}]},{"syntax":"swift","type":"codeListing","code":["nonisolated func onTap() async {","    let components = URLComponents(","        url: url,","        resolvingAgainstBaseURL: false","    )","","    let targetURL = components?","        .queryItems?","        .last { $0.name == \"clickurl\" }?","        .value","","    guard let targetURL else {","        \/\/ If we can't get target URL – just process tap with passed URL.","        try? await adControllerDelegate?.performTap(.tapURL(.init(url)))","        return","    }","","    \/\/ If we can – we process redirect and tap as a separate processes.","    await withTaskGroup(","        of: Void.self","    ) { [weak adControllerDelegate] group in","        group.addTask {","            \/\/ Process redirect","            try? await adControllerDelegate?.performTap(","                .silentTap(url)","            )","        }","","        group.addTask {","            \/\/ Process tap","            try? await adControllerDelegate?.performTap(","                .tapURL(.init(url))","            )","        }","","        try await group.waitForAll()","    }","}"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Processes the redirect of the passed URL without processing the target URL.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)"},"metadata":{"modules":[{"name":"AdSDKCore"}],"role":"symbol","roleHeading":"Case","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"silentTap"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":")"}],"externalID":"s:9AdSDKCore8TapEventO06silentC0yAC10Foundation3URLVcACmF","symbolKind":"case","title":"TapEvent.silentTap(_:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/tapevent\/silenttap(_:)"]}],"sections":[],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/TapURL":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TapURL","kind":"identifier"}],"abstract":[{"type":"text","text":"A structure that describes the URL associated with an advertisement tap event."}],"url":"\/documentation\/adsdkcore\/tapurl","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","kind":"symbol","title":"TapURL","navigatorTitle":[{"text":"TapURL","kind":"identifier"}],"role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/tapURL(_:)":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","abstract":[{"text":"Processing tap using passed ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"TapEvent.tapURL(_:)","url":"\/documentation\/adsdkcore\/tapevent\/tapurl(_:)","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tapURL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TapURL","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore6TapURLV"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/silentTap(_:)":{"abstract":[{"text":"Processes the redirect of the passed URL without processing the target URL.","type":"text"}],"url":"\/documentation\/adsdkcore\/tapevent\/silenttap(_:)","kind":"symbol","title":"TapEvent.silentTap(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"role":"collection","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","kind":"symbol","url":"\/documentation\/adsdkcore","title":"AdSDKCore","type":"topic","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent":{"title":"TapEvent","navigatorTitle":[{"text":"TapEvent","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An enum with all types of ad tap processing."}],"url":"\/documentation\/adsdkcore\/tapevent","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TapEvent","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"}}}