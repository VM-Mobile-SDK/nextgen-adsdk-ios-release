{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk"]}],"kind":"project","sections":[{"title":"First steps for working with AdSDK","estimatedTimeInMinutes":15,"chapter":"Working with the built-in capabilities of the SDK","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"text":" - creating an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can download "},{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/first-step","type":"reference","isActive":true},{"text":" which has already implemented all steps from this tutorial.","type":"text"}]}]},{"kind":"tasks","tasks":[{"title":"AdService creation","stepsSection":[{"type":"step","code":null,"runtimePreview":null,"media":"01-first-steps-for-working-with-adsdk-screenshot.png","caption":[{"style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Also, make sure that the project is configured to work with the Swift 6.","type":"text"}]}],"type":"aside","name":"Important"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s create a new IOS project and connect the "},{"type":"codeVoice","code":"AdSDKCore"},{"type":"text","text":" and "},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"text":" packages to it.","type":"text"}]}]},{"media":null,"code":"01-first-steps-for-working-with-adsdk.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Rename your ","type":"text"},{"code":"App","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Main","type":"codeVoice"},{"text":", and create a ","type":"text"},{"type":"codeVoice","code":"MainViewModel"},{"type":"text","text":" for it, with the state of the application: "},{"type":"codeVoice","code":"loading"},{"type":"text","text":", "},{"code":"ready","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"error"},{"type":"text","text":"."}]}]},{"caption":[],"runtimePreview":null,"media":null,"type":"step","code":"02-first-steps-for-working-with-adsdk.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"configure"},{"text":" function to the ","type":"text"},{"type":"codeVoice","code":"MainViewModel"},{"type":"text","text":". We will use it for future configuration of our app."}]}]},{"runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"text":"The only mandatory parameter when creating ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true},{"text":" is the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","isActive":true},{"text":". Network ID is the ID of your advertising account.","type":"text"}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"The entry point into the SDK is the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" class. This is the first thing we should create, as it will be used to generate advertisements in the future. To do this, import "},{"type":"codeVoice","code":"AdSDKCore"},{"text":" and ","type":"text"},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"text":", then add the initialization code for the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"type":"text","text":" inside the "},{"type":"codeVoice","code":"MainViewModel"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"code":"03-first-steps-for-working-with-adsdk.swift"},{"code":"04-first-steps-for-working-with-adsdk.swift","runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"The SDK supports only one type of error - "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError","type":"reference"},{"text":". Since we just want to display errors to the user, create ","type":"text"},{"code":"AdError+Extensions.swift","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"Core\/Extensions","type":"codeVoice"},{"type":"text","text":", and add "},{"type":"codeVoice","code":"LocalisedError"},{"type":"text","text":" confirmance for "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Now let’s get back to ","type":"text"},{"code":"Main.swift","type":"codeVoice"},{"type":"text","text":" file."}]}],"runtimePreview":null,"caption":[],"media":null,"code":"03-first-steps-for-working-with-adsdk.swift","type":"step"},{"code":"05-first-steps-for-working-with-adsdk.swift","caption":[{"inlineContent":[{"text":"Now, if you’ve done everything right, you should see the “Ready” message when you launch the app. This completes the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" configuration, congratulations!"}],"type":"paragraph"}],"type":"step","runtimePreview":"02-first-steps-for-working-with-adsdk-screenshot.png","content":[{"type":"paragraph","inlineContent":[{"text":"Since ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError","type":"reference","isActive":true},{"type":"text","text":" now confirm to the "},{"type":"codeVoice","code":"LocalisedError"},{"text":", we can pass it to the user for display.","type":"text"}]}],"media":null}],"anchor":"AdService-creation","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create and configure ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" for the subsequent creation and loading of advertisements."}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}]}]},{"action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","type":"reference","overridingTitle":"Get started"},"kind":"callToAction","featuredEyebrow":"Tutorial","title":"Create and display inline ads","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}]}],"metadata":{"role":"project","title":"First steps for working with AdSDK","category":"Meet AdSDK","categoryPathComponent":"Meet-AdSDK"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","projects":[{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources"}]}]}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"]]},"identifier":{"url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Limiting-the-cache-size":{"abstract":[{"text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache.","type":"text"}],"kind":"section","title":"Limiting the cache size","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Limiting-the-cache-size","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Advertisement"}],"title":"Advertisement","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","url":"\/documentation\/adsdkcore\/advertisement","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Advertisement"}],"kind":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a business layer","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Tracking-ad-visibility":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Tracking-ad-visibility","type":"section","kind":"section","role":"pseudoSymbol","title":"Tracking ad visibility"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Preparing-the-app","abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"title":"Preparing the app","role":"pseudoSymbol"},"03-first-steps-for-working-with-adsdk.swift":{"fileName":"Main.swift","identifier":"03-first-steps-for-working-with-adsdk.swift","syntax":"swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","                    .task { await viewModel.configure() }","            case .ready(let adService):","                Text(\"Ready\")","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class MainViewModel {","    var state: AppState = .loading","","    private var service: AdService?","}","","extension MainViewModel {","    func configure() async {","        do {","            let service = try await AdService(","                networkID: 1800,","                cacheSize: 100, \/\/ Can be skipped","                configurationTimeout: 60 \/\/ Can be skipped","            )","","            self.service = service","            state = .ready(service)","","        } catch {","            \/\/ Error during configuration","        }","    }","}","","\/\/ MARK: - Models","extension MainViewModel {","    enum AppState {","        case loading","        case ready(AdService)","        case error","    }","}"],"type":"file","fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-inline-advertisements":{"abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"kind":"section","title":"Creating inline advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-inline-advertisements","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements"},"05-first-steps-for-working-with-adsdk.swift":{"syntax":"swift","fileType":"swift","type":"file","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","                    .task { await viewModel.configure() }","            case .ready(let adService):","                Text(\"Ready\")","            case .error(let description):","                Text(\"Error: \\(description)\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class MainViewModel {","    var state: AppState = .loading","","    private var service: AdService?","}","","extension MainViewModel {","    func configure() async {","        do {","            let service = try await AdService(","                networkID: 1800,","                cacheSize: 100, \/\/ Can be skipped","                configurationTimeout: 60 \/\/ Can be skipped","            )","","            self.service = service","            state = .ready(service)","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","\/\/ MARK: - Models","extension MainViewModel {","    enum AppState {","        case loading","        case ready(AdService)","        case error(String)","    }","}"],"identifier":"05-first-steps-for-working-with-adsdk.swift","fileName":"Main.swift","highlights":[{"line":18},{"line":19},{"line":47},{"line":57}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad":{"abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" and how we can interact with them."}],"kind":"section","title":"Request to unload or hide ad","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Request-to-unload-or-hide-ad","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events":{"abstract":[{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"title":"Monitor and process ad-related events","role":"project","estimatedTime":"1hr 0min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","type":"topic","kind":"project","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Flushing-the-cache":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"title":"Flushing the cache","kind":"section","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Flushing-the-cache"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"title":"Working with the built-in capabilities of the SDK","type":"topic","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","kind":"article","role":"article","abstract":[],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Defining-the-size-of-the-inline-ad","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"title":"Defining the size of the inline ad","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#User-tagging":{"type":"section","title":"User tagging","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#User-tagging","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements":{"title":"Creating and displaying a list of advertisements","type":"section","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-and-displaying-a-list-of-advertisements","kind":"section","role":"pseudoSymbol","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"kind":"section","title":"Creating a presentation layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer"},"02-first-steps-for-working-with-adsdk.swift":{"fileName":"Main.swift","identifier":"02-first-steps-for-working-with-adsdk.swift","syntax":"swift","content":["import SwiftUI","","\/\/ MARK: - View","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","                    .task { await viewModel.configure() }","            case .ready:","                Text(\"Ready\")","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class MainViewModel {","    var state: AppState = .loading","}","","extension MainViewModel {","    func configure() async {","","    }","}","","\/\/ MARK: - Models","extension MainViewModel {","    enum AppState {","        case loading","        case ready","        case error","    }","}"],"type":"file","fileType":"swift","highlights":[{"line":13},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35}]},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Conversion-tracking":{"title":"Conversion tracking","type":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Conversion-tracking","kind":"section","role":"pseudoSymbol","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Preparing-the-app":{"url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Preparing-the-app","type":"section","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"title":"Preparing the app","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TrackingRequest":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","title":"TrackingRequest","navigatorTitle":[{"text":"TrackingRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Trigger a request for conversion tracking.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TrackingRequest"}],"kind":"symbol","url":"\/documentation\/adsdkcore\/trackingrequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Modifying-global-parameters":{"title":"Modifying global parameters","type":"section","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Modifying-global-parameters","kind":"section","role":"pseudoSymbol","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":", ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference","isActive":true},{"type":"text","text":", and "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"reference"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters"},"04-first-steps-for-working-with-adsdk.swift":{"syntax":"swift","fileType":"swift","type":"file","content":["import AdSDKCore","","extension AdError: @retroactive LocalizedError {","    public var errorDescription: String? {","        switch self {","        case .rendererInit(let name):","            \"Renderer \\(name) failed during init\"","        case .adLoadingInProgress:","            \"Action performed during ad loading\"","        case .adIsNotLoaded:","            \"Ad is not loaded yet\"","        case .reference:","            \"Reference to some object or ad was lost\"","        case .decoding(let description):","            \"Decoding error: \\(description)\"","        case .unknownRenderer(let name):","            \"Unknown renderer received: \\(name)\"","        case let .mismatchPlacementType(name, contentUnit, learningTag):","            \"\"\"","            Mismatch placement type for \\(name).","            ContentUnit: \\(String(describing: contentUnit))","            LearningTag: \\(String(describing: learningTag))","            \"\"\"","        case .customRendererError(let message):","            \"Renderer error: \\(message)\"","        case .clientIssue:","            \"Network error: client issue\"","        case .serverIssue:","            \"Network error: server issue\"","        case .unknownStatusCode:","            \"Network: unknown status code\"","        case .badURL(let description):","            \"Network: bad URL passed. \\(description)\"","        case .timedOut:","            \"Network: connection timeout\"","        case .hostConnectionIssue:","            \"Network: host connection issue\"","        case .tooManyRedirects:","            \"Network: to many redirects\"","        case .resourceUnavailable:","            \"Network: resource unavailable\"","        case .reachabilityUnavailable:","            \"Network: internet connection issue\"","        case .unspecifiedNetworkError(let description):","            \"Network: \\(description)\"","        case .serverErrorResponse(let message):","            \"Network: Server responded with error. \\(message)\"","        case .bannerNotFound:","            \"Server responded with system default\"","        case .invalidContentType:","            \"Invalid content type from the server\"","        case .incorrectURL(let url):","            \"Trying to process invalid URL \\(url.absoluteString)\"","        case .redirectProcessing(let url):","            \"Failed during redirect processing: \\(url)\"","        case .invalidTapURL(let url):","            \"Invalid tap URL: \\(url)\"","        case .invalidTargetURL(let url):","            \"Target URL is not valid: \\(url)\"","        case .assetWithIdNotFound(let id):","            \"Asset id is not found: \\(id)\"","        case .documentDirectoryAccess(let message):","            \"Document directory access error: \\(message)\"","        case let .cacheWriteAction(path, message):","            \"Cache error on write for path: \\(path). \\(message)\"","        case let .cacheRemoveAction(path, message):","            \"Cache error on remove for path: \\(path). \\(message)\"","        case let .cacheOverflow(dataSize, cacheSize):","            \"Cache overflow. Passed data size: \\(dataSize), cache size: \\(cacheSize)\"","        case .invalidAssetName(let name):","            \"Invalid asset name passed during caching. Name: \\(name).\"","        @unknown default:","            \"Unknown error\"","        }","    }","}"],"identifier":"04-first-steps-for-working-with-adsdk.swift","fileName":"AdError+Extensions.swift","highlights":[]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"title":"networkID","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","url":"\/documentation\/adsdkcore\/adservice\/networkid","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"networkID"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"The unique identifier of the ad network."}],"role":"symbol","kind":"symbol","type":"topic"},"01-first-steps-for-working-with-adsdk.swift":{"fileName":"Main.swift","identifier":"01-first-steps-for-working-with-adsdk.swift","syntax":"swift","content":["import SwiftUI","","\/\/ MARK: - View","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","            case .ready:","                Text(\"Ready\")","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class MainViewModel {","    var state: AppState = .loading","}","","\/\/ MARK: - Models","extension MainViewModel {","    enum AppState {","        case loading","        case ready","        case error","    }","}"],"type":"file","fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events":{"abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" and how we can interact with them."}],"kind":"section","title":"Monitor and process advertising tap events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tap-events","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"role":"article","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","title":"Extending the SDK with your custom advertisements"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events":{"title":"Monitoring of ad-related events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitoring-of-ad-related-events","kind":"section","role":"pseudoSymbol","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"text":" and how we can interact with them.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs":{"title":"Custom handling of target tap URLs","type":"topic","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls","kind":"project","role":"project","abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","estimatedTime":"20min"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Advanced-management-of-advertising-resources":{"abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Advanced-management-of-advertising-resources","role":"pseudoSymbol","type":"section","title":"Advanced management of advertising resources"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial-ad","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"title":"Presenting interstitial ad","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tracking-events","abstract":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"title":"Monitor and process advertising tracking events","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"url":"\/documentation\/adsdkcore\/adrequest","abstract":[{"text":"Describes a request to load an advertisement.","type":"text"}],"title":"AdRequest","role":"symbol","navigatorTitle":[{"text":"AdRequest","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdRequest"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},"https://github.com/VM-Mobile-SDK/nextgen-adsdk-ios-tutorial/tree/built-in-capabilities/first-step":{"url":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/first-step","type":"link","identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/first-step","title":"this project","titleInlineContent":[{"type":"text","text":"this project"}]},"01-first-steps-for-working-with-adsdk-screenshot.png":{"type":"image","alt":"Xcode window showing the correct project structure and Swift 6 project settings.","identifier":"01-first-steps-for-working-with-adsdk-screenshot.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/01-first-steps-for-working-with-adsdk-screenshot.png"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TagRequest":{"abstract":[{"type":"text","text":"Describes a request to “tag” a user."}],"title":"TagRequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","kind":"symbol","url":"\/documentation\/adsdkcore\/tagrequest","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TagRequest"}],"navigatorTitle":[{"text":"TagRequest","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"type":"topic","title":"AdService","role":"symbol","navigatorTitle":[{"text":"AdService","kind":"identifier"}],"abstract":[{"type":"text","text":"A key object for configuring your advertisements."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdService"}],"url":"\/documentation\/adsdkcore\/adservice","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},"doc://com.adsdk.core/documentation/AdSDKCore/AdError":{"title":"AdError","abstract":[{"text":"Type of SDK-related error.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError","type":"topic","url":"\/documentation\/adsdkcore\/aderror","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AdError","kind":"identifier"}],"navigatorTitle":[{"text":"AdError","kind":"identifier"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Preparing-the-app":{"role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Preparing-the-app","type":"section","kind":"section","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app","title":"Preparing the app"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"estimatedTime":"1hr 30min","kind":"project","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","role":"project","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","title":"Creating customised advertising","type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad":{"url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","role":"project","estimatedTime":"25min","kind":"project","title":"Create and display interstitial ad"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"kind":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","type":"topic","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI.","type":"text"}],"role":"overview","title":"Meet nextgen AdSDK","url":"\/tutorials\/meet-adsdk"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types":{"url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types","abstract":[{"type":"text","text":"We already know how to create and perform "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest"},{"text":", and ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"reference","isActive":true},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","role":"project","estimatedTime":"20min","kind":"project","title":"Global parameters for all request types"},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK":{"title":"First steps for working with AdSDK","type":"topic","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk","kind":"project","role":"project","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"text":" - creating an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","estimatedTime":"15min"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management","url":"\/tutorials\/adsdkcore\/adsdk-cache-management","title":"AdSDK Cache Management","estimatedTime":"10min","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"type":"topic","kind":"project","role":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler":{"title":"Creating a target URL handler","type":"section","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Creating-a-target-URL-handler","kind":"section","role":"pseudoSymbol","abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad":{"title":"Hiding interstitial ad","type":"section","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Hiding-interstitial-ad","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events":{"role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-custom-advertising-events","type":"section","kind":"section","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","title":"Monitor and process custom advertising events"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking","estimatedTime":"30min","type":"topic","kind":"project","role":"project","title":"User tagging and conversion tracking"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements":{"title":"Creating interstitial advertisements","type":"section","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Creating-interstitial-advertisements","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements"},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK#AdService-creation":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk#AdService-creation","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"type":"text","text":" - creating an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"title":"AdService creation","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","type":"section","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"title":"Registering a renderer in the SDK","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Event-management":{"type":"section","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Event-management","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Event management","role":"pseudoSymbol"},"02-first-steps-for-working-with-adsdk-screenshot.png":{"type":"image","alt":"An iPhone screen displaying a ready text.","identifier":"02-first-steps-for-working-with-adsdk-screenshot.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/02-first-steps-for-working-with-adsdk-screenshot.png"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","type":"topic","role":"project","estimatedTime":"45min","kind":"project","title":"Create and display inline ads"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"}],"traits":[{"interfaceLanguage":"occ"}]}]}