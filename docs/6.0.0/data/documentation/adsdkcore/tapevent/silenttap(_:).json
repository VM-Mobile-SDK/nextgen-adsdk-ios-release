{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/tapevent\/silenttap(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"text":"The URL whose redirect should be processed.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This processing approach is the most different from all the others, as it only processes the redirect of","type":"text"},{"type":"text","text":" "},{"text":"the passed URL, and ignores the target URL. This approach can only be useful if you know the target","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"URL and want to hide the redirect that the ad server uses for tracking from the user."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, you know that you have the following URL that should be processed when an advert is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tapped:"}]},{"inlineContent":[{"type":"text","text":"https:\/\/adition.com\/redi?lid=0&userid=0&sr=0&gk=0&clickurl=target.com"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With the query item "},{"code":"clickurl","type":"codeVoice"},{"text":", you know that your target URL to be shown to the user is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"https:\/\/target.com."}]},{"inlineContent":[{"text":"In this case, you can pass the URL for the redirect to the SDK for processing as","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","isActive":true},{"type":"text","text":" and the target URL as "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","type":"reference","isActive":true},{"text":". Using this approach, the user","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will not see the redirect, but it will be executed without  their knowledge."}],"type":"paragraph"},{"code":["nonisolated func onTap() async {","    let components = URLComponents(","        url: url,","        resolvingAgainstBaseURL: false","    )","","    let targetURL = components?","        .queryItems?","        .last { $0.name == \"clickurl\" }?","        .value","","    guard let targetURL else {","        \/\/ If we can't get target URL – just process tap with passed URL.","        try? await adControllerDelegate?.performTap(.tapURL(.init(url)))","        return","    }","","    \/\/ If we can – we process redirect and tap as a separate processes.","    await withTaskGroup(","        of: Void.self","    ) { [weak adControllerDelegate] group in","        group.addTask {","            \/\/ Process redirect","            try? await adControllerDelegate?.performTap(","                .silentTap(url)","            )","        }","","        group.addTask {","            \/\/ Process tap","            try? await adControllerDelegate?.performTap(","                .tapURL(.init(url))","            )","        }","","        try await group.waitForAll()","    }","}"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"]]},"metadata":{"role":"symbol","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"silentTap"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":")"}],"roleHeading":"Case","externalID":"s:9AdSDKCore8TapEventO06silentC0yAC10Foundation3URLVcACmF","title":"TapEvent.silentTap(_:)","modules":[{"name":"AdSDKCore"}]},"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Processes the redirect of the passed URL without processing the target URL."}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent":{"abstract":[{"text":"An enum with all types of ad tap processing.","type":"text"}],"title":"TapEvent","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TapEvent","kind":"identifier"}],"navigatorTitle":[{"text":"TapEvent","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/tapevent"},"doc://com.adsdk.core/documentation/AdSDKCore":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","title":"AdSDKCore","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"url":"\/documentation\/adsdkcore"},"doc://com.adsdk.core/documentation/AdSDKCore/TapURL":{"title":"TapURL","type":"topic","abstract":[{"text":"A structure that describes the URL associated with an advertisement tap event.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TapURL"}],"url":"\/documentation\/adsdkcore\/tapurl","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","navigatorTitle":[{"text":"TapURL","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/tapURL(_:)":{"kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","role":"symbol","abstract":[{"text":"Processing tap using passed ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","title":"TapEvent.tapURL(_:)","url":"\/documentation\/adsdkcore\/tapevent\/tapurl(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"tapURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore6TapURLV","text":"TapURL"},{"kind":"text","text":")"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/silentTap(_:)":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"TapEvent.silentTap(_:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","abstract":[{"type":"text","text":"Processes the redirect of the passed URL without processing the target URL."}],"role":"symbol","url":"\/documentation\/adsdkcore\/tapevent\/silenttap(_:)","kind":"symbol"}}}