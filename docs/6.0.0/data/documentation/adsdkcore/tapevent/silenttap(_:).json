{"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Processes the redirect of the passed URL without processing the target URL.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The URL whose redirect should be processed."}],"type":"paragraph"}],"name":"url"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This processing approach is the most different from all the others, as it only processes the redirect of","type":"text"},{"type":"text","text":" "},{"text":"the passed URL, and ignores the target URL. This approach can only be useful if you know the target","type":"text"},{"text":" ","type":"text"},{"text":"URL and want to hide the redirect that the ad server uses for tracking from the user.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you know that you have the following URL that should be processed when an advert is"},{"type":"text","text":" "},{"text":"tapped:","type":"text"}]},{"inlineContent":[{"type":"text","text":"https:\/\/adition.com\/redi?lid=0&userid=0&sr=0&gk=0&clickurl=target.com"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"With the query item "},{"type":"codeVoice","code":"clickurl"},{"type":"text","text":", you know that your target URL to be shown to the user is"},{"type":"text","text":" "},{"text":"https:\/\/target.com.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this case, you can pass the URL for the redirect to the SDK for processing as"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","type":"reference","isActive":true},{"text":" and the target URL as ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","isActive":true,"type":"reference"},{"type":"text","text":". Using this approach, the user"},{"type":"text","text":" "},{"text":"will not see the redirect, but it will be executed without  their knowledge.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["nonisolated func onTap() async {","    let components = URLComponents(","        url: url,","        resolvingAgainstBaseURL: false","    )","","    let targetURL = components?","        .queryItems?","        .last { $0.name == \"clickurl\" }?","        .value","","    guard let targetURL else {","        \/\/ If we can't get target URL – just process tap with passed URL.","        try? await adControllerDelegate?.performTap(.tapURL(.init(url)))","        return","    }","","    \/\/ If we can – we process redirect and tap as a separate processes.","    await withTaskGroup(","        of: Void.self","    ) { [weak adControllerDelegate] group in","        group.addTask {","            \/\/ Process redirect","            try? await adControllerDelegate?.performTap(","                .silentTap(url)","            )","        }","","        group.addTask {","            \/\/ Process tap","            try? await adControllerDelegate?.performTap(","                .tapURL(.init(url))","            )","        }","","        try await group.waitForAll()","    }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/tapevent\/silenttap(_:)"]}],"sections":[],"metadata":{"title":"TapEvent.silentTap(_:)","roleHeading":"Case","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:9AdSDKCore8TapEventO06silentC0yAC10Foundation3URLVcACmF","modules":[{"name":"AdSDKCore"}],"role":"symbol"},"references":{"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/silentTap(_:)":{"abstract":[{"type":"text","text":"Processes the redirect of the passed URL without processing the target URL."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","url":"\/documentation\/adsdkcore\/tapevent\/silenttap(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"TapEvent.silentTap(_:)","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore":{"kind":"symbol","title":"AdSDKCore","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"url":"\/documentation\/adsdkcore","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","type":"topic","role":"collection"},"doc://com.adsdk.core/documentation/AdSDKCore/TapURL":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TapURL","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TapURL"}],"type":"topic","abstract":[{"type":"text","text":"A structure that describes the URL associated with an advertisement tap event."}],"kind":"symbol","url":"\/documentation\/adsdkcore\/tapurl","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","title":"TapURL"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent":{"kind":"symbol","navigatorTitle":[{"text":"TapEvent","kind":"identifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent","abstract":[{"type":"text","text":"An enum with all types of ad tap processing."}],"role":"symbol","url":"\/documentation\/adsdkcore\/tapevent","type":"topic","title":"TapEvent","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TapEvent"}]},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/tapURL(_:)":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tapURL"},{"text":"(","kind":"text"},{"text":"TapURL","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore6TapURLV"},{"text":")","kind":"text"}],"title":"TapEvent.tapURL(_:)","type":"topic","url":"\/documentation\/adsdkcore\/tapevent\/tapurl(_:)","role":"symbol","abstract":[{"type":"text","text":"Processing tap using passed "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)"}}}