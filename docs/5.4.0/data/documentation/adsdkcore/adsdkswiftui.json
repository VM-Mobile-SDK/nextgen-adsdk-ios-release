{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"On top of the SDK Core, ","type":"text"},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"type":"text","text":" provides extensions for displaying "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" in SwiftUI based applications."}]},{"inlineContent":[{"text":"The currently available inline renderers are:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Native Image"}],"type":"strong"},{"text":" – displays the image received from the ad server, responds to events related to display and interactions with the advertisement.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Generic","type":"text"}]},{"type":"text","text":" – displays advertisements in HTML format using "},{"type":"codeVoice","code":"WKWebView"},{"text":" and has limited support for MRAID 3.0. For clarification on supported functionality, please contact the mobile team at ADITION.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"The currently available interstitial renderers are:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Interstitial Image","type":"text"}]},{"text":" – displays an advertising image received from the server in full screen, which will disappear after a certain period of time, which you can configure on the frontend.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Interstitial Image with Close Button","type":"text"}]},{"type":"text","text":" – displays an advertising image received from the server in full screen, on which a button to close will appear after a certain period of time. You can configure the time after which the button should appear and the image of the button itself in the frontend."}]}]}],"type":"unorderedList"},{"anchor":"AdService-creation-for-SwiftUI","level":2,"text":"AdService creation for SwiftUI","type":"heading"},{"inlineContent":[{"type":"text","text":"To easily create and configure an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true,"type":"reference"},{"type":"text","text":" in your application that uses "},{"code":"SwiftUI","type":"codeVoice"},{"type":"text","text":", the "},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"type":"text","text":" framework has a static methods for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" creation."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") -> AnyPublisher<AdService, AdError>","","static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") async throws -> AdService"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Parameters:"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"networkID: Appropriate ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"cacheSize: Size in mb that you can set for max cache size. 100 Mb by default."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"timeout: Timeout defines the time interval to setup the config. 60 seconds by default.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Returns:"}]},{"text":" Configured ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Combine","subscription = AdService.configure(networkID: 0000)","    .sink { [unowned self] completion in","        guard case .failure(let error) = completion else { return }","","        print(\"AdService configuration error: \\(error)\")","","    } receiveValue: { [unowned self] adService in","        print(\"AdService configured and ready to work\")","    }","","\/\/ Async\/Await","do {","    let adService = try await AdService.configure(","        networkID: 0000","    )","","    print(\"AdService configured and ready to work\")","","} catch {","    print(\"AdService configuration error: \\(error)\")","}"]},{"level":2,"text":"Displaying Inline Advertisements","type":"heading","anchor":"Displaying-Inline-Advertisements"},{"inlineContent":[{"text":"To display advertisements in your SwiftUI hierarchy, you use ","type":"text"},{"code":"AdView","type":"codeVoice"},{"type":"text","text":". It serves as a container for any type of inline advertisement, both built-in and custom native."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important:"}],"type":"strong"},{"type":"text","text":" "},{"type":"codeVoice","code":"AdView"},{"type":"text","text":" can only display Ads with the "},{"type":"codeVoice","code":"placementType"},{"text":" parameter ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If you pass to it:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" with the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","type":"reference"},{"type":"text","text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" with a "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","type":"reference","isActive":true},{"type":"text","text":" that returns "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"type":"text","text":" - the advertisement will return an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)"},{"type":"text","text":" state with an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType"},{"type":"text","text":" error."}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["@Observable","@MainActor","final class AdCellViewModel {","    var ad: Advertisement","    var state: State = .loading","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            \/\/ The inline parameter is the default,","            \/\/ so you do not need to specify it explicitly.","            placementType: .inline ","        )","    }","","    \/\/ ...","}","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            loaderView()","","        case .view(let advertisement):","            AdView(advertisement: advertisement)","","        case .error(let description):","            errorView(description)","        }","    }","}"]},{"inlineContent":[{"type":"text","text":"You can also calculate the size of the ad based on the aspect ratio. See how "},{"type":"codeVoice","code":"AdView"},{"text":" works in practice in the ","type":"text"},{"overridingTitleInlineContent":[{"text":"tutorial","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","type":"reference","isActive":true,"overridingTitle":"tutorial"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Displaying Interstitial Advertisements","type":"heading","level":2,"anchor":"Displaying-Interstitial-Advertisements"},{"type":"paragraph","inlineContent":[{"text":"To display ads in full screen, you use the ","type":"text"},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"text":" View modifier. It serves as a container for any type of interstitial advertisement, both built-in and custom native.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" "},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"text":" can only display Ads with the ","type":"text"},{"code":"placementType","type":"codeVoice"},{"type":"text","text":" parameter "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you pass to it:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" with the "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","isActive":true,"type":"reference"},{"type":"text","text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit"},{"text":" that returns ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},{"text":" - the advertisement will return an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","isActive":true},{"type":"text","text":" state with an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","isActive":true,"type":"reference"},{"text":" error.","type":"text"}]}]}]},{"syntax":"swift","code":["@Observable","@MainActor","final class ScreenWithInterstitialViewModel {","    var ad: Advertisement","    var isInterstitialPresented: Bool = false","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            placementType: .interstitial","        )","","        observeAd(ad)","    }","","    func observeAd(_ ad: Advertisement) {","        Task {","            for await state in ad.stateStream {","                guard case .readyToPresent(let metadata) = state else {","                    return","                }","","                \/\/ After receiving readyToPresent state you can","                \/\/ start to present interstitial.","                \/\/","                \/\/ If you change the state to true before the ad","                \/\/ is loaded, it will be displayed immediately after","                \/\/ it is loaded.","                isInterstitialPresented = true","            }","        }","    }","}","","struct ScreenWithInterstitial: View {","    @State var viewModel: ScreenWithInterstitialViewModel","","    var body: some View {","        VStack {","            Text(\"My Screen Content\")","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialPresented,","            viewModel.ad","        )","    }","}"],"type":"codeListing"},{"level":2,"text":"Visibility events","type":"heading","anchor":"Visibility-events"},{"inlineContent":[{"text":"To enable the partial visibility events ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","isActive":true,"type":"reference"},{"type":"text","text":" with inline ad, you have to add the "},{"code":".adsContainer()","type":"codeVoice"},{"type":"text","text":" View modifier:"}],"type":"paragraph"},{"code":["var body: some View {","    List {","        ForEach(cellViewModels) {","            AdCell(viewModel: $0)","        }","    }","    .clipped()","    .adsContainer()","}"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"text":"This framework contains the SwiftUI extensions for the AdSDK for iOS. You use this framework together with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","type":"reference"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdSDKSwiftUI","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/adsdkcore\/adsdkswiftui"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/adsdkcore\/adsdkswiftui"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"AdSDKCore"}],"roleHeading":"Article","role":"article","title":"AdSDKSwiftUI"},"kind":"article","seeAlsoSections":[{"anchor":"Essentials","generated":true,"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"],"title":"Essentials"}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"url":"\/documentation\/adsdkcore\/advertisement","title":"Advertisement","abstract":[{"type":"text","text":"A key object interface describing the advertisement."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"topic","navigatorTitle":[{"text":"Advertisement","kind":"identifier"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"navigatorTitle":[{"kind":"identifier","text":"AdService"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdService","kind":"identifier"}],"title":"AdService","url":"\/documentation\/adsdkcore\/adservice","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/contentUnit":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","abstract":[{"type":"text","text":"Unique ID of a content space in the ADITION ad-serving platform."}],"role":"symbol","kind":"symbol","title":"contentUnit","url":"\/documentation\/adsdkcore\/adrequest\/contentunit","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentUnit","kind":"identifier"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}]},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}],"url":"\/tutorials\/meet-adsdk","title":"Meet nextgen AdSDK","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","kind":"overview","role":"overview"},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/error(_:)":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","abstract":[{"text":"Signals that an advertisement lifecycle error has occurred.","type":"text"}],"role":"symbol","kind":"symbol","title":"AdState.error(_:)","url":"\/documentation\/adsdkcore\/adstate\/error(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"error","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"type":"topic","role":"collection","url":"\/documentation\/adsdkcore","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based.","type":"text"}],"kind":"symbol","title":"AdSDKCore","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEvent/viewable(percentage:url:metadata:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewable"},{"text":"(","kind":"text"},{"text":"percentage","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9AdSDKCore0A20VisibilityPercentageO","text":"AdVisibilityPercentage","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"url","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"metadata","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AdMetadata","preciseIdentifier":"s:9AdSDKCore0A8MetadataC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/adsdkcore\/adevent\/viewable(percentage:url:metadata:)","title":"AdEvent.viewable(percentage:url:metadata:)","abstract":[{"type":"text","text":"Signals that the user has seen an advertisement."}],"kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)"},"doc://com.adsdk.core/documentation/AdSDKCore/AdError/mismatchPlacementType":{"abstract":[{"text":"The error is caused by an incorrect match between the passed and received","type":"text"},{"type":"text","text":" "},{"text":"placement type.","type":"text"}],"title":"AdError.mismatchPlacementType","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"mismatchPlacementType","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","url":"\/documentation\/adsdkcore\/aderror\/mismatchplacementtype","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/inline":{"abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"inline","kind":"identifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","url":"\/documentation\/adsdkcore\/adplacementtype\/inline","kind":"symbol","title":"AdPlacementType.inline"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"abstract":[{"type":"text","text":"The unique identifier of the ad network."}],"kind":"symbol","title":"networkID","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","type":"topic","role":"symbol","url":"\/documentation\/adsdkcore\/adservice\/networkid","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"networkID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"title":"AdPlacementType.interstitial","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","abstract":[],"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"interstitial","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","kind":"symbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","op":"replace","value":[{"anchor":"Essentials","generated":true,"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"],"title":"Essentials"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}