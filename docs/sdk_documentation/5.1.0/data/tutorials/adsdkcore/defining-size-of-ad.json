{"variants":[{"paths":["\/tutorials\/adsdkcore\/defining-size-of-ad"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/tutorials\/adsdkcore\/defining-size-of-ad"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"]],"modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads#First-steps-for-working-with-AdSDK"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads#Loading-and-displaying-advertisements"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters"}]}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"sections":[{"estimatedTimeInMinutes":15,"content":[{"inlineContent":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}],"type":"paragraph"}],"kind":"hero","chapter":"Working with the built-in capabilities of the SDK","title":"Defining the size of the advertisement"},{"tasks":[{"stepsSection":[{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Let’s go back to the "},{"type":"codeVoice","code":"AdCell"},{"text":" file.","type":"text"}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"As you may have noticed, in the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","isActive":true,"type":"reference"},{"type":"text","text":" state, we are not using "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata","type":"reference"},{"type":"text","text":" in any way. From this object we can get the basic information after the advertising content has been loaded from the server."}]}],"type":"step","media":null,"code":"01-defining-size-of-ad.swift"},{"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s add the "},{"code":"aspectRatio","type":"codeVoice"},{"text":" parameter in our ","type":"text"},{"type":"codeVoice","code":"ready"},{"text":" state. After that, we can pass it from the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","type":"reference","isActive":true},{"type":"text","text":" state."}]}],"code":"02-defining-size-of-ad.swift","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Since ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata\/aspectRatio","isActive":true,"type":"reference"},{"type":"text","text":" is optional, we use the default value of 2:1 in this project. This value may not be present if the server does not return height and width values in the response."}]}]},{"code":"03-defining-size-of-ad.swift","media":null,"type":"step","caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"text":"To calculate the required height of ","type":"text"},{"code":"AdView","type":"codeVoice"},{"type":"text","text":" in a vertical list, we need to know the width of "},{"type":"codeVoice","code":"AdCell"},{"type":"text","text":". We will pass it to the initializer, and then calculate the height based on the width and aspect ratio."}],"type":"paragraph"}]},{"type":"step","media":null,"code":"04-defining-size-of-ad.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The last step will be passing the width to AdCell. For this, we need to open the "},{"type":"codeVoice","code":"FirstScreen"},{"type":"text","text":" file."}]}],"caption":[]},{"code":"05-defining-size-of-ad.swift","content":[{"inlineContent":[{"text":"We will add a ","type":"text"},{"code":"GeometryReader","type":"codeVoice"},{"type":"text","text":" to determine the width of our screen and remove the insets in "},{"type":"codeVoice","code":"AdCell"},{"text":" to simplify the width calculation.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"text":"Run the project, make sure everything is working correctly. Now you can be confident about the size of the advertisement.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null}],"anchor":"Defining-the-size-of-the-advertisement","title":"Defining the size of the advertisement","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Observe the state of the advertisement and calculate the height of "},{"type":"codeVoice","code":"AdView"},{"text":" when the advertisement is ready to be displayed.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}]}],"kind":"tasks"},{"kind":"callToAction","featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"We already know how to create an "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":". However, an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"type":"codeVoice","code":"AdRequests"},{"type":"text","text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"text":".","type":"text"}],"action":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"overridingTitle":"Get started"},"title":"Global AdRequest parameters"}],"metadata":{"title":"Defining the size of the advertisement","role":"project","categoryPathComponent":"Meet-AdSDK","category":"Meet AdSDK"},"kind":"project","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"kind":"article","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","title":"Working with the built-in capabilities of the SDK","role":"article","abstract":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Ads#Loading-and-displaying-advertisements":{"kind":"section","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads#Loading-and-displaying-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-ads#Loading-and-displaying-advertisements","title":"Loading and displaying advertisements","role":"pseudoSymbol","abstract":[{"text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement.","type":"text"}]},"03-defining-size-of-ad.swift":{"fileType":"swift","type":"file","syntax":"swift","fileName":"AdCell.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    let cellWidth: Double","","    var body: some View {","        switch viewModel.state {","        case let .ready(ad, aspectRatio):","            let height = cellWidth \/ ratio","","            AdView(advertisement: ad)","                .frame(height: height)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    let aspectRatio = metadata.aspectRatio ?? 2","","                    self.state = .ready(ad, aspectRatio: aspectRatio)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement, aspectRatio: Double)","        case error","    }","}"],"highlights":[{"line":8},{"line":9},{"line":13},{"line":14},{"line":16}],"identifier":"03-defining-size-of-ad.swift"},"05-defining-size-of-ad.swift":{"fileName":"FirstScreen.swift","fileType":"swift","identifier":"05-defining-size-of-ad.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        GeometryReader { proxy in","            List {","                ForEach(viewModel.ads) { ad in","                    AdCell(","                        viewModel: ad,","                        cellWidth: proxy.size.width","                    )","                    .listRowInsets(.init())","                }","            }","            .listStyle(.plain)","            .clipped()","            .adsContainer()","        }","    }","}","\/\/ ..."],"highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":19},{"line":20},{"line":21}],"syntax":"swift","type":"file"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters":{"kind":"project","estimatedTime":"10min","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters","title":"Global AdRequest parameters","role":"project","abstract":[{"text":"We already know how to create an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"text":". However, an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all "},{"type":"codeVoice","code":"AdRequests"},{"type":"text","text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"type":"text","text":"."}]},"02-defining-size-of-ad.swift":{"fileType":"swift","type":"file","syntax":"swift","fileName":"AdCell.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case let .ready(ad, aspectRatio):","            AdView(advertisement: ad)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    let aspectRatio = metadata.aspectRatio ?? 2","","                    self.state = .ready(ad, aspectRatio: aspectRatio)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement, aspectRatio: Double)","        case error","    }","}"],"highlights":[{"line":10},{"line":32},{"line":33},{"line":34},{"line":46}],"identifier":"02-defining-size-of-ad.swift"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"kind":"overview","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","url":"\/tutorials\/meet-adsdk","title":"Meet nextgen AdSDK","role":"overview","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Ads#First-steps-for-working-with-AdSDK":{"type":"section","abstract":[{"text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement.","type":"text"}],"kind":"section","title":"First steps for working with AdSDK","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads#First-steps-for-working-with-AdSDK","url":"\/tutorials\/adsdkcore\/create-and-display-ads#First-steps-for-working-with-AdSDK","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdRequest"}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","navigatorTitle":[{"text":"AdRequest","kind":"identifier"}],"abstract":[{"text":"Describes a request to load an advertisement.","type":"text"}],"title":"AdRequest","type":"topic","kind":"symbol","url":"\/documentation\/adsdkcore\/adrequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement":{"type":"section","abstract":[{"type":"text","text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section."}],"kind":"section","title":"Defining the size of the advertisement","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","url":"\/tutorials\/adsdkcore\/defining-size-of-ad#Defining-the-size-of-the-advertisement","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad":{"type":"topic","abstract":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}],"kind":"project","title":"Defining the size of the advertisement","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","url":"\/tutorials\/adsdkcore\/defining-size-of-ad","role":"project","estimatedTime":"15min"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-advertising-events":{"type":"section","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}],"kind":"section","title":"Observing the advertising events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-advertising-events","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdMetadata/aspectRatio":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"aspectRatio"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata\/aspectRatio","url":"\/documentation\/adsdkcore\/admetadata\/aspectratio","title":"aspectRatio","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The aspect ratio of an advertising banner."}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdMetadata":{"role":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/admetadata","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdMetadata"}],"kind":"symbol","title":"AdMetadata","abstract":[{"text":"A class that contains the basic data about the advertisement and renderer.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata","navigatorTitle":[{"kind":"identifier","text":"AdMetadata"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-state-of-advertisements":{"kind":"section","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-state-of-advertisements","title":"Observing the state of advertisements","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling":{"type":"topic","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}],"kind":"project","title":"Handling the state and events of advertising","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling","url":"\/tutorials\/adsdkcore\/state-and-event-handling","role":"project","estimatedTime":"25min"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements":{"kind":"section","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","title":"Handling errors during the loading and decoding of advertisements","role":"pseudoSymbol","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Ads":{"type":"topic","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"kind":"project","title":"Create And Display Ads","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Ads","url":"\/tutorials\/adsdkcore\/create-and-display-ads","role":"project","estimatedTime":"20min"},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/readyToPresent(metadata:)":{"kind":"symbol","role":"symbol","title":"AdState.readyToPresent(metadata:)","url":"\/documentation\/adsdkcore\/adstate\/readytopresent(metadata:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"readyToPresent"},{"text":"(","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A8MetadataC","text":"AdMetadata","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Signals that the advertisement is now ready to be displayed for the user.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)"},"01-defining-size-of-ad.swift":{"fileName":"AdCell.swift","fileType":"swift","identifier":"01-defining-size-of-ad.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .ready(let ad):","            AdView(advertisement: ad)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    self.state = .ready(ad)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement)","        case error","    }","}"],"highlights":[],"syntax":"swift","type":"file"},"04-defining-size-of-ad.swift":{"fileName":"FirstScreen.swift","type":"file","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        List {","            ForEach(viewModel.ads) { ad in","                AdCell(viewModel: ad)","            }","        }","        .listStyle(.plain)","        .clipped()","        .adsContainer()","    }","}","\/\/ ..."],"identifier":"04-defining-size-of-ad.swift","fileType":"swift","syntax":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters#Modifying-global-parameters":{"type":"section","abstract":[{"type":"text","text":"We already know how to create an "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"type":"text","text":". However, an "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all "},{"code":"AdRequests","type":"codeVoice"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"text":".","type":"text"}],"kind":"section","title":"Modifying global parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters#Modifying-global-parameters","role":"pseudoSymbol"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"}],"traits":[{"interfaceLanguage":"occ"}]}]}