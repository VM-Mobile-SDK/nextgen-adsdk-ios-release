{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters"},"sections":[{"title":"Global AdRequest parameters","chapter":"Working with the built-in capabilities of the SDK","content":[{"inlineContent":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"text":". However, an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"code":"AdRequests","type":"codeVoice"},{"type":"text","text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Now let’s find out how you can do it.","type":"text"}]}],"kind":"hero","estimatedTimeInMinutes":10},{"kind":"tasks","tasks":[{"anchor":"Modifying-global-parameters","stepsSection":[{"code":"01-global-adrequest-parameters.swift","type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Let’s open our "},{"type":"codeVoice","code":"TutorialApp"},{"type":"text","text":" file."}],"type":"paragraph"}],"runtimePreview":null,"caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, let’s create an alert with which we will ask the user for permission to track. To do this, we will add an alert to our "},{"type":"codeVoice","code":"View"},{"text":" that will be displayed when the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"text":" is configured.","type":"text"}]}],"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"02-global-adrequest-parameters.swift"},{"media":null,"runtimePreview":null,"code":"03-global-adrequest-parameters.swift","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Depending on the user’s choice, we pass a boolean value to the "},{"type":"codeVoice","code":"setGDPRParameters"},{"type":"text","text":" method. After that, we use the "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/setGlobalParameter(_:_:)","isActive":true,"type":"reference"},{"type":"text","text":" method to set the "},{"type":"codeVoice","code":"gdpr"},{"text":". Now GDPR will be added to every ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step"},{"type":"step","media":null,"runtimePreview":null,"content":[{"inlineContent":[{"text":"After a period of time, you may want to remove the global parameters. To do this, you can use the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/removeGlobalParameter(_:)"},{"type":"text","text":" method."}],"type":"paragraph"}],"caption":[],"code":"04-global-adrequest-paramters.swift"}],"title":"Modifying global parameters","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"In this section, we’ll configure the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/GlobalParameters\/gdpr","type":"reference","isActive":true},{"text":" parameter for each ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"type":"text","text":" that we have in our app. In addition, we will review the possibility of removing global parameters."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can configure not only GDPR but also other parameters. You can find a list of all global parameters in the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/GlobalParameters","isActive":true},{"text":" documentation.","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","isActive":true,"overridingTitle":"Get started","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising"},"kind":"callToAction","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"featuredEyebrow":"Tutorial","title":"Creating customised advertising"}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"]],"modules":[{"projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad"},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"},{"projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching"}]}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/tutorials\/adsdkcore\/global-adrequest-parameters"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/tutorials\/adsdkcore\/global-adrequest-parameters"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"title":"Global AdRequest parameters","category":"Meet AdSDK","role":"project","categoryPathComponent":"Meet-AdSDK"},"kind":"project","references":{"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#State-and-event-management":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#State-and-event-management","kind":"section","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"title":"State and event management","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters#Modifying-global-parameters":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters#Modifying-global-parameters","abstract":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"text":". However, an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all "},{"code":"AdRequests","type":"codeVoice"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":".","type":"text"}],"title":"Modifying global parameters"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"kind":"article","title":"Extending the SDK with your custom advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","role":"article","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","abstract":[],"type":"topic"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"topic","role":"symbol","url":"\/documentation\/adsdkcore\/adservice","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdService"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AdService"}],"title":"AdService"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"title":"Working with the built-in capabilities of the SDK","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","role":"article"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","url":"\/tutorials\/adsdkcore\/defining-size-of-ad","kind":"project","type":"topic","abstract":[{"type":"text","text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section."}],"title":"Defining the size of the advertisement","estimatedTime":"15min","role":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"kind":"project","title":"Creating customised advertising","estimatedTime":"1hr 0min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","role":"project","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"url":"\/tutorials\/adsdkcore\/creating-customised-advertising","type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement":{"title":"Defining the size of the advertisement","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}],"url":"\/tutorials\/adsdkcore\/defining-size-of-ad#Defining-the-size-of-the-advertisement"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Loading-and-displaying-advertisements","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"title":"Loading and displaying advertisements"},"01-global-adrequest-parameters.swift":{"identifier":"01-global-adrequest-parameters.swift","syntax":"swift","type":"file","content":["@main","struct TutorialApp: App {","    @State var viewModel = TutorialViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","            case .ready(let service):","                FirstScreen(viewModel: .init(service))","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","final class TutorialViewModel {","    var state: AppState = .loading","","    init() {","        createAdService()","    }","}","","private extension TutorialViewModel {","    func createAdService() {","        Task { @MainActor in","            do {","                let service = try await AdService.configure(networkID: 1800)","                state = .ready(service)","            } catch {","                state = .error","            }","        }","    }","    \/\/ ...","}","\/\/ ..."],"fileName":"TutorialApp.swift","fileType":"swift","highlights":[]},"https://iabeurope.eu/transparency-consent-framework/":{"identifier":"https:\/\/iabeurope.eu\/transparency-consent-framework\/","type":"link","url":"https:\/\/iabeurope.eu\/transparency-consent-framework\/","title":"link.","titleInlineContent":[{"type":"text","text":"link."}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/setGlobalParameter(_:_:)":{"abstract":[{"text":"A method for setting global parameters for ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":" before calling"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/makeAdvertisement(request:placementType:targetURLHandler:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"method."}],"type":"topic","title":"setGlobalParameter(_:_:)","kind":"symbol","url":"\/documentation\/adsdkcore\/adservice\/setglobalparameter(_:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setGlobalParameter","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A7RequestV","text":"AdRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"GlobalParameters","preciseIdentifier":"s:9AdSDKCore0A7RequestV16GlobalParametersV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:9AdSDKCore0A7ServiceC18setGlobalParameteryys15WritableKeyPathCyAA0A7RequestV0E10ParametersVxSgG_AKtlF1TL_xmfp"},{"text":"?>, ","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A7ServiceC18setGlobalParameteryys15WritableKeyPathCyAA0A7RequestV0E10ParametersVxSgG_AKtlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/setGlobalParameter(_:_:)"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/makeAdvertisement(request:placementType:targetURLHandler:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/adsdkcore\/adservice\/makeadvertisement(request:placementtype:targeturlhandler:)","abstract":[{"text":"Creating an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" object and performing ad request.","type":"text"}],"title":"makeAdvertisement(request:placementType:targetURLHandler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAdvertisement"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AdRequest","preciseIdentifier":"s:9AdSDKCore0A7RequestV"},{"kind":"text","text":", "},{"text":"placementType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A13PlacementTypeO","text":"AdPlacementType"},{"kind":"text","text":", "},{"text":"targetURLHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TargetURLHandler","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore16TargetURLHandlerP"},{"text":"?) -> ","kind":"text"},{"text":"Advertisement","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore13AdvertisementP"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/makeAdvertisement(request:placementType:targetURLHandler:)"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-advertising-events":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-advertising-events","kind":"section","type":"section","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"title":"Observing the advertising events","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","role":"project","type":"topic","estimatedTime":"20min","kind":"project","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"title":"Create and display inline ads"},"02-global-adrequest-parameters.swift":{"highlights":[],"identifier":"02-global-adrequest-parameters.swift","type":"file","fileName":"TutorialApp.swift","content":["@main","struct TutorialApp: App {","    @State var viewModel = TutorialViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","            case .ready(let service):","                FirstScreen(viewModel: .init(service))","                    .alert(\"Please grant the permission to track the data.\", isPresented: $viewModel.showingGDPRAlert) {","                        Button(\"Allow\") { }","                        Button(\"Deny\", role: .cancel) { }","                    }","","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","final class TutorialViewModel {","    var state: AppState = .loading","    var showingGDPRAlert = false","","    init() {","        createAdService()","    }","}","","private extension TutorialViewModel {","    func createAdService() {","        Task { @MainActor in","            do {","                let service = try await AdService.configure(networkID: 1800)","                state = .ready(service)","                showingGDPRAlert = true","            } catch {","                state = .error","            }","        }","    }","    \/\/ ...","}","\/\/ ..."],"fileType":"swift","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK":{"title":"First steps for working with AdSDK","kind":"section","abstract":[{"text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement.","type":"text"}],"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#First-steps-for-working-with-AdSDK","role":"pseudoSymbol"},"03-global-adrequest-parameters.swift":{"identifier":"03-global-adrequest-parameters.swift","syntax":"swift","type":"file","content":["@main","struct TutorialApp: App {","    @State var viewModel = TutorialViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","            case .ready(let service):","                FirstScreen(viewModel: .init(service))","                    .alert(\"Please grant the permission to track the data.\", isPresented: $viewModel.showingGDPRAlert) {","                        Button(\"Allow\") {","                            viewModel.setGDPRParamaters(isPermissionGranted: true)","                        }","                        Button(\"Deny\", role: .cancel) {","                            viewModel.setGDPRParamaters(isPermissionGranted: false)","                        }","                    }","","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","final class TutorialViewModel {","    var state: AppState = .loading","    var showingGDPRAlert = false","    private var service: AdService?","","    init() {","        createAdService()","    }","","    func setGDPRParamaters(isPermissionGranted: Bool) {","        let consent = \"isEnable=\\(isPermissionGranted)\"","","        guard let service,","              let data = Data(base64Encoded: consent),","              let encodedConsent = String(data: data, encoding: .utf8) else {","            return","        }","","        service.setGlobalParameter(\\.gdpr, .init(consent: encodedConsent, isRulesEnabled: true))","    }","}","","private extension TutorialViewModel {","    func createAdService() {","        Task { @MainActor in","            do {","                let service = try await AdService.configure(networkID: 1800)","                self.service = service","                state = .ready(service)","                showingGDPRAlert = true","            } catch {","                state = .error","            }","        }","    }","    \/\/ ...","}","\/\/ ..."],"fileName":"TutorialApp.swift","fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad","role":"project","type":"topic","estimatedTime":"15min","kind":"project","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"title":"Create and display interstitial ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets","role":"project","type":"topic","estimatedTime":"15min","kind":"project","url":"\/tutorials\/adsdkcore\/load-and-cache-assets","abstract":[{"text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching.","type":"text"}],"title":"Download and cache ad assets in your custom ads"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements":{"title":"Handling errors during the loading and decoding of advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"url":"\/tutorials\/adsdkcore\/state-and-event-handling#Handling-errors-during-the-loading-and-decoding-of-advertisements"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","title":"AdRequest","role":"symbol","navigatorTitle":[{"text":"AdRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Describes a request to load an advertisement."}],"url":"\/documentation\/adsdkcore\/adrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdRequest","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling","url":"\/tutorials\/adsdkcore\/state-and-event-handling","kind":"project","type":"topic","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"title":"Handling the state and events of advertising","estimatedTime":"25min","role":"project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters":{"title":"Global AdRequest parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","kind":"project","role":"project","type":"topic","abstract":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"text":". However, an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"type":"text","text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all "},{"type":"codeVoice","code":"AdRequests"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"type":"text","text":"."}],"estimatedTime":"10min","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","kind":"section","type":"section","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"title":"Registering a renderer in the SDK","role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets#Asset-loading-and-caching":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/adsdkcore\/load-and-cache-assets#Asset-loading-and-caching","abstract":[{"text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching.","type":"text"}],"title":"Asset loading and caching"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Presenting-interstitial":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial","kind":"section","type":"section","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"title":"Presenting interstitial","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/GlobalParameters/gdpr":{"url":"\/documentation\/adsdkcore\/adrequest\/globalparameters\/gdpr","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/GlobalParameters\/gdpr","abstract":[{"type":"text","text":"App can ask users about their consent for sharing information with third parties."},{"type":"text","text":" "},{"type":"text","text":"The SDK can forward users preferences if they follow the TCF format,"},{"text":" ","type":"text"},{"type":"text","text":"see this "},{"isActive":true,"type":"reference","identifier":"https:\/\/iabeurope.eu\/transparency-consent-framework\/"}],"kind":"symbol","title":"gdpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gdpr","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A7RequestV4GDPRV","text":"GDPR"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-state-of-advertisements":{"title":"Observing the state of advertisements","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-state-of-advertisements","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"title":"Creating a presentation layer","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer"},"04-global-adrequest-paramters.swift":{"identifier":"04-global-adrequest-paramters.swift","syntax":"swift","type":"file","content":["@main","struct TutorialApp: App {","    @State var viewModel = TutorialViewModel()","","    var body: some Scene {","        WindowGroup {","            switch viewModel.state {","            case .loading:","                Text(\"Loading\")","            case .ready(let service):","                FirstScreen(viewModel: .init(service))","                    .alert(\"Please grant the permission to track the data.\", isPresented: $viewModel.showingGDPRAlert) {","                        Button(\"Allow\") {","                            viewModel.setGDPRParamaters(isPermissionGranted: true)","                        }","                        Button(\"Deny\", role: .cancel) {","                            viewModel.setGDPRParamaters(isPermissionGranted: false)","                        }","                    }","","            case .error:","                Text(\"Error\")","            }","        }","    }","}","","\/\/ MARK: - View Model","@Observable","final class TutorialViewModel {","    var state: AppState = .loading","    var showingGDPRAlert = false","    private var service: AdService?","","    init() {","        createAdService()","    }","","    func setGDPRParamaters(isPermissionGranted: Bool) {","        let consent = \"isEnable=\\(isPermissionGranted)\"","","        guard let service,","              let data = Data(base64Encoded: consent),","              let encodedConsent = String(data: data, encoding: .utf8) else {","            return","        }","","        service.setGlobalParameter(\\.gdpr, .init(consent: encodedConsent, isRulesEnabled: true))","    }","","    func removeGDPRParamaters(isPermissionGranted: Bool) {","        guard let service else { return }","        service.removeGlobalParameter(\\.gdpr)","    }","}","","private extension TutorialViewModel {","    func createAdService() {","        Task { @MainActor in","            do {","                let service = try await AdService.configure(networkID: 1800)","                self.service = service","                state = .ready(service)","                showingGDPRAlert = true","            } catch {","                state = .error","            }","        }","    }","    \/\/ ...","}","\/\/ ..."],"fileName":"TutorialApp.swift","fileType":"swift","highlights":[]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/removeGlobalParameter(_:)":{"title":"removeGlobalParameter(_:)","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/removeGlobalParameter(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"removeGlobalParameter","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A7RequestV","text":"AdRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"GlobalParameters","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A7RequestV16GlobalParametersV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A7ServiceC21removeGlobalParameteryys15WritableKeyPathCyAA0A7RequestV0E10ParametersVxSgGlF1TL_xmfp","text":"T"},{"text":"?>)","kind":"text"}],"url":"\/documentation\/adsdkcore\/adservice\/removeglobalparameter(_:)","type":"topic","abstract":[{"type":"text","text":"A method for removing global parameters for "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object":{"kind":"section","title":"Interstitial Ad Object","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object","role":"pseudoSymbol","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Interstitial-Ad-Object","type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/GlobalParameters":{"title":"AdRequest.GlobalParameters","url":"\/documentation\/adsdkcore\/adrequest\/globalparameters","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An object for storing global parameters that will be applied when creating an"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GlobalParameters","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"GlobalParameters"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/GlobalParameters"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"title":"Meet nextgen AdSDK","kind":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","role":"overview","type":"topic","url":"\/tutorials\/meet-adsdk","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","kind":"section","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a business layer","role":"pseudoSymbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"}],"traits":[{"interfaceLanguage":"occ"}]}]}