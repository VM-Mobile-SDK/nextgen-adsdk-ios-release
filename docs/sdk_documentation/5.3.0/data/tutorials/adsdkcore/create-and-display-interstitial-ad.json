{"metadata":{"title":"Create and display interstitial ad","category":"Meet AdSDK","role":"project","categoryPathComponent":"Meet-AdSDK"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"]}],"kind":"project","identifier":{"url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[{"estimatedTimeInMinutes":15,"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}]}],"title":"Create and display interstitial ad","chapter":"Working with the built-in capabilities of the SDK"},{"kind":"tasks","tasks":[{"stepsSection":[{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s open "},{"code":"FirstScreen","type":"codeVoice"},{"type":"text","text":" file and find "},{"code":"FirstScreenViewModel","type":"codeVoice"},{"text":".","type":"text"}]}],"media":null,"code":"01-create-interstitial-ad.swift","runtimePreview":null},{"runtimePreview":null,"code":"02-create-interstitial-ad.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s create an interstitial ad property in this file. Interstitial works with the same protocol, so the type of our property will be "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":"."}]}],"type":"step","media":null,"caption":[]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After creating an interstitial object, It’s time to initialize it. The process of creating interstitial ads is the same as inline ads, with one important difference - we need to specify the "},{"code":"placementType","type":"codeVoice"},{"text":" parameter as an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"caption":[{"inlineContent":[{"type":"text","text":"Note: If you try to display interstitial ads in "},{"type":"codeVoice","code":"AdView"},{"text":" or display inline ads as interstitial, they will not be displayed and you will see an error in the log section.","type":"text"}],"type":"paragraph"}],"media":null,"code":"03-create-interstitial-ad.swift","runtimePreview":null},{"type":"step","caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Now it’s time to integrate state and event observer methods. We can do this in the same way as with inline advertisement."}],"type":"paragraph"}],"media":null,"code":"04-create-interstitial-ad.swift"}],"anchor":"Interstitial-Ad-Object","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"In this section we will create an interstitial ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" object and will also add state and event observer.","type":"text"}]}]}],"title":"Interstitial Ad Object"},{"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s continue the development in our ","type":"text"},{"type":"codeVoice","code":"FirstScreen"},{"type":"text","text":" file."}]}],"runtimePreview":null,"caption":[],"type":"step","media":null,"code":"05-create-interstitial-ad.swift"},{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: If you try to show the ad before the ad changes to "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","type":"reference"},{"type":"text","text":", the ad will be shown immediately after it is loaded."}]}],"runtimePreview":null,"media":null,"type":"step","code":"06-create-interstitial-ad.swift","content":[{"type":"paragraph","inlineContent":[{"text":"In this step, we will define a Boolean variable that will control the display. We need to make sure that this variable is changed to true only when the ad is ready to be displayed and you want to show it. The ad will be disappeared automatically at the time specified in the response from the server, and this variable will be changed to false.","type":"text"}]}]},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The last thing we need to do is pass our ad and the created Boolean property to the "},{"type":"codeVoice","code":"interstitial(isShouldBePresented:, _ advertisement:)"},{"text":" view modifier.","type":"text"}]}],"media":null,"runtimePreview":null,"code":"07-create-interstitial-ad.swift"}],"title":"Presenting interstitial","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We learnt how to create interstitial advertisement and observe its state and events. Now, we are ready to present our intertitial ad. In this section, we will display interstitial ads in our app."}]}],"mediaPosition":"trailing"}],"anchor":"Presenting-interstitial"}]},{"action":{"overridingTitle":"Get started","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference"},"kind":"callToAction","featuredEyebrow":"Tutorial","title":"Global AdRequest parameters","abstract":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":". However, an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"type":"text","text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all "},{"code":"AdRequests","type":"codeVoice"},{"type":"text","text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"text":".","type":"text"}]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"]],"modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters"}]},{"projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"references":{"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"title":"Working with the built-in capabilities of the SDK","type":"topic","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","kind":"article","abstract":[],"role":"article"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"interstitial","kind":"identifier"}],"title":"AdPlacementType.interstitial","type":"topic","url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","abstract":[],"kind":"symbol","role":"symbol"},"02-create-interstitial-ad.swift":{"fileName":"FirstScreen.swift","fileType":"swift","highlights":[{"line":7}],"syntax":"swift","identifier":"02-create-interstitial-ad.swift","type":"file","content":["\/\/ ...","@Observable","@MainActor","final class FirstScreenViewModel {","    let adService: AdService","    \/\/ ...","    let interstitial: Advertisement","","    init(_ service: AdService) {","        adService = service","        \/\/ ...","    }","}","","private extension FirstScreenViewModel {","    \/\/ ...","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","type":"section","abstract":[{"type":"text","text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section."}],"title":"Defining the size of the advertisement","url":"\/tutorials\/adsdkcore\/defining-size-of-ad#Defining-the-size-of-the-advertisement","kind":"section","role":"pseudoSymbol"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"role":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/advertisement","abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"title":"Advertisement","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},"05-create-interstitial-ad.swift":{"syntax":"swift","type":"file","identifier":"05-create-interstitial-ad.swift","fileName":"FirstScreen.swift","highlights":[],"content":["\/\/ ...","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        GeometryReader { proxy in","            List {","                ForEach(viewModel.ads) { ad in","                    AdCell(","                        viewModel: ad,","                        cellWidth: proxy.size.width","                    )","                    .listRowInsets(.init())","                }","            }","            .listStyle(.plain)","            .clipped()","            .adsContainer()","        }","    }","}","","@Observable","@MainActor","final class FirstScreenViewModel {","    \/\/ ...","    let interstitial: Advertisement","    var subscriptions = Set<AnyCancellable>()","    \/\/ ...","}","","private extension FirstScreenViewModel {","    func observeState() {","        interstitial.statePublisher","            .sink { [weak self] state in","                print(state)","            }","            .store(in: &subscriptions)","    }","    \/\/ ...","}","\/\/ ..."],"fileType":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters":{"url":"\/tutorials\/adsdkcore\/global-adrequest-parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","kind":"project","abstract":[{"text":"We already know how to create an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":". However, an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"type":"codeVoice","code":"AdRequests"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference"},{"type":"text","text":"."}],"title":"Global AdRequest parameters","role":"project","type":"topic","estimatedTime":"10min"},"07-create-interstitial-ad.swift":{"content":["\/\/ ...","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        GeometryReader { proxy in","            List {","                ForEach(viewModel.ads) { ad in","                    AdCell(","                        viewModel: ad,","                        cellWidth: proxy.size.width","                    )","                    .listRowInsets(.init())","                }","            }","            .listStyle(.plain)","            .clipped()","            .adsContainer()","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialShouldBePresented,","            viewModel.interstitial","        )","    }","}","","@Observable","@MainActor","final class FirstScreenViewModel {","    \/\/ ...","    let interstitial: Advertisement","    \/\/ ...","    var isInterstitialShouldBePresented = false","}","","private extension FirstScreenViewModel {","    func observeState() {","        interstitial.statePublisher","            .sink { [weak self] state in","                guard case .readyToPresent = state else { return }","                self?.isInterstitialShouldBePresented = true","            }","            .store(in: &subscriptions)","    }","    \/\/ ...","}","\/\/ ..."],"highlights":[{"line":20},{"line":21},{"line":22},{"line":23},{"line":33}],"type":"file","fileType":"swift","fileName":"FirstScreen.swift","identifier":"07-create-interstitial-ad.swift","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","title":"Registering a renderer in the SDK","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements":{"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Loading-and-displaying-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements","kind":"section","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"title":"Loading and displaying advertisements","role":"pseudoSymbol","type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"abstract":[{"text":"Describes a request to load an advertisement.","type":"text"}],"title":"AdRequest","url":"\/documentation\/adsdkcore\/adrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdRequest"}],"navigatorTitle":[{"kind":"identifier","text":"AdRequest"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters#Modifying-global-parameters":{"title":"Modifying global parameters","type":"section","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters#Modifying-global-parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters","kind":"section","abstract":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"text":". However, an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"code":"AdRequests","type":"codeVoice"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":"."}],"role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets#Asset-loading-and-caching":{"kind":"section","type":"section","url":"\/tutorials\/adsdkcore\/load-and-cache-assets#Asset-loading-and-caching","title":"Asset loading and caching","role":"pseudoSymbol","abstract":[{"type":"text","text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad":{"kind":"project","role":"project","type":"topic","title":"Create and display interstitial ad","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","estimatedTime":"15min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-advertising-events":{"title":"Observing the advertising events","type":"section","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-advertising-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","kind":"section","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"role":"pseudoSymbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"kind":"project","estimatedTime":"1hr 0min","type":"topic","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","title":"Creating customised advertising","role":"project","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising"},"03-create-interstitial-ad.swift":{"syntax":"swift","type":"file","identifier":"03-create-interstitial-ad.swift","fileName":"FirstScreen.swift","highlights":[{"line":12},{"line":13},{"line":14},{"line":15}],"content":["\/\/ ...","@Observable","@MainActor","final class FirstScreenViewModel {","    let adService: AdService","    \/\/ ...","    let interstitial: Advertisement","","    init(_ service: AdService) {","        adService = service","        \/\/ ...","        interstitial = service.makeAdvertisement(","            request: .init(contentUnit: 4852880),","            placementType: .interstitial","        )","    }","}","","private extension FirstScreenViewModel {","    \/\/ ...","}"],"fileType":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK":{"kind":"section","role":"pseudoSymbol","type":"section","title":"First steps for working with AdSDK","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#First-steps-for-working-with-AdSDK","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"title":"Meet nextgen AdSDK","type":"topic","url":"\/tutorials\/meet-adsdk","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","kind":"overview","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}],"role":"overview"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"title":"Extending the SDK with your custom advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","kind":"article","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","role":"article","abstract":[],"type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-state-of-advertisements":{"abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","title":"Observing the state of advertisements","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-state-of-advertisements","kind":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"title":"Creating a business layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","role":"pseudoSymbol","kind":"section","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"section","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"title":"Creating a presentation layer","role":"pseudoSymbol","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets":{"kind":"project","role":"project","type":"topic","title":"Download and cache ad assets in your custom ads","abstract":[{"type":"text","text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching."}],"url":"\/tutorials\/adsdkcore\/load-and-cache-assets","estimatedTime":"15min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object":{"abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object","title":"Interstitial Ad Object","role":"pseudoSymbol","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Interstitial-Ad-Object","kind":"section"},"06-create-interstitial-ad.swift":{"content":["\/\/ ...","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        GeometryReader { proxy in","            List {","                ForEach(viewModel.ads) { ad in","                    AdCell(","                        viewModel: ad,","                        cellWidth: proxy.size.width","                    )","                    .listRowInsets(.init())","                }","            }","            .listStyle(.plain)","            .clipped()","            .adsContainer()","        }","    }","}","","@Observable","@MainActor","final class FirstScreenViewModel {","    \/\/ ...","    let interstitial: Advertisement","    var subscriptions = Set<AnyCancellable>()","    var isInterstitialShouldBePresented = false","    \/\/ ...","}","","private extension FirstScreenViewModel {","    func observeState() {","        interstitial.statePublisher","            .sink { [weak self] state in","                guard case .readyToPresent = state else { return }","                self?.isInterstitialShouldBePresented = true","            }","            .store(in: &subscriptions)","    }","    \/\/ ...","}","\/\/ ..."],"highlights":[{"line":29},{"line":37},{"line":38}],"type":"file","fileType":"swift","fileName":"FirstScreen.swift","identifier":"06-create-interstitial-ad.swift","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements":{"kind":"section","role":"pseudoSymbol","type":"section","title":"Handling errors during the loading and decoding of advertisements","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"url":"\/tutorials\/adsdkcore\/state-and-event-handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements"},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/readyToPresent(metadata:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"readyToPresent"},{"kind":"text","text":"("},{"text":"metadata","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AdMetadata","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/adsdkcore\/adstate\/readytopresent(metadata:)","title":"AdState.readyToPresent(metadata:)","role":"symbol","abstract":[{"text":"Signals that the advertisement is now ready to be displayed for the user.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Presenting-interstitial":{"type":"section","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial","title":"Presenting interstitial","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial","role":"pseudoSymbol","kind":"section","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}]},"01-create-interstitial-ad.swift":{"fileName":"FirstScreen.swift","fileType":"swift","highlights":[],"syntax":"swift","identifier":"01-create-interstitial-ad.swift","type":"file","content":["\/\/ ...","@Observable","@MainActor","final class FirstScreenViewModel {","    let adService: AdService","    \/\/ ...","","    init(_ service: AdService) {","        adService = service","        \/\/ ...","    }","}","","private extension FirstScreenViewModel {","    \/\/ ...","}"]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"kind":"project","role":"project","type":"topic","title":"Create and display inline ads","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}],"url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","estimatedTime":"20min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling":{"kind":"project","role":"project","type":"topic","title":"Handling the state and events of advertising","abstract":[{"type":"text","text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section."}],"url":"\/tutorials\/adsdkcore\/state-and-event-handling","estimatedTime":"25min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling"},"04-create-interstitial-ad.swift":{"content":["\/\/ ...","@Observable","@MainActor","final class FirstScreenViewModel {","    let adService: AdService","    \/\/ ...","    let interstitial: Advertisement","    var subscriptions = Set<AnyCancellable>()","","    init(_ service: AdService) {","        adService = service","        \/\/ ...","        interstitial = service.makeAdvertisement(","            request: .init(contentUnit: 4852880),","            placementType: .interstitial","        )","","        observeState()","        observeEvents()","    }","}","","private extension FirstScreenViewModel {","    func observeState() {","        interstitial.statePublisher","            .sink { [weak self] state in","                print(state)","            }","            .store(in: &subscriptions)","    }","","    func observeEvents() {","        interstitial.eventPublisher","            .sink { [weak self] event in","                print(event)","            }","            .store(in: &subscriptions)","    }","","    \/\/ Async Await interface","    \/*","     func observeState() {","         Task {","             for await state in interstitial.stateStream {","                 print(state)","             }","         }","     }","","     func observeEvents() {","         Task {","             for await event in interstitial.eventStream {","                 print(event)","             }","         }","     }","    *\/","}"],"highlights":[{"line":8},{"line":17},{"line":18},{"line":19},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57}],"type":"file","fileType":"swift","fileName":"FirstScreen.swift","identifier":"04-create-interstitial-ad.swift","syntax":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad":{"kind":"project","role":"project","type":"topic","title":"Defining the size of the advertisement","abstract":[{"type":"text","text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section."}],"url":"\/tutorials\/adsdkcore\/defining-size-of-ad","estimatedTime":"15min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#State-and-event-management":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#State-and-event-management","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management","kind":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"title":"State and event management","role":"pseudoSymbol","type":"section"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"}]}]}