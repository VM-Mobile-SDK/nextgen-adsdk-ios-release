{"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"On top of the SDK Core, "},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"type":"text","text":" provides extensions for displaying "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" in SwiftUI based applications.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The currently available inline renderers are:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Native Image","type":"text"}],"type":"strong"},{"text":" – displays the image received from the ad server, responds to events related to display and interactions with the advertisement.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Generic","type":"text"}],"type":"strong"},{"text":" – displays advertisements in HTML format using ","type":"text"},{"code":"WKWebView","type":"codeVoice"},{"type":"text","text":" and has limited support for MRAID 3.0. For clarification on supported functionality, please contact the mobile team at ADITION."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"The currently available interstitial renderers are:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Interstitial Image"}]},{"type":"text","text":" – displays an advertising image received from the server in full screen, which will disappear after a certain period of time, which you can configure on the frontend."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Interstitial Image with Close Button","type":"text"}],"type":"strong"},{"text":" – displays an advertising image received from the server in full screen, on which a button to close will appear after a certain period of time. You can configure the time after which the button should appear and the image of the button itself in the frontend.","type":"text"}]}]}]},{"text":"AdService creation for SwiftUI","type":"heading","level":2,"anchor":"AdService-creation-for-SwiftUI"},{"inlineContent":[{"type":"text","text":"To easily create and configure an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":" in your application that uses ","type":"text"},{"type":"codeVoice","code":"SwiftUI"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"text":" framework has a static methods for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" creation."}],"type":"paragraph"},{"syntax":"swift","code":["static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") -> AnyPublisher<AdService, AdError>","","static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") async throws -> AdService"],"type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Parameters:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"networkID: Appropriate "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cacheSize: Size in mb that you can set for max cache size. 100 Mb by default."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"timeout: Timeout defines the time interval to setup the config. 60 seconds by default."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Returns:","type":"text"}]},{"type":"text","text":" Configured "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Combine","subscription = AdService.configure(networkID: 0000)","    .sink { [unowned self] completion in","        guard case .failure(let error) = completion else { return }","","        print(\"AdService configuration error: \\(error)\")","","    } receiveValue: { [unowned self] adService in","        print(\"AdService configured and ready to work\")","    }","","\/\/ Async\/Await","do {","    let adService = try await AdService.configure(","        networkID: 0000","    )","","    print(\"AdService configured and ready to work\")","","} catch {","    print(\"AdService configuration error: \\(error)\")","}"]},{"type":"heading","anchor":"Displaying-Inline-Advertisements","level":2,"text":"Displaying Inline Advertisements"},{"inlineContent":[{"type":"text","text":"To display advertisements in your SwiftUI hierarchy, you use "},{"code":"AdView","type":"codeVoice"},{"text":". It serves as a container for any type of inline advertisement, both built-in and custom native.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important:"}],"type":"strong"},{"type":"text","text":" "},{"type":"codeVoice","code":"AdView"},{"type":"text","text":" can only display Ads with the "},{"type":"codeVoice","code":"placementType"},{"type":"text","text":" parameter "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you pass to it:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" with the "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true,"type":"reference"},{"text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" with a "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","isActive":true,"type":"reference"},{"type":"text","text":" that returns "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"text":" - the advertisement will return an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference","isActive":true},{"type":"text","text":" state with an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType"},{"type":"text","text":" error."}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["@Observable","@MainActor","final class AdCellViewModel {","    var ad: Advertisement","    var state: State = .loading","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            \/\/ The inline parameter is the default,","            \/\/ so you do not need to specify it explicitly.","            placementType: .inline ","        )","    }","","    \/\/ ...","}","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            loaderView()","","        case .view(let advertisement):","            AdView(advertisement: advertisement)","","        case .error(let description):","            errorView(description)","        }","    }","}"]},{"inlineContent":[{"type":"text","text":"You can also calculate the size of the ad based on the aspect ratio. See how "},{"type":"codeVoice","code":"AdView"},{"text":" works in practice in the ","type":"text"},{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"tutorial"}],"overridingTitle":"tutorial","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Displaying Interstitial Advertisements","anchor":"Displaying-Interstitial-Advertisements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display ads in full screen, you use the "},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"text":" View modifier. It serves as a container for any type of interstitial advertisement, both built-in and custom native.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" "},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"type":"text","text":" can only display Ads with the "},{"type":"codeVoice","code":"placementType"},{"type":"text","text":" parameter "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"If you pass to it:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" with the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","type":"reference","isActive":true},{"type":"text","text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" with a "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","type":"reference"},{"text":" that returns ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","isActive":true,"type":"reference"},{"text":" - the advertisement will return an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference"},{"type":"text","text":" state with an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType"},{"type":"text","text":" error."}]}]}]},{"code":["@Observable","@MainActor","final class ScreenWithInterstitialViewModel {","    var ad: Advertisement","    var isInterstitialPresented: Bool = false","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            placementType: .interstitial","        )","","        observeAd(ad)","    }","","    func observeAd(_ ad: Advertisement) {","        Task {","            for await state in ad.stateStream {","                guard case .readyToPresent(let metadata) = state else {","                    return","                }","","                \/\/ After receiving readyToPresent state you can","                \/\/ start to present interstitial.","                \/\/","                \/\/ If you change the state to true before the ad","                \/\/ is loaded, it will be displayed immediately after","                \/\/ it is loaded.","                isInterstitialPresented = true","            }","        }","    }","}","","struct ScreenWithInterstitial: View {","    @State var viewModel: ScreenWithInterstitialViewModel","","    var body: some View {","        VStack {","            Text(\"My Screen Content\")","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialPresented,","            viewModel.ad","        )","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Visibility-events","type":"heading","text":"Visibility events","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"To enable the partial visibility events "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","isActive":true},{"type":"text","text":" with inline ad, you have to add the "},{"type":"codeVoice","code":".adsContainer()"},{"type":"text","text":" View modifier:"}]},{"code":["var body: some View {","    List {","        ForEach(cellViewModels) {","            AdCell(viewModel: $0)","        }","    }","    .clipped()","    .adsContainer()","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]},{"paths":["\/documentation\/adsdkcore\/adsdkswiftui"],"traits":[{"interfaceLanguage":"occ"}]}],"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"],"anchor":"Essentials"}],"sections":[],"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdSDKSwiftUI","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"article","title":"AdSDKSwiftUI","roleHeading":"Article","modules":[{"name":"AdSDKCore"}]},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"abstract":[{"text":"This framework contains the SwiftUI extensions for the AdSDK for iOS. You use this framework together with ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","isActive":true},{"text":".","type":"text"}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore":{"url":"\/documentation\/adsdkcore","kind":"symbol","title":"AdSDKCore","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based."}],"type":"topic","role":"collection","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/error(_:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"error","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"title":"AdState.error(_:)","url":"\/documentation\/adsdkcore\/adstate\/error(_:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"topic","abstract":[{"type":"text","text":"Signals that an advertisement lifecycle error has occurred."}]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"role":"symbol","url":"\/documentation\/adsdkcore\/advertisement","kind":"symbol","type":"topic","abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"title":"Advertisement","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Advertisement","kind":"identifier"}]},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"title":"Meet nextgen AdSDK","kind":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","role":"overview","type":"topic","url":"\/tutorials\/meet-adsdk","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"title":"networkID","abstract":[{"text":"The unique identifier of the ad network.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"networkID","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","kind":"symbol","role":"symbol","url":"\/documentation\/adsdkcore\/adservice\/networkid"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/contentUnit":{"url":"\/documentation\/adsdkcore\/adrequest\/contentunit","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentUnit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","abstract":[{"type":"text","text":"Unique ID of a content space in the ADITION ad-serving platform."}],"kind":"symbol","title":"contentUnit"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/inline":{"title":"AdPlacementType.inline","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","role":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/adplacementtype\/inline","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inline"}],"abstract":[]},"doc://com.adsdk.core/documentation/AdSDKCore/AdEvent/viewable(percentage:url:metadata:)":{"url":"\/documentation\/adsdkcore\/adevent\/viewable(percentage:url:metadata:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewable"},{"kind":"text","text":"("},{"text":"percentage","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AdVisibilityPercentage","preciseIdentifier":"s:9AdSDKCore0A20VisibilityPercentageO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"url"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC","text":"AdMetadata"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","abstract":[{"type":"text","text":"Signals that the user has seen an advertisement."}],"kind":"symbol","title":"AdEvent.viewable(percentage:url:metadata:)"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"topic","role":"symbol","url":"\/documentation\/adsdkcore\/adservice","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdService"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AdService"}],"title":"AdService"},"doc://com.adsdk.core/documentation/AdSDKCore/AdError/mismatchPlacementType":{"abstract":[{"type":"text","text":"The error is caused by an incorrect match between the passed and received"},{"type":"text","text":" "},{"text":"placement type.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","title":"AdError.mismatchPlacementType","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mismatchPlacementType","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/adsdkcore\/aderror\/mismatchplacementtype"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"title":"AdPlacementType.interstitial","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","role":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"interstitial"}],"abstract":[]}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"value":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"],"anchor":"Essentials"}],"op":"replace","path":"\/seeAlsoSections"}],"traits":[{"interfaceLanguage":"occ"}]}]}