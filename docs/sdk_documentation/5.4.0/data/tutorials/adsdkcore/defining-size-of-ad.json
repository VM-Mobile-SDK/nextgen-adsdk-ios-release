{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/defining-size-of-ad"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/adsdkcore\/defining-size-of-ad"]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"]],"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets"}]}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"sections":[{"title":"Defining the size of the advertisement","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}]}],"chapter":"Working with the built-in capabilities of the SDK","estimatedTimeInMinutes":15},{"tasks":[{"title":"Defining the size of the advertisement","contentSection":[{"content":[{"inlineContent":[{"text":"Observe the state of the advertisement and calculate the height of ","type":"text"},{"type":"codeVoice","code":"AdView"},{"type":"text","text":" when the advertisement is ready to be displayed."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"anchor":"Defining-the-size-of-the-advertisement","stepsSection":[{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s go back to the "},{"code":"AdCell","type":"codeVoice"},{"type":"text","text":" file."}]}],"caption":[{"inlineContent":[{"type":"text","text":"As you may have noticed, in the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","isActive":true},{"text":" state, we are not using ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata","isActive":true,"type":"reference"},{"text":" in any way. From this object we can get the basic information after the advertising content has been loaded from the server.","type":"text"}],"type":"paragraph"}],"code":"01-defining-size-of-ad.swift","type":"step","media":null},{"runtimePreview":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata\/aspectRatio"},{"text":" is optional, we use the default value of 2:1 in this project. This value may not be present if the server does not return height and width values in the response.","type":"text"}]}],"code":"02-defining-size-of-ad.swift","content":[{"inlineContent":[{"type":"text","text":"Let’s add the "},{"type":"codeVoice","code":"aspectRatio"},{"type":"text","text":" parameter in our "},{"type":"codeVoice","code":"ready"},{"type":"text","text":" state. After that, we can pass it from the "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","type":"reference"},{"type":"text","text":" state."}],"type":"paragraph"}],"media":null},{"runtimePreview":null,"type":"step","code":"03-defining-size-of-ad.swift","content":[{"type":"paragraph","inlineContent":[{"text":"To calculate the required height of ","type":"text"},{"type":"codeVoice","code":"AdView"},{"type":"text","text":" in a vertical list, we need to know the width of "},{"code":"AdCell","type":"codeVoice"},{"type":"text","text":". We will pass it to the initializer, and then calculate the height based on the width and aspect ratio."}]}],"media":null,"caption":[]},{"media":null,"code":"04-defining-size-of-ad.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"The last step will be passing the width to AdCell. For this, we need to open the "},{"type":"codeVoice","code":"FirstScreen"},{"type":"text","text":" file."}],"type":"paragraph"}],"caption":[]},{"type":"step","media":null,"content":[{"inlineContent":[{"text":"We will add a ","type":"text"},{"type":"codeVoice","code":"GeometryReader"},{"text":" to determine the width of our screen and remove the insets in ","type":"text"},{"type":"codeVoice","code":"AdCell"},{"text":" to simplify the width calculation.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"text":"Run the project, make sure everything is working correctly. Now you can be confident about the size of the advertisement.","type":"text"}],"type":"paragraph"}],"code":"05-defining-size-of-ad.swift","runtimePreview":null}]}],"kind":"tasks"},{"featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"kind":"callToAction","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad","isActive":true,"type":"reference","overridingTitle":"Get started"},"title":"Create and display interstitial ad"}],"kind":"project","metadata":{"role":"project","category":"Meet AdSDK","title":"Defining the size of the advertisement","categoryPathComponent":"Meet-AdSDK"},"identifier":{"url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK":{"type":"section","role":"pseudoSymbol","kind":"section","title":"First steps for working with AdSDK","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#First-steps-for-working-with-AdSDK","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#First-steps-for-working-with-AdSDK","abstract":[{"type":"text","text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement."}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdMetadata":{"abstract":[{"text":"A class that contains the basic data about the advertisement and renderer.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/admetadata","title":"AdMetadata","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdMetadata"}],"navigatorTitle":[{"text":"AdMetadata","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"type":"topic","role":"project","abstract":[{"text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement.","type":"text"}],"kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","title":"Create and display inline ads","estimatedTime":"20min","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Handling errors during the loading and decoding of advertisements","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Handling-errors-during-the-loading-and-decoding-of-advertisements","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Loading and displaying advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Loading-and-displaying-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Loading-and-displaying-advertisements","abstract":[{"text":"This tutorial will guide you in creating a simple app that can load and display a list of advertisement.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"abstract":[{"type":"text","text":"Describes a request to load an advertisement."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdRequest"}],"role":"symbol","kind":"symbol","type":"topic","title":"AdRequest","url":"\/documentation\/adsdkcore\/adrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","navigatorTitle":[{"kind":"identifier","text":"AdRequest"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets#Asset-loading-and-caching":{"url":"\/tutorials\/adsdkcore\/load-and-cache-assets#Asset-loading-and-caching","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets#Asset-loading-and-caching","kind":"section","role":"pseudoSymbol","title":"Asset loading and caching","abstract":[{"type":"text","text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Defining the size of the advertisement","url":"\/tutorials\/adsdkcore\/defining-size-of-ad#Defining-the-size-of-the-advertisement","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad#Defining-the-size-of-the-advertisement","abstract":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Load-And-Cache-Assets":{"type":"topic","role":"project","abstract":[{"text":"Last time we created our custom advert, in which we display an image received from the server. This time, we will refactor the code related to loading the image and add caching.","type":"text"}],"kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Load-And-Cache-Assets","title":"Download and cache ad assets in your custom ads","estimatedTime":"15min","url":"\/tutorials\/adsdkcore\/load-and-cache-assets"},"doc://com.adsdk.core/tutorials/AdSDKCore/Defining-Size-Of-Ad":{"url":"\/tutorials\/adsdkcore\/defining-size-of-ad","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Defining-Size-Of-Ad","kind":"project","role":"project","estimatedTime":"15min","title":"Defining the size of the advertisement","abstract":[{"text":"This tutorial will teach you how to define the size of the advertisement, taking into account the aspect ratio parameter. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object":{"type":"section","role":"pseudoSymbol","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Interstitial-Ad-Object","title":"Interstitial Ad Object","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Interstitial-Ad-Object"},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-advertising-events":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Observing the advertising events","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-advertising-events","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-advertising-events","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling":{"url":"\/tutorials\/adsdkcore\/state-and-event-handling","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling","kind":"project","role":"project","estimatedTime":"25min","title":"Handling the state and events of advertising","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"type":"topic","role":"project","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","title":"Creating customised advertising","estimatedTime":"1hr 0min","url":"\/tutorials\/adsdkcore\/creating-customised-advertising"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","type":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"section","role":"pseudoSymbol","title":"Creating a business layer","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/readyToPresent(metadata:)":{"kind":"symbol","title":"AdState.readyToPresent(metadata:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"readyToPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"metadata","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AdMetadata","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC"},{"text":")","kind":"text"}],"abstract":[{"text":"Signals that the advertisement is now ready to be displayed for the user.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/readyToPresent(metadata:)","type":"topic","url":"\/documentation\/adsdkcore\/adstate\/readytopresent(metadata:)"},"01-defining-size-of-ad.swift":{"fileType":"swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .ready(let ad):","            AdView(advertisement: ad)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    self.state = .ready(ad)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement)","        case error","    }","}"],"highlights":[],"type":"file","syntax":"swift","fileName":"AdCell.swift","identifier":"01-defining-size-of-ad.swift"},"03-defining-size-of-ad.swift":{"syntax":"swift","fileName":"AdCell.swift","identifier":"03-defining-size-of-ad.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    let cellWidth: Double","","    var body: some View {","        switch viewModel.state {","        case let .ready(ad, aspectRatio):","            let height = cellWidth \/ ratio","","            AdView(advertisement: ad)","                .frame(height: height)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    let aspectRatio = metadata.aspectRatio ?? 2","","                    self.state = .ready(ad, aspectRatio: aspectRatio)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement, aspectRatio: Double)","        case error","    }","}"],"fileType":"swift","highlights":[{"line":8},{"line":9},{"line":13},{"line":14},{"line":16}],"type":"file"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad":{"type":"topic","role":"project","kind":"project","estimatedTime":"15min","title":"Create and display interstitial ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}]},"04-defining-size-of-ad.swift":{"syntax":"swift","type":"file","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        List {","            ForEach(viewModel.ads) { ad in","                AdCell(viewModel: ad)","            }","        }","        .listStyle(.plain)","        .clipped()","        .adsContainer()","    }","}","\/\/ ..."],"identifier":"04-defining-size-of-ad.swift","highlights":[],"fileType":"swift","fileName":"FirstScreen.swift"},"02-defining-size-of-ad.swift":{"syntax":"swift","fileName":"AdCell.swift","identifier":"02-defining-size-of-ad.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case let .ready(ad, aspectRatio):","            AdView(advertisement: ad)","        \/\/ ...","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    var state: CellState = .loading","","    \/\/ ...","}","","private extension AdCellViewModel {","    func observeState() {","        Task {","            for await state in ad.stateStream {","                switch state {","                case .readyToPresent(let metadata):","                    let aspectRatio = metadata.aspectRatio ?? 2","","                    self.state = .ready(ad, aspectRatio: aspectRatio)","                \/\/ ...","                }","            }","        }","    }","}","","\/\/ MARK: - Models","extension AdCellViewModel {","    enum CellState {","        case loading","        case ready(Advertisement, aspectRatio: Double)","        case error","    }","}"],"fileType":"swift","highlights":[{"line":10},{"line":32},{"line":33},{"line":34},{"line":46}],"type":"file"},"05-defining-size-of-ad.swift":{"fileType":"swift","syntax":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":19},{"line":20},{"line":21}],"content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","struct FirstScreen: View {","    @State var viewModel: FirstScreenViewModel","","    var body: some View {","        GeometryReader { proxy in","            List {","                ForEach(viewModel.ads) { ad in","                    AdCell(","                        viewModel: ad,","                        cellWidth: proxy.size.width","                    )","                    .listRowInsets(.init())","                }","            }","            .listStyle(.plain)","            .clipped()","            .adsContainer()","        }","    }","}","\/\/ ..."],"identifier":"05-defining-size-of-ad.swift","type":"file","fileName":"FirstScreen.swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Registering a renderer in the SDK","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/State-And-Event-Handling#Observing-the-state-of-advertisements":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Observing the state of advertisements","url":"\/tutorials\/adsdkcore\/state-and-event-handling#Observing-the-state-of-advertisements","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/State-And-Event-Handling#Observing-the-state-of-advertisements","abstract":[{"text":"This tutorial will help you observe and respond to changes in the state and events of advertisements. In it, we will continue the development of the application we started in the previous section.","type":"text"}]},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}],"kind":"overview","role":"overview","url":"\/tutorials\/meet-adsdk","type":"topic","title":"Meet nextgen AdSDK","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"doc://com.adsdk.core/documentation/AdSDKCore/AdMetadata/aspectRatio":{"abstract":[{"text":"The aspect ratio of an advertising banner.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"aspectRatio","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdMetadata\/aspectRatio","title":"aspectRatio","type":"topic","url":"\/documentation\/adsdkcore\/admetadata\/aspectratio"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"type":"topic","role":"article","kind":"article","title":"Working with the built-in capabilities of the SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","abstract":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters":{"type":"topic","role":"project","kind":"project","estimatedTime":"10min","title":"Global AdRequest parameters","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters","abstract":[{"type":"text","text":"We already know how to create an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"text":". However, an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"type":"codeVoice","code":"AdRequests"},{"type":"text","text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"text":".","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","title":"Creating a presentation layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","kind":"article","role":"article","title":"Extending the SDK with your custom advertisements","abstract":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#State-and-event-management":{"type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using Nextgen AdSDK. This process is the same for both inline and interstitial ads."}],"kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#State-and-event-management","title":"State and event management","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#State-and-event-management"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-and-Display-Interstitial-Ad#Presenting-interstitial":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Presenting interstitial","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-and-Display-Interstitial-Ad#Presenting-interstitial","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-AdRequest-Parameters#Modifying-global-parameters":{"type":"section","role":"pseudoSymbol","kind":"section","title":"Modifying global parameters","url":"\/tutorials\/adsdkcore\/global-adrequest-parameters#Modifying-global-parameters","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-AdRequest-Parameters#Modifying-global-parameters","abstract":[{"text":"We already know how to create an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":". However, an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"text":" can have additional parameters beyond those you pass during initialization. These additional parameters are global for all ","type":"text"},{"type":"codeVoice","code":"AdRequests"},{"text":". The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true,"type":"reference"},{"type":"text","text":"."}]}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}