{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","modules":[{"name":"AdSDKCore"}],"roleHeading":"Article","title":"AdSDKSwiftUI"},"kind":"article","seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"On top of the SDK Core, ","type":"text"},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"type":"text","text":" provides extensions for displaying "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" in SwiftUI based applications.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The currently available inline renderers are:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Native Image","type":"text"}],"type":"strong"},{"type":"text","text":" – displays the image received from the ad server, responds to events related to display and interactions with the advertisement."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Generic"}]},{"type":"text","text":" – displays advertisements in HTML format using "},{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":" and has limited support for MRAID 3.0. For clarification on supported functionality, please contact the mobile team at ADITION."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The currently available interstitial renderers are:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Interstitial Image"}],"type":"strong"},{"type":"text","text":" – displays an advertising image received from the server in full screen, which will disappear after a certain period of time, which you can configure on the frontend."}]}]}]},{"type":"heading","level":2,"anchor":"AdService-creation-for-SwiftUI","text":"AdService creation for SwiftUI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To easily create and configure an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"type":"text","text":" in your application that uses "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":", the "},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"type":"text","text":" framework has a static methods for "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true},{"type":"text","text":" creation."}]},{"type":"codeListing","code":["static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") -> AnyPublisher<AdService, AdError>","","static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") async throws -> AdService"],"syntax":"swift"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Parameters:"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"networkID: Appropriate "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cacheSize: Size in mb that you can set for max cache size. 100 Mb by default."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"timeout: Timeout defines the time interval to setup the config. 60 seconds by default."}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"Returns:","type":"text"}],"type":"strong"},{"type":"text","text":" Configured "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["\/\/ Combine","subscription = AdService.configure(networkID: 0000)","    .sink { [unowned self] completion in","        guard case .failure(let error) = completion else { return }","","        print(\"AdService configuration error: \\(error)\")","","    } receiveValue: { [unowned self] adService in","        print(\"AdService configured and ready to work\")","    }","","\/\/ Async\/Await","do {","    let adService = try await AdService.configure(","        networkID: 0000","    )","","    print(\"AdService configured and ready to work\")","","} catch {","    print(\"AdService configuration error: \\(error)\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Displaying Inline Advertisements","anchor":"Displaying-Inline-Advertisements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display advertisements in your SwiftUI hierarchy, you use "},{"code":"AdView","type":"codeVoice"},{"text":". It serves as a container for any type of inline advertisement, both built-in and custom native.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important:","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"code":"AdView","type":"codeVoice"},{"text":" can only display Ads with the ","type":"text"},{"code":"placementType","type":"codeVoice"},{"text":" parameter ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"If you pass to it:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" with the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"type":"text","text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit"},{"text":" that returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","isActive":true},{"text":" - the advertisement will return an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference"},{"type":"text","text":" state with an "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","type":"reference"},{"text":" error.","type":"text"}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["@Observable","@MainActor","final class AdCellViewModel {","    var ad: Advertisement","    var state: State = .loading","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            \/\/ The inline parameter is the default,","            \/\/ so you do not need to specify it explicitly.","            placementType: .inline ","        )","    }","","    \/\/ ...","}","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            loaderView()","","        case .view(let advertisement):","            AdView(advertisement: advertisement)","","        case .error(let description):","            errorView(description)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also calculate the size of the ad based on the aspect ratio. See how "},{"type":"codeVoice","code":"AdView"},{"text":" works in practice in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","overridingTitle":"tutorial","overridingTitleInlineContent":[{"text":"tutorial","type":"text"}]},{"text":".","type":"text"}]},{"level":2,"text":"Displaying Interstitial Advertisements","type":"heading","anchor":"Displaying-Interstitial-Advertisements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display ads in full screen, you use the "},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"type":"text","text":" View modifier. It serves as a container for any type of interstitial advertisement, both built-in and custom native."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" "},{"code":".interstitial(isShouldBePresented:,_:)","type":"codeVoice"},{"type":"text","text":" can only display Ads with the "},{"code":"placementType","type":"codeVoice"},{"type":"text","text":" parameter "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"If you pass to it:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" with the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},{"text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE.","type":"text"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" with a "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","isActive":true,"type":"reference"},{"type":"text","text":" that returns "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline"},{"text":" - the advertisement will return an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)"},{"type":"text","text":" state with an "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","isActive":true},{"text":" error.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["@Observable","@MainActor","final class ScreenWithInterstitialViewModel {","    var ad: Advertisement","    var isInterstitialPresented: Bool = false","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            placementType: .interstitial","        )","","        observeAd(ad)","    }","","    func observeAd(_ ad: Advertisement) {","        Task {","            for await state in ad.stateStream {","                guard case .readyToPresent(let metadata) = state else {","                    return","                }","","                \/\/ After receiving readyToPresent state you can","                \/\/ start to present interstitial.","                \/\/","                \/\/ If you change the state to true before the ad","                \/\/ is loaded, it will be displayed immediately after","                \/\/ it is loaded.","                isInterstitialPresented = true","            }","        }","    }","}","","struct ScreenWithInterstitial: View {","    @State var viewModel: ScreenWithInterstitialViewModel","","    var body: some View {","        VStack {","            Text(\"My Screen Content\")","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialPresented,","            viewModel.ad","        )","    }","}"]},{"type":"heading","text":"Visibility events","level":2,"anchor":"Visibility-events"},{"type":"paragraph","inlineContent":[{"text":"To enable the partial visibility events ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)"},{"type":"text","text":" with inline ad, you have to add the "},{"type":"codeVoice","code":".adsContainer()"},{"text":" View modifier:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var body: some View {","    List {","        ForEach(cellViewModels) {","            AdCell(viewModel: $0)","        }","    }","    .clipped()","    .adsContainer()","}"]}]}],"abstract":[{"type":"text","text":"This framework contains the SwiftUI extensions for the AdSDK for iOS. You use this framework together with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdSDKSwiftUI","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/AdState/error(_:)":{"kind":"symbol","abstract":[{"text":"Signals that an advertisement lifecycle error has occurred.","type":"text"}],"role":"symbol","url":"\/documentation\/adsdkcore\/adstate\/error(_:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"title":"AdState.error(_:)"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/interstitial(transitionDuration:)":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","url":"\/documentation\/adsdkcore\/adplacement\/interstitial(transitionduration:)","kind":"symbol","title":"AdPlacement.interstitial(transitionDuration:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interstitial","kind":"identifier"},{"kind":"text","text":"("},{"text":"transitionDuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The placement type that you want to present as a full screen cover ad."}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdError/mismatchPlacementType":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","url":"\/documentation\/adsdkcore\/aderror\/mismatchplacementtype","kind":"symbol","title":"AdError.mismatchPlacementType","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mismatchPlacementType"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The error is caused by an incorrect match between the passed and received"},{"text":" ","type":"text"},{"text":"placement type.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"navigatorTitle":[{"kind":"identifier","text":"Advertisement"}],"type":"topic","role":"symbol","abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"title":"Advertisement","url":"\/documentation\/adsdkcore\/advertisement","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"kind":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/inline":{"abstract":[],"url":"\/documentation\/adsdkcore\/adplacementtype\/inline","kind":"symbol","title":"AdPlacementType.inline","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"inline","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/contentUnit":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","url":"\/documentation\/adsdkcore\/adrequest\/contentunit","kind":"symbol","title":"contentUnit","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentUnit"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"role":"symbol","type":"topic","abstract":[{"text":"Unique ID of a content space in the ADITION ad-serving platform.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/adsdkcore","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based.","type":"text"}],"title":"AdSDKCore"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"role":"overview","type":"topic","url":"\/tutorials\/meet-adsdk","kind":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","title":"Meet nextgen AdSDK","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AdService"}],"url":"\/documentation\/adsdkcore\/adservice","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","title":"AdService","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdService"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"networkID"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/adsdkcore\/adservice\/networkid","abstract":[{"type":"text","text":"The unique identifier of the ad network."}],"title":"networkID","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEvent/viewable(percentage:url:metadata:)":{"kind":"symbol","url":"\/documentation\/adsdkcore\/adevent\/viewable(percentage:url:metadata:)","title":"AdEvent.viewable(percentage:url:metadata:)","type":"topic","abstract":[{"type":"text","text":"Signals that the user has seen an advertisement."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewable"},{"text":"(","kind":"text"},{"text":"percentage","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AdVisibilityPercentage","preciseIdentifier":"s:9AdSDKCore0A20VisibilityPercentageO"},{"kind":"text","text":", "},{"text":"url","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC","text":"AdMetadata"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/inline":{"kind":"symbol","url":"\/documentation\/adsdkcore\/adplacement\/inline","title":"AdPlacement.inline","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline","abstract":[{"type":"text","text":"The placement type that you want to display as an ad in your view hierarchy."}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inline"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"abstract":[],"url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","kind":"symbol","title":"AdPlacementType.interstitial","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interstitial"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"generated":true,"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"],"title":"Essentials"}]}]}]}