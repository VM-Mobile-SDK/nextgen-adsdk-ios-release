{"abstract":[{"text":"This framework contains the SwiftUI extensions for the AdSDK for iOS. You use this framework together with ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"article","metadata":{"role":"article","modules":[{"name":"AdSDKCore"}],"title":"AdSDKSwiftUI","roleHeading":"Article"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdSDKSwiftUI","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Essentials","generated":true,"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"On top of the SDK Core, ","type":"text"},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"type":"text","text":" provides extensions for displaying "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" in SwiftUI based applications.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The currently available inline renderers are:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Native Image"}],"type":"strong"},{"text":" – displays the image received from the ad server, responds to events related to display and interactions with the advertisement.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Generic"}],"type":"strong"},{"text":" – displays advertisements in HTML format using ","type":"text"},{"code":"WKWebView","type":"codeVoice"},{"type":"text","text":" and has limited support for MRAID 3.0. For clarification on supported functionality, please contact the mobile team at ADITION."}]}]}]},{"inlineContent":[{"text":"The currently available interstitial renderers are:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Interstitial Image","type":"text"}]},{"type":"text","text":" – displays an advertising image received from the server in full screen, which will disappear after a certain period of time, which you can configure on the frontend."}]}]}]},{"level":2,"text":"AdService creation for SwiftUI","anchor":"AdService-creation-for-SwiftUI","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To easily create and configure an "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true},{"text":" in your application that uses ","type":"text"},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":", the "},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"text":" framework has a static methods for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference"},{"text":" creation.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") -> AnyPublisher<AdService, AdError>","","static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") async throws -> AdService"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Parameters:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"networkID: Appropriate ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"cacheSize: Size in mb that you can set for max cache size. 100 Mb by default.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"timeout: Timeout defines the time interval to setup the config. 60 seconds by default."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Returns:","type":"text"}],"type":"strong"},{"type":"text","text":" Configured "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}]},{"syntax":"swift","code":["\/\/ Combine","subscription = AdService.configure(networkID: 0000)","    .sink { [unowned self] completion in","        guard case .failure(let error) = completion else { return }","","        print(\"AdService configuration error: \\(error)\")","","    } receiveValue: { [unowned self] adService in","        print(\"AdService configured and ready to work\")","    }","","\/\/ Async\/Await","do {","    let adService = try await AdService.configure(","        networkID: 0000","    )","","    print(\"AdService configured and ready to work\")","","} catch {","    print(\"AdService configuration error: \\(error)\")","}"],"type":"codeListing"},{"level":2,"type":"heading","anchor":"Displaying-Inline-Advertisements","text":"Displaying Inline Advertisements"},{"inlineContent":[{"text":"To display advertisements in your SwiftUI hierarchy, you use ","type":"text"},{"type":"codeVoice","code":"AdView"},{"type":"text","text":". It serves as a container for any type of inline advertisement, both built-in and custom native."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Important:"}],"type":"strong"},{"type":"text","text":" "},{"type":"codeVoice","code":"AdView"},{"type":"text","text":" can only display Ads with the "},{"type":"codeVoice","code":"placementType"},{"text":" parameter ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you pass to it:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial"},{"type":"text","text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE."}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" with a ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","type":"reference","isActive":true},{"text":" that returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","isActive":true},{"type":"text","text":" - the advertisement will return an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)"},{"type":"text","text":" state with an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType"},{"text":" error.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["@Observable","@MainActor","final class AdCellViewModel {","    var ad: Advertisement","    var state: State = .loading","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            \/\/ The inline parameter is the default,","            \/\/ so you do not need to specify it explicitly.","            placementType: .inline ","        )","    }","","    \/\/ ...","}","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            loaderView()","","        case .view(let advertisement):","            AdView(advertisement: advertisement)","","        case .error(let description):","            errorView(description)","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You can also calculate the size of the ad based on the aspect ratio. See how ","type":"text"},{"type":"codeVoice","code":"AdView"},{"text":" works in practice in the ","type":"text"},{"overridingTitle":"tutorial","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","type":"reference","overridingTitleInlineContent":[{"text":"tutorial","type":"text"}],"isActive":true},{"text":".","type":"text"}]},{"type":"heading","anchor":"Displaying-Interstitial-Advertisements","level":2,"text":"Displaying Interstitial Advertisements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To display ads in full screen, you use the "},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"type":"text","text":" View modifier. It serves as a container for any type of interstitial advertisement, both built-in and custom native."}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important:"}],"type":"strong"},{"type":"text","text":" "},{"code":".interstitial(isShouldBePresented:,_:)","type":"codeVoice"},{"type":"text","text":" can only display Ads with the "},{"type":"codeVoice","code":"placementType"},{"text":" parameter ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you pass to it:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" with the "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","type":"reference"},{"text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"type":"text","text":" with a "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","type":"reference","isActive":true},{"type":"text","text":" that returns "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline","isActive":true},{"type":"text","text":" - the advertisement will return an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference","isActive":true},{"type":"text","text":" state with an "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","type":"reference"},{"type":"text","text":" error."}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["@Observable","@MainActor","final class ScreenWithInterstitialViewModel {","    var ad: Advertisement","    var isInterstitialPresented: Bool = false","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            placementType: .interstitial","        )","","        observeAd(ad)","    }","","    func observeAd(_ ad: Advertisement) {","        Task {","            for await state in ad.stateStream {","                guard case .readyToPresent(let metadata) = state else {","                    return","                }","","                \/\/ After receiving readyToPresent state you can","                \/\/ start to present interstitial.","                \/\/","                \/\/ If you change the state to true before the ad","                \/\/ is loaded, it will be displayed immediately after","                \/\/ it is loaded.","                isInterstitialPresented = true","            }","        }","    }","}","","struct ScreenWithInterstitial: View {","    @State var viewModel: ScreenWithInterstitialViewModel","","    var body: some View {","        VStack {","            Text(\"My Screen Content\")","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialPresented,","            viewModel.ad","        )","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":2,"anchor":"Visibility-events","text":"Visibility events"},{"inlineContent":[{"type":"text","text":"To enable the partial visibility events "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)"},{"text":" with inline ad, you have to add the ","type":"text"},{"code":".adsContainer()","type":"codeVoice"},{"type":"text","text":" View modifier:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var body: some View {","    List {","        ForEach(cellViewModels) {","            AdCell(viewModel: $0)","        }","    }","    .clipped()","    .adsContainer()","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/adsdkcore\/adsdkswiftui"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","abstract":[],"title":"AdPlacementType.interstitial","type":"topic","url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"interstitial","kind":"identifier"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/interstitial(transitionDuration:)":{"title":"AdPlacement.interstitial(transitionDuration:)","url":"\/documentation\/adsdkcore\/adplacement\/interstitial(transitionduration:)","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"interstitial","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transitionDuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval"},{"kind":"text","text":")"}],"abstract":[{"text":"The placement type that you want to present as a full screen cover ad.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/inline":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","abstract":[],"title":"AdPlacementType.inline","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inline"}],"url":"\/documentation\/adsdkcore\/adplacementtype\/inline","type":"topic"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"networkID","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}],"title":"networkID","kind":"symbol","url":"\/documentation\/adsdkcore\/adservice\/networkid","abstract":[{"type":"text","text":"The unique identifier of the ad network."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","type":"topic","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEvent/viewable(percentage:url:metadata:)":{"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewable"},{"text":"(","kind":"text"},{"text":"percentage","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A20VisibilityPercentageO","text":"AdVisibilityPercentage"},{"kind":"text","text":", "},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC","text":"AdMetadata"},{"text":")","kind":"text"}],"title":"AdEvent.viewable(percentage:url:metadata:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","url":"\/documentation\/adsdkcore\/adevent\/viewable(percentage:url:metadata:)","kind":"symbol","abstract":[{"text":"Signals that the user has seen an advertisement.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/error(_:)":{"type":"topic","url":"\/documentation\/adsdkcore\/adstate\/error(_:)","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","title":"AdState.error(_:)","abstract":[{"text":"Signals that an advertisement lifecycle error has occurred.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"error","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":")","kind":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdError/mismatchPlacementType":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","kind":"symbol","abstract":[{"type":"text","text":"The error is caused by an incorrect match between the passed and received"},{"type":"text","text":" "},{"text":"placement type.","type":"text"}],"type":"topic","title":"AdError.mismatchPlacementType","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mismatchPlacementType"}],"url":"\/documentation\/adsdkcore\/aderror\/mismatchplacementtype"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"type":"topic","role":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","title":"Meet nextgen AdSDK","url":"\/tutorials\/meet-adsdk","kind":"overview","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK.","type":"text"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"kind":"symbol","title":"AdSDKCore","role":"collection","abstract":[{"text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based.","type":"text"}],"type":"topic","url":"\/documentation\/adsdkcore","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/inline":{"type":"topic","url":"\/documentation\/adsdkcore\/adplacement\/inline","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline","abstract":[{"type":"text","text":"The placement type that you want to display as an ad in your view hierarchy."}],"title":"AdPlacement.inline","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"inline","kind":"identifier"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/contentUnit":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentUnit"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/adsdkcore\/adrequest\/contentunit","kind":"symbol","role":"symbol","abstract":[{"text":"Unique ID of a content space in the ADITION ad-serving platform.","type":"text"}],"title":"contentUnit"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"url":"\/documentation\/adsdkcore\/adservice","type":"topic","title":"AdService","kind":"symbol","abstract":[{"text":"A key object for configuring your advertisements.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdService"}],"navigatorTitle":[{"kind":"identifier","text":"AdService"}]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Advertisement","kind":"identifier"}],"navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"title":"Advertisement","role":"symbol","abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","url":"\/documentation\/adsdkcore\/advertisement"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"replace","value":[{"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"],"generated":true,"title":"Essentials"}],"path":"\/seeAlsoSections"}]}]}