{"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"],"generated":true}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"On top of the SDK Core, ","type":"text"},{"code":"AdSDKSwiftUI","type":"codeVoice"},{"text":" provides extensions for displaying ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" in SwiftUI based applications."}]},{"inlineContent":[{"type":"text","text":"The currently available inline renderers are:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Native Image"}],"type":"strong"},{"text":" – displays the image received from the ad server, responds to events related to display and interactions with the advertisement.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Generic"}]},{"type":"text","text":" – displays advertisements in HTML format using "},{"code":"WKWebView","type":"codeVoice"},{"text":" and has limited support for MRAID 3.0. For clarification on supported functionality, please contact the mobile team at ADITION.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The currently available interstitial renderers are:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Interstitial Image","type":"text"}]},{"type":"text","text":" – displays an advertising image received from the server in full screen, which will disappear after a certain period of time, which you can configure on the frontend."}]}]}]},{"text":"AdService creation for SwiftUI","type":"heading","level":2,"anchor":"AdService-creation-for-SwiftUI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To easily create and configure an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"type":"text","text":" in your application that uses "},{"type":"codeVoice","code":"SwiftUI"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"text":" framework has a static methods for ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","isActive":true,"type":"reference"},{"text":" creation.","type":"text"}]},{"type":"codeListing","code":["static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") -> AnyPublisher<AdService, AdError>","","static func configure(","    networkID: UInt,","    cacheSize: UInt8 = 100,","    timeout: Int = 60",") async throws -> AdService"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Parameters:","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"networkID: Appropriate ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"cacheSize: Size in mb that you can set for max cache size. 100 Mb by default.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"timeout: Timeout defines the time interval to setup the config. 60 seconds by default.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Returns:"}],"type":"strong"},{"type":"text","text":" Configured "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Combine","subscription = AdService.configure(networkID: 0000)","    .sink { [unowned self] completion in","        guard case .failure(let error) = completion else { return }","","        print(\"AdService configuration error: \\(error)\")","","    } receiveValue: { [unowned self] adService in","        print(\"AdService configured and ready to work\")","    }","","\/\/ Async\/Await","do {","    let adService = try await AdService.configure(","        networkID: 0000","    )","","    print(\"AdService configured and ready to work\")","","} catch {","    print(\"AdService configuration error: \\(error)\")","}"],"syntax":"swift"},{"text":"Displaying Inline Advertisements","level":2,"type":"heading","anchor":"Displaying-Inline-Advertisements"},{"inlineContent":[{"type":"text","text":"To display advertisements in your SwiftUI hierarchy, you use "},{"type":"codeVoice","code":"AdView"},{"type":"text","text":". It serves as a container for any type of inline advertisement, both built-in and custom native."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Important:","type":"text"}],"type":"strong"},{"type":"text","text":" "},{"code":"AdView","type":"codeVoice"},{"text":" can only display Ads with the ","type":"text"},{"type":"codeVoice","code":"placementType"},{"type":"text","text":" parameter "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"If you pass to it:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"text":" with the ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","type":"reference","isActive":true},{"text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" with a "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","type":"reference","isActive":true},{"text":" that returns ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","isActive":true,"type":"reference"},{"type":"text","text":" - the advertisement will return an "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference"},{"text":" state with an ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","isActive":true},{"text":" error.","type":"text"}],"type":"paragraph"}]}]},{"code":["@Observable","@MainActor","final class AdCellViewModel {","    var ad: Advertisement","    var state: State = .loading","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            \/\/ The inline parameter is the default,","            \/\/ so you do not need to specify it explicitly.","            placementType: .inline ","        )","    }","","    \/\/ ...","}","","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            loaderView()","","        case .view(let advertisement):","            AdView(advertisement: advertisement)","","        case .error(let description):","            errorView(description)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also calculate the size of the ad based on the aspect ratio. See how "},{"code":"AdView","type":"codeVoice"},{"type":"text","text":" works in practice in the "},{"isActive":true,"overridingTitle":"tutorial","overridingTitleInlineContent":[{"type":"text","text":"tutorial"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","type":"reference"},{"type":"text","text":"."}]},{"level":2,"type":"heading","text":"Displaying Interstitial Advertisements","anchor":"Displaying-Interstitial-Advertisements"},{"type":"paragraph","inlineContent":[{"text":"To display ads in full screen, you use the ","type":"text"},{"type":"codeVoice","code":".interstitial(isShouldBePresented:,_:)"},{"type":"text","text":" View modifier. It serves as a container for any type of interstitial advertisement, both built-in and custom native."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" "},{"code":".interstitial(isShouldBePresented:,_:)","type":"codeVoice"},{"text":" can only display Ads with the ","type":"text"},{"type":"codeVoice","code":"placementType"},{"text":" parameter ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If you pass to it:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" with the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","isActive":true},{"text":" parameter, the ad will not be displayed and you will see an error in the debug section of your IDE.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit"},{"text":" that returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline","isActive":true},{"type":"text","text":" - the advertisement will return an "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","type":"reference","isActive":true},{"text":" state with an ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","isActive":true,"type":"reference"},{"type":"text","text":" error."}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["@Observable","@MainActor","final class ScreenWithInterstitialViewModel {","    var ad: Advertisement","    var isInterstitialPresented: Bool = false","","    init(request: AdRequest, _ service: AdService) {","        self.ad = service.makeAdvertisement(","            request: request,","            placementType: .interstitial","        )","","        observeAd(ad)","    }","","    func observeAd(_ ad: Advertisement) {","        Task {","            for await state in ad.stateStream {","                guard case .readyToPresent(let metadata) = state else {","                    return","                }","","                \/\/ After receiving readyToPresent state you can","                \/\/ start to present interstitial.","                \/\/","                \/\/ If you change the state to true before the ad","                \/\/ is loaded, it will be displayed immediately after","                \/\/ it is loaded.","                isInterstitialPresented = true","            }","        }","    }","}","","struct ScreenWithInterstitial: View {","    @State var viewModel: ScreenWithInterstitialViewModel","","    var body: some View {","        VStack {","            Text(\"My Screen Content\")","        }","        .interstitial(","            isShouldBePresented: $viewModel.isInterstitialPresented,","            viewModel.ad","        )","    }","}"]},{"level":2,"text":"Visibility events","anchor":"Visibility-events","type":"heading"},{"inlineContent":[{"type":"text","text":"To enable the partial visibility events "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","isActive":true,"type":"reference"},{"type":"text","text":" with inline ad, you have to add the "},{"type":"codeVoice","code":".adsContainer()"},{"text":" View modifier:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var body: some View {","    List {","        ForEach(cellViewModels) {","            AdCell(viewModel: $0)","        }","    }","    .clipped()","    .adsContainer()","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/adsdkcore\/adsdkswiftui"]}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdSDKSwiftUI","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"sections":[],"abstract":[{"type":"text","text":"This framework contains the SwiftUI extensions for the AdSDK for iOS. You use this framework together with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},{"type":"text","text":"."}],"metadata":{"modules":[{"name":"AdSDKCore"}],"role":"article","roleHeading":"Article","title":"AdSDKSwiftUI"},"references":{"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based on the AdSDK."}],"role":"overview","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","kind":"overview","title":"Meet nextgen AdSDK","url":"\/tutorials\/meet-adsdk","type":"topic"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/networkID":{"role":"symbol","url":"\/documentation\/adsdkcore\/adservice\/networkid","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/networkID","kind":"symbol","title":"networkID","abstract":[{"type":"text","text":"The unique identifier of the ad network."}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"networkID","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}]},"doc://com.adsdk.core/documentation/AdSDKCore":{"abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Combine, Modern Concurrency, and SwiftUI based."}],"title":"AdSDKCore","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/adsdkcore","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/inline":{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/inline","type":"topic","url":"\/documentation\/adsdkcore\/adplacementtype\/inline","abstract":[],"kind":"symbol","title":"AdPlacementType.inline","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"inline","kind":"identifier"}],"role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"abstract":[],"kind":"symbol","url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","title":"AdPlacementType.interstitial","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"interstitial","kind":"identifier"}]},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"abstract":[{"type":"text","text":"A key object interface describing the advertisement."}],"kind":"symbol","url":"\/documentation\/adsdkcore\/advertisement","navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","title":"Advertisement","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest/contentUnit":{"abstract":[{"type":"text","text":"Unique ID of a content space in the ADITION ad-serving platform."}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"contentUnit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest\/contentUnit","kind":"symbol","title":"contentUnit","url":"\/documentation\/adsdkcore\/adrequest\/contentunit","type":"topic"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/inline":{"abstract":[{"text":"The placement type that you want to display as an ad in your view hierarchy.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inline"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/inline","title":"AdPlacement.inline","role":"symbol","url":"\/documentation\/adsdkcore\/adplacement\/inline"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacement/interstitial(transitionDuration:)":{"title":"AdPlacement.interstitial(transitionDuration:)","abstract":[{"text":"The placement type that you want to present as a full screen cover ad.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacement\/interstitial(transitionDuration:)","role":"symbol","type":"topic","url":"\/documentation\/adsdkcore\/adplacement\/interstitial(transitionduration:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interstitial"},{"kind":"text","text":"("},{"text":"transitionDuration","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":")"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdService"}],"abstract":[{"type":"text","text":"A key object for configuring your advertisements."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","navigatorTitle":[{"text":"AdService","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/adservice","kind":"symbol","type":"topic","title":"AdService","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdError/mismatchPlacementType":{"type":"topic","kind":"symbol","title":"AdError.mismatchPlacementType","abstract":[{"type":"text","text":"The error is caused by an incorrect match between the passed and received"},{"type":"text","text":" "},{"type":"text","text":"placement type."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdError\/mismatchPlacementType","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mismatchPlacementType","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/aderror\/mismatchplacementtype","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEvent/viewable(percentage:url:metadata:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewable"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"percentage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A20VisibilityPercentageO","text":"AdVisibilityPercentage"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"url"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"metadata"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A8MetadataC","text":"AdMetadata"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEvent\/viewable(percentage:url:metadata:)","url":"\/documentation\/adsdkcore\/adevent\/viewable(percentage:url:metadata:)","role":"symbol","abstract":[{"type":"text","text":"Signals that the user has seen an advertisement."}],"title":"AdEvent.viewable(percentage:url:metadata:)"},"doc://com.adsdk.core/documentation/AdSDKCore/AdState/error(_:)":{"kind":"symbol","title":"AdState.error(_:)","role":"symbol","url":"\/documentation\/adsdkcore\/adstate\/error(_:)","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdState\/error(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"error","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Signals that an advertisement lifecycle error has occurred.","type":"text"}]}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"identifiers":["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"],"title":"Essentials","generated":true}]}],"traits":[{"interfaceLanguage":"occ"}]}]}