{"sections":[{"estimatedTimeInMinutes":25,"title":"Create and display interstitial ad","content":[{"inlineContent":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We will continue to build the app, so be sure to follow all the previous tutorials. You can download "},{"type":"reference","identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","isActive":true},{"type":"text","text":" which has already implemented all steps from this tutorial."}],"type":"paragraph"}],"kind":"hero","chapter":"Working with the built-in capabilities of the SDK"},{"tasks":[{"contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Your ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":" is ready for creating advertisements, and we have already created a list of advertisements. In this section, we will create a single interstitial ad for the future presentation."}],"type":"paragraph"}],"mediaPosition":"trailing"}],"title":"Creating interstitial advertisements","stepsSection":[{"media":"01-create-display-interstitial-ads-screenshot.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s create "},{"type":"codeVoice","code":"Interstitial.swift"},{"text":" in the ","type":"text"},{"code":"Screens","type":"codeVoice"},{"text":" folder. This will be the screen where we will display the ad.","type":"text"}]}],"type":"step","code":null,"runtimePreview":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"Interstitial"},{"text":" and an ","type":"text"},{"type":"codeVoice","code":"InterstitialViewModel"},{"text":". We pass the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":" to the initialiser, which will be used to create the ad later.","type":"text"}]}],"media":null,"code":"01-create-display-interstitial-ad.swift","runtimePreview":null,"caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ads are created in the same way as inline ads, with one difference – the ","type":"text"},{"type":"codeVoice","code":"placementType"},{"text":" parameter must be ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true},{"type":"text","text":". Let’s create an ad when the "},{"type":"codeVoice","code":"View"},{"type":"text","text":" is displayed."}]}],"type":"step","caption":[],"code":"02-create-display-interstitial-ad.swift","runtimePreview":null,"media":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Now go back to ","type":"text"},{"code":"Main.swift","type":"codeVoice"},{"text":".","type":"text"}]}],"code":"03-create-display-interstitial-ad.swift","runtimePreview":null,"caption":[],"media":null},{"content":[{"inlineContent":[{"text":"Add navigation to your new screen and launch the app. If you did everything correctly, you’ll see that the ad has been successfully loaded.","type":"text"}],"type":"paragraph"}],"media":null,"code":"04-create-display-interstitial-ad.swift","type":"step","runtimePreview":"02-create-display-interstitial-ads-screenshot.png","caption":[]}],"anchor":"Creating-interstitial-advertisements"},{"contentSection":[{"content":[{"inlineContent":[{"text":"We learnt how to create interstitial advertisement. Now, we are ready to present our intertitial ad. In this section, we will display interstitial ad in our app.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Presenting interstitial ad","stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Let’s continue the development in our "},{"code":"Interstitial","type":"codeVoice"},{"text":" file.","type":"text"}],"type":"paragraph"}],"media":null,"code":"05-create-display-interstitial-ad.swift","caption":[],"type":"step","runtimePreview":null},{"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Now let’s add a button that will show our ad if it is loaded."}],"type":"paragraph"}],"media":null,"caption":[],"code":"06-create-display-interstitial-ad.swift"},{"code":"07-create-display-interstitial-ad.swift","media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"The AdSDK provides the enum "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState","isActive":true,"type":"reference"},{"type":"text","text":" to control the state of the interstitial ad presentation. Add it to the "},{"code":"InterstitialViewModel","type":"codeVoice"},{"text":". We will change it when the button is tapped.","type":"text"}],"type":"paragraph"}],"caption":[{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"If you don’t use the "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement\/reload()","isActive":true,"type":"reference"},{"text":" method, your ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"type":"text","text":" object will always be loaded, which means that the ad will be presented to the user immediately when state changed to the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)","isActive":true},{"type":"text","text":". Otherwise, the ad will be presented immediately after loading."}],"type":"paragraph"}],"style":"note"}]},{"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"08-create-display-interstitial-ad.swift","content":[{"inlineContent":[{"type":"text","text":"The last thing we need is a presentation layer. To display interstitial ads, "},{"type":"codeVoice","code":"AdSDKSwiftUI"},{"text":" has an ","type":"text"},{"type":"codeVoice","code":".interstitial(_: AdInterstitialState)"},{"text":" modifier. Add it to your ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" and pass the state value from the ","type":"text"},{"type":"codeVoice","code":"InterstitialViewModel"},{"text":".","type":"text"}],"type":"paragraph"}]},{"code":"08-create-display-interstitial-ad.swift","runtimePreview":"03-create-display-interstitial-ads-screenshot.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, if you launch the app, you should see an advert when you tap on the button. Congratulations! But wait, we can’t hide it. We’ll look at how to do this in the next section."}]}],"type":"step","caption":[],"media":null}],"anchor":"Presenting-interstitial-ad"},{"anchor":"Hiding-interstitial-ad","stepsSection":[{"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s continue the development in our ","type":"text"},{"code":"Interstitial","type":"codeVoice"},{"type":"text","text":" file. We could hide the ad by simply changing the "},{"type":"codeVoice","code":"interstitialState"},{"text":" to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden","isActive":true},{"type":"text","text":", but we don’t know when to change it."}]}],"caption":[],"code":"09-create-display-interstitial-ad.swift"},{"media":null,"code":"10-create-display-interstitial-ad.swift","runtimePreview":null,"content":[{"inlineContent":[{"text":"In order to understand when ad should be hidden, we need to use ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate","type":"reference","isActive":true},{"text":" and pass it when creating ads.","type":"text"}],"type":"paragraph"}],"type":"step","caption":[{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate"},{"text":" is used not only for events related to hiding interstitials. We will look at it in more detail in a ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","overridingTitleInlineContent":[{"type":"text","text":"separate tutorial"}],"type":"reference","isActive":true,"overridingTitle":"separate tutorial"},{"type":"text","text":"."}]}]}]},{"caption":[{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You should not change the state from "},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)","type":"reference"},{"type":"text","text":" to "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden","type":"reference","isActive":true},{"type":"text","text":" without using "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()-9jego","isActive":true,"type":"reference"},{"text":" method. The advert itself knows when it needs to be hidden and asks you to hide it using this method.","type":"text"}]}],"type":"aside"}],"content":[{"inlineContent":[{"text":"The method we are interested in is ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()-9jego","isActive":true,"type":"reference"},{"type":"text","text":". We need to implement it to make sure that the ad is hidden when it is needed. You can launch the app and make sure it works. Congratulations, we can now display interstitials in our app!"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"code":"11-create-display-interstitial-ad.swift"}],"title":"Hiding interstitial ad","contentSection":[{"content":[{"inlineContent":[{"text":"We managed to successfully show the ad, but we would like to be able to close interstitial. In this section, we implement this logic.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}]}],"kind":"tasks"},{"featuredEyebrow":"Tutorial","action":{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"overridingTitle":"Get started","isActive":true},"abstract":[{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"kind":"callToAction","title":"Monitor and process ad-related events"}],"metadata":{"title":"Create and display interstitial ad","role":"project","category":"Meet AdSDK","categoryPathComponent":"Meet-AdSDK"},"kind":"project","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"]},{"paths":["\/tutorials\/adsdkcore\/create-and-display-interstitial-ad"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"modules":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","projects":[{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"}]},{"projects":[{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements"}],"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"],["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK"},"identifier":{"url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","interfaceLanguage":"swift"},"references":{"01-create-display-interstitial-ad.swift":{"type":"file","syntax":"swift","highlights":[],"content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","","    init(_ service: AdService) {","        self.service = service","    }","}","","\/\/ MARK: - Models","extension InterstitialViewModel {","    enum ViewState {","        case loading, ready","        case error(String)","    }","}"],"identifier":"01-create-display-interstitial-ad.swift","fileType":"swift","fileName":"Interstitial.swift"},"02-create-display-interstitial-ads-screenshot.png":{"identifier":"02-create-display-interstitial-ads-screenshot.png","type":"image","alt":"An iPhone screen displaying a text, that ad is loaded.","variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/02-create-display-interstitial-ads-screenshot.png"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"role":"symbol","url":"\/documentation\/adsdkcore\/adservice","title":"AdService","kind":"symbol","abstract":[{"type":"text","text":"A key object for configuring your advertisements."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdService"}],"navigatorTitle":[{"text":"AdService","kind":"identifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"type":"topic","kind":"overview","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","url":"\/tutorials\/meet-adsdk","role":"overview","title":"Meet nextgen AdSDK"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Request-to-unload-or-hide-ad","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"type":"text","text":" and how we can interact with them."}],"title":"Request to unload or hide ad","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Tracking-ad-visibility":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Tracking-ad-visibility","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"title":"Tracking ad visibility"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference","isActive":true},{"text":", and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types","role":"project","estimatedTime":"20min","kind":"project","title":"Global parameters for all request types"},"05-create-display-interstitial-ad.swift":{"type":"file","syntax":"swift","highlights":[],"content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ..."],"identifier":"05-create-display-interstitial-ad.swift","fileType":"swift","fileName":"Interstitial.swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements":{"title":"Creating interstitial advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Creating-interstitial-advertisements","role":"pseudoSymbol","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK":{"title":"First steps for working with AdSDK","kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk","role":"project","estimatedTime":"15min","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"type":"text","text":" - creating an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":"."}],"type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events":{"title":"Monitor and process advertising tap events","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tap-events","role":"pseudoSymbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" and how we can interact with them."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls","kind":"project","role":"project","type":"topic","abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"estimatedTime":"20min","title":"Custom handling of target tap URLs"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Preparing-the-app":{"title":"Preparing the app","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Preparing-the-app","role":"pseudoSymbol","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-inline-advertisements":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-inline-advertisements","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"title":"Creating inline advertisements","type":"section"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"title":"Working with the built-in capabilities of the SDK","kind":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","role":"article","abstract":[],"type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements":{"title":"Creating and displaying a list of advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-and-displaying-a-list-of-advertisements","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"title":"Registering a renderer in the SDK","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","role":"pseudoSymbol","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Event-management":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Event-management","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Event management"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Flushing-the-cache":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Flushing-the-cache","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"title":"Flushing the cache"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitoring-of-ad-related-events","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"title":"Monitoring of ad-related events"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management":{"kind":"project","role":"project","title":"AdSDK Cache Management","url":"\/tutorials\/adsdkcore\/adsdk-cache-management","type":"topic","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"estimatedTime":"10min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement/reload()":{"url":"\/documentation\/adsdkcore\/advertisement\/reload()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reload","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9AdSDKCore0A5ErrorO","kind":"typeIdentifier","text":"AdError"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement\/reload()","required":true,"role":"symbol","abstract":[{"type":"text","text":"Reloads advertisement."}],"title":"reload()"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Limiting-the-cache-size":{"title":"Limiting the cache size","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Limiting-the-cache-size","role":"pseudoSymbol","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"type":"section"},"03-create-display-interstitial-ad.swift":{"syntax":"swift","type":"file","highlights":[],"identifier":"03-create-display-interstitial-ad.swift","content":["\/\/ ...","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            NavigationStack {","                switch viewModel.state {","                case .loading:","                    Text(\"Loading\")","                        .task { await viewModel.configure() }","                case .ready(let adService):","                    VStack {","                        NavigationLink(\"Inline Ads List\") {","                            InlineList(viewModel: .init(adService))","                        }","                    }","","                case .error(let description):","                    Text(\"Error: \\(description)\")","                }","            }","        }","    }","}","\/\/ ..."],"fileName":"Main.swift","fileType":"swift"},"https://github.com/VM-Mobile-SDK/nextgen-adsdk-ios-tutorial/tree/built-in-capabilities/create-interstitial-ad":{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","type":"link","url":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/create-interstitial-ad","titleInlineContent":[{"type":"text","text":"this project"}],"title":"this project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Hiding-interstitial-ad","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"title":"Hiding interstitial ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events":{"role":"project","estimatedTime":"1hr 0min","kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events","title":"Monitor and process ad-related events","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" and how we can interact with them."}],"type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events":{"role":"pseudoSymbol","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tracking-events","kind":"section","title":"Monitor and process advertising tracking events"},"doc://com.adsdk.core/documentation/AdSDKCore/AdPlacementType/interstitial":{"kind":"symbol","abstract":[{"type":"text","text":"Ad created to be displayed as a full screen cover."}],"title":"AdPlacementType.interstitial","url":"\/documentation\/adsdkcore\/adplacementtype\/interstitial","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"interstitial","kind":"identifier"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","kind":"project","role":"project","type":"topic","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"estimatedTime":"45min","title":"Create and display inline ads"},"08-create-display-interstitial-ad.swift":{"syntax":"swift","type":"file","highlights":[],"identifier":"08-create-display-interstitial-ad.swift","content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","            .interstitial($viewModel.interstitialState)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","","        interstitialState = .presentedIfLoaded(advertisement)","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ...","",""],"fileName":"Interstitial.swift","fileType":"swift"},"06-create-display-interstitial-ad.swift":{"type":"file","syntax":"swift","highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":37},{"line":38},{"line":39},{"line":40}],"content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ..."],"identifier":"06-create-display-interstitial-ad.swift","fileType":"swift","fileName":"Interstitial.swift"},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState/presentedIfLoaded(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"If the ad is loaded, it should be presented."}],"title":"AdInterstitialState.presentedIfLoaded(_:)","url":"\/documentation\/adsdkcore\/adinterstitialstate\/presentedifloaded(_:)","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/presentedIfLoaded(_:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"presentedIfLoaded"},{"text":"(","kind":"text"},{"text":"Advertisement","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore13AdvertisementP"},{"kind":"text","text":")"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"title":"AdRequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdRequest","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Describes a request to load an advertisement.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AdRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/adrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Preparing-the-app":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app","type":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Preparing-the-app","kind":"section","title":"Preparing the app"},"01-create-display-interstitial-ads-screenshot.png":{"identifier":"01-create-display-interstitial-ads-screenshot.png","type":"image","alt":"Xcode window showing the correct project structure with Screens\/Interstitial.swift.","variants":[{"url":"\/images\/com.adsdk.core\/01-create-display-interstitial-ads-screenshot.png","traits":["1x","light"]}]},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Conversion-tracking":{"title":"Conversion tracking","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Conversion-tracking","role":"pseudoSymbol","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEventDelegate":{"kind":"symbol","url":"\/documentation\/adsdkcore\/adeventdelegate","role":"symbol","navigatorTitle":[{"text":"AdEventDelegate","kind":"identifier"}],"title":"AdEventDelegate","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdEventDelegate","kind":"identifier"}],"abstract":[{"text":"An object for tracking and processing ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" related events."}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Modifying-global-parameters":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Modifying-global-parameters","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"title":"Modifying global parameters"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking","role":"project","estimatedTime":"30min","kind":"project","title":"User tagging and conversion tracking"},"doc://com.adsdk.core/documentation/AdSDKCore/TagRequest":{"kind":"symbol","title":"TagRequest","type":"topic","abstract":[{"type":"text","text":"Describes a request to “tag” a user."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TagRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TagRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/tagrequest"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"url":"\/documentation\/adsdkcore\/advertisement","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","title":"Advertisement","kind":"symbol","navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"type":"topic","role":"symbol"},"09-create-display-interstitial-ad.swift":{"syntax":"swift","type":"file","highlights":[],"identifier":"09-create-display-interstitial-ad.swift","content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: nil \/\/ Can be skipped","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","\/\/ ..."],"fileName":"Interstitial.swift","fileType":"swift"},"02-create-display-interstitial-ad.swift":{"fileName":"Interstitial.swift","highlights":[{"line":13},{"line":14},{"line":30},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":75}],"identifier":"02-create-display-interstitial-ad.swift","fileType":"swift","syntax":"swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            Text(\"Ad is loaded\")","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: nil \/\/ Can be skipped","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","\/\/ MARK: - Models","extension InterstitialViewModel {","    enum ViewState {","        case loading, ready","        case error(String)","    }","}",""],"type":"file"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Creating-a-target-URL-handler","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"title":"Creating a target URL handler"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app":{"abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Preparing-the-app","kind":"section","role":"pseudoSymbol","type":"section","title":"Preparing the app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a presentation layer"},"07-create-display-interstitial-ad.swift":{"syntax":"swift","type":"file","highlights":[{"line":27},{"line":40},{"line":41},{"line":49}],"identifier":"07-create-display-interstitial-ad.swift","content":["\/\/ MARK: - View","struct Interstitial: View {","    @State var viewModel: InterstitialViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","                .task { await viewModel.loadAdvertisement() }","","        case .ready:","            VStack {","                Button(\"Present\", action: viewModel.presentTapped)","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","","    private let service: AdService","    private var advertisement: Advertisement?","","    init(_ service: AdService) {","        self.service = service","    }","}","","extension InterstitialViewModel {","    func presentTapped() {","        guard let advertisement else { return }","","        interstitialState = .presentedIfLoaded(advertisement)","    }","","    func loadAdvertisement() async { \/* ... *\/ }","}","","\/\/ MARK: - Models","\/\/ ...",""],"fileName":"Interstitial.swift","fileType":"swift"},"03-create-display-interstitial-ads-screenshot.png":{"identifier":"03-create-display-interstitial-ads-screenshot.png","type":"image","alt":"An iPhone screen displaying a full-screen advert with characters from the Matrix film.","variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/03-create-display-interstitial-ads-screenshot.png"}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState/hidden":{"abstract":[{"text":"Advertising should be hidden.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"}],"type":"topic","title":"AdInterstitialState.hidden","url":"\/documentation\/adsdkcore\/adinterstitialstate\/hidden","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState\/hidden"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"estimatedTime":"1hr 30min","role":"project","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","type":"topic","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","kind":"project","title":"Creating customised advertising"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events":{"role":"pseudoSymbol","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" and how we can interact with them."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-custom-advertising-events","kind":"section","title":"Monitor and process custom advertising events"},"doc://com.adsdk.core/documentation/AdSDKCore/AdEventDelegate/unloadRequest()-9jego":{"kind":"symbol","abstract":[{"text":"A method of notifying the app that an ad wants to be closed.","type":"text"}],"title":"unloadRequest()","url":"\/documentation\/adsdkcore\/adeventdelegate\/unloadrequest()-9jego","type":"topic","defaultImplementations":1,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdEventDelegate\/unloadRequest()-9jego","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unloadRequest"},{"text":"()","kind":"text"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Advanced-management-of-advertising-resources":{"title":"Advanced management of advertising resources","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Advanced-management-of-advertising-resources","role":"pseudoSymbol","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/TrackingRequest":{"title":"TrackingRequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TrackingRequest","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Trigger a request for conversion tracking.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TrackingRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/trackingrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","kind":"project","role":"project","type":"topic","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"estimatedTime":"25min","title":"Create and display interstitial ad"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"role":"article","kind":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","abstract":[],"title":"Extending the SDK with your custom advertisements","type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial-ad","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"title":"Presenting interstitial ad"},"doc://com.adsdk.core/documentation/AdSDKCore/AdInterstitialState":{"kind":"symbol","abstract":[{"type":"text","text":"Enum to control the state of the "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdPlacementType\/interstitial","isActive":true},{"text":" ad presentation.","type":"text"}],"title":"AdInterstitialState","url":"\/documentation\/adsdkcore\/adinterstitialstate","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdInterstitialState","navigatorTitle":[{"kind":"identifier","text":"AdInterstitialState"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AdInterstitialState","kind":"identifier"}]},"10-create-display-interstitial-ad.swift":{"type":"file","syntax":"swift","highlights":[{"line":31},{"line":41},{"line":42},{"line":43}],"content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: self","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","extension InterstitialViewModel: AdEventDelegate {","}","\/\/ ..."],"identifier":"10-create-display-interstitial-ad.swift","fileType":"swift","fileName":"Interstitial.swift"},"11-create-display-interstitial-ad.swift":{"syntax":"swift","type":"file","highlights":[{"line":43}],"identifier":"11-create-display-interstitial-ad.swift","content":["\/\/ ...","@Observable","@MainActor","final class InterstitialViewModel {","    var state: ViewState = .loading","    var interstitialState: AdInterstitialState = .hidden","    \/\/ ...","}","","extension InterstitialViewModel {","    func presentTapped() { \/* ... *\/ }","    func loadAdvertisement() async {","        let request = AdRequest(","            contentUnit: 5192923,","            profile: nil, \/\/ Can be skipped","            keywords: nil, \/\/ Can be skipped","            window: nil, \/\/ Can be skipped","            timeoutAfterSeconds: nil, \/\/ Can be skipped","            gdprPd: nil, \/\/ Can be skipped","            campaignId: nil, \/\/ Can be skipped","            bannerId: nil, \/\/ Can be skipped","            isSHBEnabled: nil, \/\/ Can be skipped","            dsa: nil \/\/ Can be skipped","        )","","        do {","            advertisement = try await service.makeAdvertisement(","                request: request,","                placementType: .interstitial, \/\/ Should be interstitial","                targetURLHandler: nil, \/\/ Can be skipped","                eventDelegate: self","            )","","            state = .ready","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","extension InterstitialViewModel: AdEventDelegate {","    func unloadRequest() { interstitialState = .hidden }","}","\/\/ ..."],"fileName":"Interstitial.swift","fileType":"swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#User-tagging":{"role":"pseudoSymbol","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","type":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#User-tagging","kind":"section","title":"User tagging"},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK#AdService-creation":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk#AdService-creation","abstract":[{"text":"This tutorial will guide you the first steps for working with the ","type":"text"},{"code":"AdSDK","type":"codeVoice"},{"text":" - creating an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"title":"AdService creation","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Defining-the-size-of-the-inline-ad","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"title":"Defining the size of the inline ad","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a business layer","type":"section"},"04-create-display-interstitial-ad.swift":{"type":"file","syntax":"swift","highlights":[{"line":18},{"line":19},{"line":20},{"line":21}],"content":["\/\/ ...","@main","struct Main: App {","    @State var viewModel = MainViewModel()","","    var body: some Scene {","        WindowGroup {","            NavigationStack {","                switch viewModel.state {","                case .loading:","                    Text(\"Loading\")","                        .task { await viewModel.configure() }","                case .ready(let adService):","                    VStack {","                        NavigationLink(\"Inline Ads List\") {","                            InlineList(viewModel: .init(adService))","                        }","","                        NavigationLink(\"Interstitial Screen\") {","                            Interstitial(viewModel: .init(adService))","                        }","                    }","","                case .error(let description):","                    Text(\"Error: \\(description)\")","                }","            }","        }","    }","}","\/\/ ..."],"identifier":"04-create-display-interstitial-ad.swift","fileType":"swift","fileName":"Main.swift"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"}]}]}