{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[{"estimatedTimeInMinutes":30,"chapter":"Working with the built-in capabilities of the SDK","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}]},{"type":"paragraph","inlineContent":[{"text":"We will continue to build the app, so be sure to follow all the previous tutorials. You can download ","type":"text"},{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking","isActive":true,"type":"reference"},{"text":" which has already implemented all steps from this tutorial.","type":"text"}]}],"title":"User tagging and conversion tracking","kind":"hero"},{"kind":"tasks","tasks":[{"title":"Preparing the app","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before considering user tagging and conversion tracking, we need to prepare the application to have appropriate places to perform tagging and tracking. In this section, we will add an option to purchase the product shown in the inline ad."}]}]}],"stepsSection":[{"runtimePreview":null,"caption":[],"media":"01-user-tagging-conversion-tracking-screenshot.png","content":[{"inlineContent":[{"type":"text","text":"Let’s create a new "},{"code":"Basket.swift","type":"codeVoice"},{"text":" file in ","type":"text"},{"code":"Screens","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","code":null},{"type":"step","code":"01-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"text":"In it, we create a screen where the user will buy the product, displaying the id, price, quantity, and total cost.","type":"text"}]}],"runtimePreview":"02-user-tagging-conversion-tracking-screenshot.png","media":null,"caption":[]},{"caption":[],"media":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Now we return to the "},{"code":"AdCell.swift","type":"codeVoice"},{"text":" file. First, let’s focus on the ","type":"text"},{"code":"AdCellViewModel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"code":"02-user-tagging-conversion-tracking.swift","type":"step"},{"caption":[],"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s add a random price for the product and keep the reference to ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService","type":"reference","isActive":true},{"text":" in the property.","type":"text"}]}],"code":"03-user-tagging-conversion-tracking.swift"},{"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"All that remains is to change the ","type":"text"},{"type":"codeVoice","code":"AdCell"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[],"media":null,"code":"04-user-tagging-conversion-tracking.swift"},{"type":"step","runtimePreview":"03-user-tagging-conversion-tracking-screenshot.png","media":null,"content":[{"inlineContent":[{"text":"We add a price and a button that will take us to the basket. Now our app is ready to create purchases!","type":"text"}],"type":"paragraph"}],"code":"05-user-tagging-conversion-tracking.swift","caption":[]}],"anchor":"Preparing-the-app"},{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The SDK provides functionality to put a user identifier, e.g. cookie id, into a retargeting segment (to tag a user). This allows advertisers to create a segment of users with certain interests or affinities, and to re-advertise to this segment (retargeting). In this section, we will look at how we can perform a tag request using the AdSDK.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"code":"06-user-tagging-conversion-tracking.swift","content":[{"inlineContent":[{"text":"Let’s continue with the ","type":"text"},{"type":"codeVoice","code":"AdCell.swift"},{"text":" file. Let’s imagine a situation where we need to tag a user when he adds an item to the basket.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"caption":[]},{"caption":[],"code":"07-user-tagging-conversion-tracking.swift","content":[{"inlineContent":[{"text":"To do this, first of all, we add the ","type":"text"},{"code":"onBasket","type":"codeVoice"},{"text":" method to the ","type":"text"},{"type":"codeVoice","code":"AdCellViewModel"},{"type":"text","text":", and call it when the "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":" opens the "},{"type":"codeVoice","code":"Basket"},{"text":" screen.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Now we’re ready to tag the user. You use ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"text":" to describe the tagging request. It consists of tags with a ","type":"text"},{"type":"codeVoice","code":"key"},{"type":"text","text":", a "},{"code":"subkey","type":"codeVoice"},{"text":", and a ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":". In our case, we’ll use "},{"type":"codeVoice","code":"key"},{"text":" as the name of our store, ","type":"text"},{"type":"codeVoice","code":"subkey"},{"type":"text","text":" as the product category, and "},{"type":"codeVoice","code":"value"},{"text":" as our product id.","type":"text"}]}],"media":null,"code":"08-user-tagging-conversion-tracking.swift","caption":[{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"In real projects, the advertiser should provide you with information on the tag parameters.","type":"text"}],"type":"paragraph"}],"name":"Note"}],"type":"step","runtimePreview":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can perform a user tagging request with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/tagUser(request:)"},{"type":"text","text":" method. Congratulations, now our app can tag the user who added the item to the basket!"}]}],"media":null,"caption":[],"code":"09-user-tagging-conversion-tracking.swift","type":"step"}],"anchor":"User-tagging","title":"User tagging"},{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SDK allows you to track conversions. This is useful for advertisers, as conversion details would be available in posttracking reports via the adserver. In this section, we will look at how we can perform a tracking request using the AdSDK."}]}],"mediaPosition":"trailing"}],"title":"Conversion tracking","stepsSection":[{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s open the ","type":"text"},{"code":"Basket.swift","type":"codeVoice"},{"text":" file and focus on the ","type":"text"},{"type":"codeVoice","code":"BasketViewModel"},{"type":"text","text":". The conversion, in our case, is the purchase of an item in the basket."}]}],"media":null,"type":"step","code":"10-user-tagging-conversion-tracking.swift","caption":[]},{"code":"11-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A conversion tracking request is described using "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","type":"reference","isActive":true},{"text":". In it, we pass all the parameters related to the purchase.","type":"text"}]}],"runtimePreview":null,"caption":[{"name":"Note","content":[{"inlineContent":[{"text":"In real projects, the advertiser should provide you with information on the ","type":"text"},{"type":"codeVoice","code":"landingpageId"},{"type":"text","text":" and "},{"type":"codeVoice","code":"trackingspotId"},{"type":"text","text":" parameters."}],"type":"paragraph"}],"style":"note","type":"aside"}],"type":"step","media":null},{"type":"step","media":null,"code":"12-user-tagging-conversion-tracking.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we can perform the tracking request. We use "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/trackingRequest(_:)","isActive":true,"type":"reference"},{"type":"text","text":" for this purpose, and in case of an error, we display it on the screen. Congratulations, our app can now track purchase!"}]}],"caption":[],"runtimePreview":null}],"anchor":"Conversion-tracking"}]},{"abstract":[{"type":"text","text":"We already know how to create and perform "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true},{"type":"text","text":", and "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest","isActive":true},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"title":"Global parameters for all request types","action":{"type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","isActive":true,"overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction"}],"hierarchy":{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","modules":[{"projects":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","kind":"task"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","sections":[{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking"}]},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","kind":"task"}]},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","projects":[{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app","kind":"task"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler","kind":"task"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs"},{"sections":[{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management"},{"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","kind":"task"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK"},{"kind":"task","reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources"}],"reference":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising"}]}],"paths":[["doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/$volume","doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK"],["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore"]]},"metadata":{"category":"Meet AdSDK","title":"User tagging and conversion tracking","role":"project","categoryPathComponent":"Meet-AdSDK"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking"},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking"]}],"references":{"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Creating-a-target-URL-handler","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Creating-a-target-URL-handler","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour."}],"title":"Creating a target URL handler"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events":{"role":"pseudoSymbol","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"text":" and how we can interact with them.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tracking-events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tracking-events","kind":"section","title":"Monitor and process advertising tracking events"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events":{"title":"Monitor and process advertising tap events","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-advertising-tap-events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-advertising-tap-events","role":"pseudoSymbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" and how we can interact with them."}],"type":"section"},"04-user-tagging-conversion-tracking.swift":{"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","\/\/ ..."],"type":"file","highlights":[],"identifier":"04-user-tagging-conversion-tracking.swift","fileType":"swift","syntax":"swift","fileName":"AdCell.swift"},"07-user-tagging-conversion-tracking.swift":{"syntax":"swift","type":"file","fileType":"swift","fileName":"AdCell.swift","identifier":"07-user-tagging-conversion-tracking.swift","content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","","    }","}"],"highlights":[{"line":24},{"line":48},{"line":49},{"line":50},{"line":51}]},"doc://com.adsdk.core/documentation/AdSDKCore/AdService":{"role":"symbol","url":"\/documentation\/adsdkcore\/adservice","title":"AdService","kind":"symbol","abstract":[{"type":"text","text":"A key object for configuring your advertisements."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdService"}],"navigatorTitle":[{"text":"AdService","kind":"identifier"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},"doc://com.adsdk.core/documentation/AdSDKCore/Advertisement":{"url":"\/documentation\/adsdkcore\/advertisement","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","title":"Advertisement","kind":"symbol","navigatorTitle":[{"text":"Advertisement","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Advertisement"}],"abstract":[{"text":"A key object interface describing the advertisement.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking","role":"project","estimatedTime":"30min","kind":"project","title":"User tagging and conversion tracking"},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK#AdService-creation":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK#AdService-creation","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk#AdService-creation","abstract":[{"text":"This tutorial will guide you the first steps for working with the ","type":"text"},{"code":"AdSDK","type":"codeVoice"},{"text":" - creating an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"text":".","type":"text"}],"title":"AdService creation","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events":{"role":"project","estimatedTime":"1hr 0min","kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events","title":"Monitor and process ad-related events","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" and how we can interact with them."}],"type":"topic"},"10-user-tagging-conversion-tracking.swift":{"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","","    }","}"],"type":"file","highlights":[],"identifier":"10-user-tagging-conversion-tracking.swift","fileType":"swift","syntax":"swift","fileName":"Basket.swift"},"08-user-tagging-conversion-tracking.swift":{"syntax":"swift","type":"file","fileType":"swift","fileName":"AdCell.swift","identifier":"08-user-tagging-conversion-tracking.swift","content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","        let request = TagRequest(","            [.init(key: \"MyTutorialStore\", subkey: \"Movies\", value: \"\\(id)\")],","            timeout: nil \/\/ Can be skipped","        )","    }","}"],"highlights":[{"line":50},{"line":51},{"line":52},{"line":53}]},"01-user-tagging-conversion-tracking-screenshot.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/01-user-tagging-conversion-tracking-screenshot.png"}],"identifier":"01-user-tagging-conversion-tracking-screenshot.png","alt":"Xcode window showing the correct project structure with Screens\/Basket.swift.","type":"image"},"doc://com.adsdk.core/tutorials/Meet-AdSDK":{"type":"topic","kind":"overview","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK","url":"\/tutorials\/meet-adsdk","role":"overview","title":"Meet nextgen AdSDK"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Preparing-the-app":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Preparing-the-app","type":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Preparing-the-app","kind":"section","title":"Preparing the app"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app":{"abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls#Preparing-the-app","kind":"section","role":"pseudoSymbol","type":"section","title":"Preparing the app","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs#Preparing-the-app"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Request-to-unload-or-hide-ad","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Request-to-unload-or-hide-ad","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference"},{"type":"text","text":" and how we can interact with them."}],"title":"Request to unload or hide ad","type":"section"},"12-user-tagging-conversion-tracking.swift":{"fileType":"swift","identifier":"12-user-tagging-conversion-tracking.swift","highlights":[{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37}],"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","        let request = TrackingRequest(","            landingpageId: .zero,","            trackingspotId: .zero,","            orderId: \"My purchase id\",","            price: Float(price), \/\/ Can be skipped","            total: Float(total), \/\/ Can be skipped","            quantity: UInt32(quantity), \/\/ Can be skipped","            itemNumber: \"\\(id)\", \/\/ Can be skipped","            description: nil, \/\/ Can be skipped","            timeout: nil \/\/ Can be skipped","        )","","        do {","            try await service.trackingRequest(request)","        } catch {","            self.error = error.localizedDescription","        }","    }","}"],"type":"file","syntax":"swift","fileName":"Basket.swift"},"03-user-tagging-conversion-tracking-screenshot.png":{"alt":"A phone screen with several advertising banners showing different characters from films and TV series. At the bottom of each one is the price in euros and a button that says ‘Add to basket’.","identifier":"03-user-tagging-conversion-tracking-screenshot.png","type":"image","variants":[{"url":"\/images\/com.adsdk.core\/03-user-tagging-conversion-tracking-screenshot.png","traits":["1x","light"]}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-presentation-layer":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-presentation-layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-presentation-layer","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a presentation layer"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements":{"title":"Creating interstitial advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Creating-interstitial-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Creating-interstitial-advertisements","role":"pseudoSymbol","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"type":"section"},"09-user-tagging-conversion-tracking.swift":{"fileType":"swift","identifier":"09-user-tagging-conversion-tracking.swift","highlights":[{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59}],"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                        .task { await viewModel.onBasket() }","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","","    func onBasket() async {","        let request = TagRequest(","            [.init(key: \"MyTutorialStore\", subkey: \"Movies\", value: \"\\(id)\")],","            timeout: nil \/\/ Can be skipped","        )","","        do {","            try await service.tagUser(request: request)","        } catch {","            print(\"Error during user tagging: \\(error.localizedDescription)\")","        }","    }","}"],"type":"file","syntax":"swift","fileName":"AdCell.swift"},"02-user-tagging-conversion-tracking.swift":{"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    let id: Int","    var state: CellState = .loading","","    private var advertisement: Advertisement?","","    init(id: Int, _ service: AdService, _ request: AdRequest) async {","        self.id = id","","        do {","            let advertisement = try await getAdvertisement(service, request)","            self.advertisement = advertisement","","            let ratio = advertisement.metadata?.aspectRatio ?? 2","","            state = .loaded(advertisement, aspectRatio: ratio)","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ service: AdService,","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/*...*\/}","}","\/\/ ..."],"syntax":"swift","type":"file","identifier":"02-user-tagging-conversion-tracking.swift","fileName":"AdCell.swift","fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/First-Steps-For-Working-With-AdSDK":{"title":"First steps for working with AdSDK","kind":"project","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/First-Steps-For-Working-With-AdSDK","url":"\/tutorials\/adsdkcore\/first-steps-for-working-with-adsdk","role":"project","estimatedTime":"15min","abstract":[{"type":"text","text":"This tutorial will guide you the first steps for working with the "},{"code":"AdSDK","type":"codeVoice"},{"type":"text","text":" - creating an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService"},{"type":"text","text":"."}],"type":"topic"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Extending-the-SDK-with-your-custom-advertisements":{"role":"article","kind":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Extending-the-SDK-with-your-custom-advertisements","url":"\/tutorials\/meet-adsdk\/extending-the-sdk-with-your-custom-advertisements","abstract":[],"title":"Extending the SDK with your custom advertisements","type":"topic"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management":{"kind":"project","role":"project","title":"AdSDK Cache Management","url":"\/tutorials\/adsdkcore\/adsdk-cache-management","type":"topic","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"estimatedTime":"10min","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management"},"11-user-tagging-conversion-tracking.swift":{"fileType":"swift","identifier":"11-user-tagging-conversion-tracking.swift","highlights":[{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31}],"content":["\/\/ ...","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {\/* ... *\/}","}","","extension BasketViewModel {","    func onIncreaseQuantity() {\/* ... *\/}","    func onDecreaseQuantity() {\/* ... *\/}","    func onPurchase() async {","        let request = TrackingRequest(","            landingpageId: .zero,","            trackingspotId: .zero,","            orderId: \"My purchase id\",","            price: Float(price), \/\/ Can be skipped","            total: Float(total), \/\/ Can be skipped","            quantity: UInt32(quantity), \/\/ Can be skipped","            itemNumber: \"\\(id)\", \/\/ Can be skipped","            description: nil, \/\/ Can be skipped","            timeout: nil \/\/ Can be skipped","        )","    }","}"],"type":"file","syntax":"swift","fileName":"Basket.swift"},"doc://com.adsdk.core/documentation/AdSDKCore/TrackingRequest":{"title":"TrackingRequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TrackingRequest","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Trigger a request for conversion tracking.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"TrackingRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/trackingrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events":{"role":"pseudoSymbol","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true},{"type":"text","text":" and how we can interact with them."}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitor-and-process-custom-advertising-events","type":"section","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitor-and-process-custom-advertising-events","kind":"section","title":"Monitor and process custom advertising events"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad","kind":"project","role":"project","type":"topic","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"estimatedTime":"25min","title":"Create and display interstitial ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Limiting-the-cache-size":{"title":"Limiting the cache size","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Limiting-the-cache-size","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Limiting-the-cache-size","role":"pseudoSymbol","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Tracking-ad-visibility":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Tracking-ad-visibility","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Tracking-ad-visibility","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"title":"Tracking ad visibility"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Presenting-interstitial-ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Presenting-interstitial-ad","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application.","type":"text"}],"title":"Presenting interstitial ad"},"06-user-tagging-conversion-tracking.swift":{"content":["\/\/ ...","\/\/ MARK: - View","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    \/\/ ...","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/* ... *\/}","}"],"syntax":"swift","type":"file","identifier":"06-user-tagging-conversion-tracking.swift","fileName":"AdCell.swift","fileType":"swift","highlights":[]},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Modifying-global-parameters":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Modifying-global-parameters","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Modifying-global-parameters","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"We already know how to create and perform ","type":"text"},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"title":"Modifying global parameters"},"doc://com.adsdk.core/tutorials/AdSDKCore/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Monitor-And-Process-Ad-Related-Events#Monitoring-of-ad-related-events","url":"\/tutorials\/adsdkcore\/monitor-and-process-ad-related-events#Monitoring-of-ad-related-events","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","isActive":true,"type":"reference"},{"type":"text","text":" do a lot of work under the hood and can send messages about them to the app. In turn, you can monitor and react to it in some way. In this tutorial, we’ll look at what events are handled by "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/Advertisement","type":"reference","isActive":true},{"text":" and how we can interact with them.","type":"text"}],"title":"Monitoring of ad-related events"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/trackingRequest(_:)":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/trackingRequest(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trackingRequest","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9AdSDKCore15TrackingRequestV","text":"TrackingRequest","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A5ErrorO","text":"AdError"},{"kind":"text","text":")"}],"abstract":[{"text":"Trigger a request for conversion tracking.","type":"text"}],"url":"\/documentation\/adsdkcore\/adservice\/trackingrequest(_:)","role":"symbol","kind":"symbol","title":"trackingRequest(_:)"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#Conversion-tracking":{"title":"Conversion tracking","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#Conversion-tracking","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#Conversion-tracking","role":"pseudoSymbol","abstract":[{"type":"text","text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality."}],"type":"section"},"doc://com.adsdk.core/tutorials/Meet-AdSDK/Working-with-the-built-in-capabilities-of-the-SDK":{"title":"Working with the built-in capabilities of the SDK","kind":"article","identifier":"doc:\/\/com.adsdk.core\/tutorials\/Meet-AdSDK\/Working-with-the-built-in-capabilities-of-the-SDK","url":"\/tutorials\/meet-adsdk\/working-with-the-built-in-capabilities-of-the-sdk","role":"article","abstract":[],"type":"topic"},"03-user-tagging-conversion-tracking.swift":{"fileType":"swift","identifier":"03-user-tagging-conversion-tracking.swift","highlights":[{"line":24},{"line":25},{"line":32},{"line":35}],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            AdView(advertisement: advertisement)","                .aspectRatio(aspectRatio, contentMode: .fit)","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class AdCellViewModel: Identifiable {","    let id: Int","    let price: Int = .random(in: 10...200)","    let service: AdService","    var state: CellState = .loading","","    private var advertisement: Advertisement?","","    init(id: Int, _ service: AdService, _ request: AdRequest) async {","        self.id = id","        self.service = service","","        do {","            let advertisement = try await getAdvertisement(request)","            self.advertisement = advertisement","","            let ratio = advertisement.metadata?.aspectRatio ?? 2","","            state = .loaded(advertisement, aspectRatio: ratio)","","        } catch {","            state = .error(error.localizedDescription)","        }","    }","}","","private extension AdCellViewModel {","    func getAdvertisement(","        _ request: AdRequest","    ) async throws(AdError) -> Advertisement {\/*...*\/}","}","\/\/ ..."],"type":"file","syntax":"swift","fileName":"AdCell.swift"},"doc://com.adsdk.core/documentation/AdSDKCore/AdRequest":{"title":"AdRequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AdRequest","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Describes a request to load an advertisement.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AdRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/adrequest","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest"},"02-user-tagging-conversion-tracking-screenshot.png":{"alt":"A phone screen with a form that displays a shopping cart with id, price, quantity, total cost, and a purchase button.","identifier":"02-user-tagging-conversion-tracking-screenshot.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.adsdk.core\/02-user-tagging-conversion-tracking-screenshot.png"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Creating-a-business-layer":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Creating-a-business-layer","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Creating-a-business-layer","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Creating a business layer","type":"section"},"05-user-tagging-conversion-tracking.swift":{"fileType":"swift","identifier":"05-user-tagging-conversion-tracking.swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"content":["\/\/ ...","struct AdCell: View {","    @State var viewModel: AdCellViewModel","","    var body: some View {","        switch viewModel.state {","        case .loading:","            Text(\"Loading\")","        case let .loaded(advertisement, aspectRatio):","            VStack {","                AdView(advertisement: advertisement)","                    .aspectRatio(aspectRatio, contentMode: .fit)","","                HStack {","                    Text(\"Price: €\\(viewModel.price)\")","                    Spacer()","                    NavigationLink(\"Add to basket\") {","                        Basket(viewModel: .init(","                            id: viewModel.id,","                            price: viewModel.price,","                            viewModel.service","                        ))","                    }","                    .buttonStyle(.bordered)","                }","                .padding()","            }","","        case .error(let description):","            Text(\"Error: \\(description)\")","        }","    }","}","\/\/ ..."],"type":"file","syntax":"swift","fileName":"AdCell.swift"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-inline-advertisements":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-inline-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-inline-advertisements","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"title":"Creating inline advertisements","type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Interstitial-Ad#Hiding-interstitial-ad","url":"\/tutorials\/adsdkcore\/create-and-display-interstitial-ad#Hiding-interstitial-ad","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"A full-screen advertisement that fills the host app’s interface is known as an interstitial ad. In this tutorial we are going to add interstitial ad into our application."}],"title":"Hiding interstitial ad"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK":{"title":"Registering a renderer in the SDK","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Registering-a-renderer-in-the-SDK","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Registering-a-renderer-in-the-SDK","role":"pseudoSymbol","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Custom-Handling-Of-Target-Tap-URLs":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Custom-Handling-Of-Target-Tap-URLs","url":"\/tutorials\/adsdkcore\/custom-handling-of-target-tap-urls","kind":"project","role":"project","type":"topic","abstract":[{"text":"Sometimes you need to handle taps in your own way. For example, to display ads in the internal browser in the app. In this tutorial, we will learn how to customise the SDK’s tap handling behaviour.","type":"text"}],"estimatedTime":"20min","title":"Custom handling of target tap URLs"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types":{"type":"topic","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","type":"reference","isActive":true},{"text":", and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request.","type":"text"}],"url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types","role":"project","estimatedTime":"20min","kind":"project","title":"Global parameters for all request types"},"doc://com.adsdk.core/tutorials/AdSDKCore/User-Tagging-And-Conversion-Tracking#User-tagging":{"role":"pseudoSymbol","abstract":[{"text":"AdSDK provides powerful functionality for user tagging and conversion tracking. In this tutorial, we will look at this functionality.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/User-Tagging-And-Conversion-Tracking#User-tagging","type":"section","url":"\/tutorials\/adsdkcore\/user-tagging-and-conversion-tracking#User-tagging","kind":"section","title":"User tagging"},"https://github.com/VM-Mobile-SDK/nextgen-adsdk-ios-tutorial/tree/built-in-capabilities/user-and-conversion-tracking":{"identifier":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking","titleInlineContent":[{"type":"text","text":"this project"}],"type":"link","url":"https:\/\/github.com\/VM-Mobile-SDK\/nextgen-adsdk-ios-tutorial\/tree\/built-in-capabilities\/user-and-conversion-tracking","title":"this project"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising":{"estimatedTime":"1hr 30min","role":"project","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising","type":"topic","url":"\/tutorials\/adsdkcore\/creating-customised-advertising","kind":"project","title":"Creating customised advertising"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Defining-the-size-of-the-inline-ad","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Defining-the-size-of-the-inline-ad","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"title":"Defining the size of the inline ad","type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/AdService/tagUser(request:)":{"kind":"symbol","abstract":[{"type":"text","text":"Trigger a request to “tag” a user."}],"title":"tagUser(request:)","url":"\/documentation\/adsdkcore\/adservice\/taguser(request:)","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdService\/tagUser(request:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tagUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TagRequest","preciseIdentifier":"s:9AdSDKCore10TagRequestV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"AdError","kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore0A5ErrorO"},{"kind":"text","text":")"}]},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Event-management":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Event-management","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Event-management","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads."}],"title":"Event management"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads","kind":"project","role":"project","type":"topic","abstract":[{"text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy.","type":"text"}],"estimatedTime":"45min","title":"Create and display inline ads"},"doc://com.adsdk.core/tutorials/AdSDKCore/Creating-Customised-Advertising#Advanced-management-of-advertising-resources":{"title":"Advanced management of advertising resources","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Creating-Customised-Advertising#Advanced-management-of-advertising-resources","url":"\/tutorials\/adsdkcore\/creating-customised-advertising#Advanced-management-of-advertising-resources","role":"pseudoSymbol","abstract":[{"text":"In this tutorial, we will learn how to create custom ads using AdSDK. This process is the same for both inline and interstitial ads.","type":"text"}],"type":"section"},"doc://com.adsdk.core/documentation/AdSDKCore/TagRequest":{"kind":"symbol","title":"TagRequest","type":"topic","abstract":[{"type":"text","text":"Describes a request to “tag” a user."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TagRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TagRequest","kind":"identifier"}],"url":"\/documentation\/adsdkcore\/tagrequest"},"doc://com.adsdk.core/tutorials/AdSDKCore/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements":{"title":"Creating and displaying a list of advertisements","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Create-And-Display-Inline-Ads#Creating-and-displaying-a-list-of-advertisements","url":"\/tutorials\/adsdkcore\/create-and-display-inline-ads#Creating-and-displaying-a-list-of-advertisements","role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial will guide you how to create and display inline ads. An inline ad is an ad created to be displayed in your view hierarchy."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/Global-Parameters-For-All-Request-Types#Preparing-the-app":{"title":"Preparing the app","kind":"section","identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/Global-Parameters-For-All-Request-Types#Preparing-the-app","url":"\/tutorials\/adsdkcore\/global-parameters-for-all-request-types#Preparing-the-app","role":"pseudoSymbol","abstract":[{"type":"text","text":"We already know how to create and perform "},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/AdRequest","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TagRequest","isActive":true,"type":"reference"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TrackingRequest"},{"type":"text","text":". However, each of them can have additional parameters, which are called global parameters because they are specified globally for all requests. The SDK provides the ability to add global parameters once so that you don’t have to copy them when creating each request."}],"type":"section"},"doc://com.adsdk.core/tutorials/AdSDKCore/AdSDK-Cache-Management#Flushing-the-cache":{"identifier":"doc:\/\/com.adsdk.core\/tutorials\/AdSDKCore\/AdSDK-Cache-Management#Flushing-the-cache","url":"\/tutorials\/adsdkcore\/adsdk-cache-management#Flushing-the-cache","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"The SDK supports a persistent cache with resources related to ad, these can be banners or other resources, depending on the type of ad. In this tutorial, we’ll look at how an application developer can control the cache."}],"title":"Flushing the cache"},"01-user-tagging-conversion-tracking.swift":{"highlights":[],"identifier":"01-user-tagging-conversion-tracking.swift","fileType":"swift","fileName":"Basket.swift","content":["import SwiftUI","import AdSDKCore","import AdSDKSwiftUI","","\/\/ MARK: - View","struct Basket: View {","    @State var viewModel: BasketViewModel","","    var body: some View {","        Form {","            Section {","                LabeledContent(\"Item id\", value: \"\\(viewModel.id)\")","                LabeledContent(\"Price\", value: \"€\\(viewModel.price)\")","                LabeledContent(\"Quantity\", value: \"\\(viewModel.quantity)\")","                Button(\"+\", action: viewModel.onIncreaseQuantity)","                Button(\"-\", action: viewModel.onDecreaseQuantity)","                LabeledContent(\"Total\", value: \"€\\(viewModel.total)\")","            }","","            Section {","                Button(\"Purchase\") {","                    Task { await viewModel.onPurchase() }","                }","            }","","            if let error = viewModel.error {","                Text(error)","                    .listRowInsets(EdgeInsets())","                    .foregroundStyle(.red)","                    .frame(","                        maxWidth: .infinity,","                        maxHeight: .infinity,","                        alignment: .center","                    )","                    .background(Color(UIColor.systemGroupedBackground))","            }","        }","        .navigationTitle(\"Basket\")","    }","}","","\/\/ MARK: - View Model","@Observable","@MainActor","final class BasketViewModel {","    let id: Int","    let price: Int","","    var quantity = 1","    var total: Int { price * quantity }","    var error: String?","","    private let service: AdService","","    init(id: Int, price: Int, _ service: AdService) {","        self.id = id","        self.price = price","        self.service = service","    }","}","","extension BasketViewModel {","    func onIncreaseQuantity() { quantity += 1 }","    func onDecreaseQuantity() {","        guard quantity > 1 else { return }","","        quantity -= 1","    }","","    func onPurchase() async {","","    }","}"],"type":"file","syntax":"swift"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"}]}]}