{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"silentTap"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The URL whose redirect should be processed.","type":"text"}]}],"name":"url"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This processing approach is the most different from all the others, as it only processes the redirect of"},{"type":"text","text":" "},{"text":"the passed URL, and ignores the target URL. This approach can only be useful if you know the target","type":"text"},{"type":"text","text":" "},{"type":"text","text":"URL and want to hide the redirect that the ad server uses for tracking from the user."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, you know that you have the following URL that should be processed when an advert is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tapped:"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/adition.com\/redi?lid=0&userid=0&sr=0&gk=0&clickurl=target.com"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With the query item "},{"code":"clickurl","type":"codeVoice"},{"text":", you know that your target URL to be shown to the user is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"https:\/\/target.com."}]},{"inlineContent":[{"type":"text","text":"In this case, you can pass the URL for the redirect to the SDK for processing as"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","isActive":true},{"text":" and the target URL as ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","isActive":true},{"text":". Using this approach, the user","type":"text"},{"text":" ","type":"text"},{"text":"will not see the redirect, but it will be executed without  their knowledge.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["nonisolated func onTap() async {","    let components = URLComponents(","        url: url,","        resolvingAgainstBaseURL: false","    )","","    let targetURL = components?","        .queryItems?","        .last { $0.name == \"clickurl\" }?","        .value","","    guard let targetURL else {","        \/\/ If we can't get target URL – just process tap with passed URL.","        try? await adControllerDelegate?.performTap(.tapURL(.init(url)))","        return","    }","","    \/\/ If we can – we process redirect and tap as a separate processes.","    await withTaskGroup(","        of: Void.self","    ) { [weak adControllerDelegate] group in","        group.addTask {","            \/\/ Process redirect","            try? await adControllerDelegate?.performTap(","                .silentTap(url)","            )","        }","","        group.addTask {","            \/\/ Process tap","            try? await adControllerDelegate?.performTap(","                .tapURL(.init(url))","            )","        }","","        try await group.waitForAll()","    }","}"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/adsdkcore\/tapevent\/silenttap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent"]]},"sections":[],"identifier":{"url":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":")","kind":"text"}],"title":"TapEvent.silentTap(_:)","externalID":"s:9AdSDKCore8TapEventO06silentC0yAC10Foundation3URLVcACmF","modules":[{"name":"AdSDKCore"}],"symbolKind":"case","role":"symbol","roleHeading":"Case"},"kind":"symbol","abstract":[{"type":"text","text":"Processes the redirect of the passed URL without processing the target URL."}],"references":{"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/tapURL(_:)":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tapURL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:9AdSDKCore6TapURLV","text":"TapURL"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/tapURL(_:)","url":"\/documentation\/adsdkcore\/tapevent\/tapurl(_:)","abstract":[{"type":"text","text":"Processing tap using passed "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL"},{"type":"text","text":"."}],"title":"TapEvent.tapURL(_:)"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent":{"navigatorTitle":[{"text":"TapEvent","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TapEvent","kind":"identifier"}],"type":"topic","url":"\/documentation\/adsdkcore\/tapevent","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent","abstract":[{"text":"An enum with all types of ad tap processing.","type":"text"}],"title":"TapEvent","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore":{"kind":"symbol","abstract":[{"type":"text","text":"Manage, display, and create your custom advertisements on iOS using cutting-edge technologies such as Structured Concurrency, and SwiftUI."}],"title":"AdSDKCore","url":"\/documentation\/adsdkcore","type":"topic","identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore","role":"collection"},"doc://com.adsdk.core/documentation/AdSDKCore/TapEvent/silentTap(_:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"silentTap","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/adsdkcore\/tapevent\/silenttap(_:)","abstract":[{"text":"Processes the redirect of the passed URL without processing the target URL.","type":"text"}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapEvent\/silentTap(_:)","title":"TapEvent.silentTap(_:)","role":"symbol"},"doc://com.adsdk.core/documentation/AdSDKCore/TapURL":{"title":"TapURL","abstract":[{"type":"text","text":"A structure that describes the URL associated with an advertisement tap event."}],"identifier":"doc:\/\/com.adsdk.core\/documentation\/AdSDKCore\/TapURL","navigatorTitle":[{"kind":"identifier","text":"TapURL"}],"type":"topic","url":"\/documentation\/adsdkcore\/tapurl","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TapURL"}],"kind":"symbol"}}}